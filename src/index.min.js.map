{"version":3,"sources":["node_modules/web-build-tasks/node_modules/browserify/node_modules/browser-pack/_prelude.js","app/src/highlight.coffee","index.min.js","app/src/index.coffee","app/src/spinner.coffee","app/src/web-rtc.coffee","node_modules/aye-aye/lib/game.js","node_modules/aye-aye/lib/games/bin-tic-tac-toe.js","node_modules/aye-aye/lib/games/ultimate-tic-tac-toe.js","node_modules/aye-aye/lib/minimax.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","$","jQuery","fn","highlight","this","each","el","width","outerWidth","height","outerHeight","css","position","left","offset","top","background-color","opacity","z-index","appendTo","fadeOut","queue","remove","2","O","RTC","UltimateTicTacToe","X","decode","hideSpinner","ref","ref1","showSpinner","checkGameOver","computerPlayer","createPlayerO","createPlayerX","game","humanPlayer","lastAction","markWins","newGame","next","playAction","playable","playerO","playerText","playerX","players","remotePlayer","setup","swapPlayers","teardown","unplayable","className","j","k","len","ref2","ref3","nextPlayer","possibleActions","addClass","removeClass","off","results","wonBy","wonClass","winOn","at","push","endText","isTerminal","isWin","text","modal","toLowerCase","action","play","player","human","peer","starter AI","smart AI","playerName","$o","$x","tmp","on","$btn","$player","currentPlayerName","playerFor","data","int","parseAction","parseInt","match","done","playableClassName","$tile","get","id","agentName","depth","worker","Worker","onmessage","postMessage","command","args","terminate","enable","v","prop","greet","ondatachannelopen","oPlayer","xPlayer","isHost","ondisconnected","sendNew","send","lastPlayedPosition","./highlight","./spinner","./web-rtc","aye-aye/lib/games/bin-tic-tac-toe","aye-aye/lib/games/ultimate-tic-tac-toe","3","spinner","spinnerThresholdMs","spinnerTimeout","Spinner","lines","radius","target","setTimeout","spin","clearTimeout","stop","4","Guest","Host","RTCPeerConnection","RTCSessionDescription","configuration","constraints","window","mozRTCPeerConnection","webkitRTCPeerConnection","msRTCPeerConnection","mozRTCSessionDescription","webkitRTCSessionDescription","msRTCSessionDescription","iceServers","url","optional","DtlsSrtpKeyAgreement","peerConnection","dataChannel","onicecandidate","_this","candidate","onoffercreated","JSON","stringify","localDescription","prototype","setupDataChannel","createDataChannel","reliable","onopen","oniceconnectionstatechange","iceConnectionState","onchannelopen","parse","createOffer","offerDesc","setLocalDescription","console","warn","acceptAnswer","answerJSON","setRemoteDescription","onanswercreated","ondatachannel","channel","offer","offerJSON","createAnswer","answerDesc","log","host","gameRef","key","Math","random","Firebase","onDisconnect","set","location","hash","href","snap","val","answer","m","guest","isGuest","substring","update","once","5","P1","P2","6","BinTicTacToe","MAX","MIN","_","allPlays","bin","changedOn","columns","diagonals","discountedUtility","empty","evaluate","evaluateCache","isFull","masks","openPositions","opponent","positions","rows","utility","γ","slice","W","0","res","concat","ms","w","v1","v2","pow","len1","score","x","value1","depth1","value","create","arguments","func","ctor","child","result","apply","Object","winner","nextAgent","positionForAction","constructor","toString","results1","join","../minimax","7","columnsU","diagonalsU","isWinU","linesU","rowsU","ultimateEmpty","every","a1","who","boardsForNextPlay","js","ij","actions","arg","bri","ri","strRows","vs","p","./bin-tic-tac-toe","8","Limit","MinimaxAgent","Number","MAX_SAFE_INTEGER","rootAgent","nextAction","state","bestAction","minimax","α","β","ply","maxi","mini","nextValue","ref4","ref5","successor","max","min","./game"],"mappings":"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","file":"index.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","$ = jQuery\r\n\r\n$.fn.highlight = ->\r\n  ($ this).each ->\r\n    el = $ this\r\n    $ '<div/>'\r\n      .width el.outerWidth()\r\n      .height el.outerHeight()\r\n      .css\r\n        'position': 'absolute'\r\n        'left': el.offset().left\r\n        'top': el.offset().top\r\n        'background-color': '#ffff77'\r\n        'opacity': .7\r\n        'z-index': 10\r\n      .appendTo 'body'\r\n      .fadeOut 1000\r\n      .queue -> ($ this).remove()\r\n","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nvar $;\n\n$ = jQuery;\n\n$.fn.highlight = function() {\n  return ($(this)).each(function() {\n    var el;\n    el = $(this);\n    return $('<div/>').width(el.outerWidth()).height(el.outerHeight()).css({\n      'position': 'absolute',\n      'left': el.offset().left,\n      'top': el.offset().top,\n      'background-color': '#ffff77',\n      'opacity': .7,\n      'z-index': 10\n    }).appendTo('body').fadeOut(1000).queue(function() {\n      return ($(this)).remove();\n    });\n  });\n};\n\n\n},{}],2:[function(require,module,exports){\nvar $, O, RTC, UltimateTicTacToe, X, decode, hideSpinner, ref, ref1, showSpinner;\n\n$ = jQuery;\n\nref = require('aye-aye/lib/games/bin-tic-tac-toe'), X = ref.X, O = ref.O, decode = ref.decode;\n\nUltimateTicTacToe = require('aye-aye/lib/games/ultimate-tic-tac-toe').UltimateTicTacToe;\n\nref1 = require('./spinner'), showSpinner = ref1.showSpinner, hideSpinner = ref1.hideSpinner;\n\nrequire('./highlight');\n\nRTC = require('./web-rtc').RTC;\n\n$(function() {\n  var checkGameOver, computerPlayer, createPlayerO, createPlayerX, game, humanPlayer, lastAction, markWins, newGame, next, playAction, playable, playerO, playerText, playerX, players, remotePlayer, setup, swapPlayers, teardown, unplayable;\n  game = null;\n  lastAction = null;\n  playable = function() {\n    var className, i, j, k, len, ref2, ref3;\n    className = game.nextPlayer === X ? 'x-playable-tile' : 'o-playable-tile';\n    ref2 = game.possibleActions();\n    for (k = 0, len = ref2.length; k < len; k++) {\n      ref3 = ref2[k], i = ref3[0], j = ref3[1];\n      $(\"#\" + i + \"\\\\,\" + j).addClass(className);\n    }\n    return className;\n  };\n  unplayable = function() {\n    return $('.tile').removeClass('x-playable-tile').removeClass('o-playable-tile').removeClass('human-playable-tile').off('click');\n  };\n  markWins = function() {\n    var i, j, k, l, len, ref2, results, wonBy, wonClass;\n    results = [];\n    for (i = k = 0; k < 9; i = ++k) {\n      wonBy = null;\n      ref2 = game.winOn(i);\n      for (l = 0, len = ref2.length; l < len; l++) {\n        j = ref2[l];\n        wonBy = game.at(i, j);\n        wonClass = wonBy === X ? 'x-won-tile' : 'o-won-tile';\n        ($(\"#\" + i + \"\\\\,\" + j)).addClass(wonClass);\n      }\n      if (wonBy != null) {\n        wonClass = wonBy === X ? 'x-won-board' : 'o-won-board';\n        results.push(($('#' + i)).addClass(wonClass));\n      } else {\n        results.push(void 0);\n      }\n    }\n    return results;\n  };\n  checkGameOver = function() {\n    var endText;\n    if (!game.isTerminal()) {\n      return false;\n    }\n    endText = (function() {\n      switch (false) {\n        case !game.isWin(X):\n          return 'X Wins!';\n        case !game.isWin(O):\n          return 'O Wins!';\n        default:\n          return 'Draw!';\n      }\n    })();\n    $('#end-text').text(endText);\n    $('#modal-game-over').modal('show');\n    return true;\n  };\n  playerText = function() {\n    return (decode(game.nextPlayer)).toLowerCase();\n  };\n  playAction = function(action) {\n    var i, j;\n    i = action[0], j = action[1];\n    hideSpinner();\n    $(\"#\" + i + \"\\\\,\" + j).text(playerText()).highlight();\n    game = game.play(action);\n    lastAction = action;\n    return next();\n  };\n  playerX = null;\n  playerO = null;\n  next = function() {\n    var player;\n    unplayable();\n    markWins();\n    player = game.nextPlayer === X ? playerX : playerO;\n    return player.play();\n  };\n  players = {\n    human: function() {\n      return humanPlayer();\n    },\n    peer: function() {\n      return remotePlayer();\n    },\n    'starter AI': function() {\n      return computerPlayer('monte-carlo', 500);\n    },\n    'smart AI': function() {\n      return computerPlayer('minimax', 3);\n    }\n  };\n  createPlayerX = function() {\n    var playerName;\n    playerName = ($('#btn-player-x')).text();\n    return players[playerName]();\n  };\n  createPlayerO = function() {\n    var playerName;\n    playerName = ($('#btn-player-o')).text();\n    return players[playerName]();\n  };\n  swapPlayers = function() {\n    var $o, $x, tmp;\n    $x = $('#btn-player-x');\n    $o = $('#btn-player-o');\n    tmp = $x.text();\n    $x.text($o.text());\n    return $o.text(tmp);\n  };\n  $('.player').on('click', function() {\n    var $btn, $player, currentPlayerName, playerFor, playerName;\n    $player = $(this);\n    playerFor = $player.data('player-for');\n    $btn = $(\"#btn-player-\" + playerFor);\n    playerName = $player.text();\n    currentPlayerName = $btn.text();\n    if (currentPlayerName !== playerName) {\n      $btn.text(playerName);\n      return setup();\n    }\n  });\n  humanPlayer = function() {\n    var int, parseAction;\n    int = function(s) {\n      return parseInt(s, 10);\n    };\n    parseAction = function(text) {\n      var match;\n      match = text.match(/(\\d),(\\d)/);\n      return [int(match[1]), int(match[2])];\n    };\n    return {\n      setup: function(done) {\n        return done();\n      },\n      play: function() {\n        var playableClassName;\n        if (checkGameOver()) {\n          return;\n        }\n        playableClassName = playable();\n        return $(\".\" + playableClassName).addClass('human-playable-tile').on('click', function() {\n          var $tile, action;\n          $tile = $(this);\n          action = parseAction($tile.get(0).id);\n          return playAction(action);\n        });\n      }\n    };\n  };\n  computerPlayer = function(agentName, depth) {\n    var worker;\n    if (agentName == null) {\n      agentName = 'minimax';\n    }\n    if (depth == null) {\n      depth = 3;\n    }\n    worker = new Worker('src/ai-worker.min.js');\n    return {\n      setup: function(done) {\n        worker.onmessage = function(e) {\n          return playAction(e.data.action);\n        };\n        worker.postMessage({\n          command: 'setup',\n          args: {\n            agentName: agentName,\n            depth: depth\n          }\n        });\n        return done();\n      },\n      play: function() {\n        if (checkGameOver()) {\n          return;\n        }\n        playable();\n        showSpinner();\n        return worker.postMessage({\n          command: 'play',\n          args: {\n            lastAction: lastAction\n          }\n        });\n      },\n      teardown: function() {\n        return worker.terminate();\n      }\n    };\n  };\n  $.fn.enable = function(v) {\n    if (v == null) {\n      v = true;\n    }\n    return ($(this)).prop('disabled', !v);\n  };\n  RTC.greet();\n  RTC.ondatachannelopen = function() {\n    var oPlayer, ref2, xPlayer;\n    ref2 = RTC.isHost ? ['human', 'peer'] : ['peer', 'human'], xPlayer = ref2[0], oPlayer = ref2[1];\n    $('#btn-player-x').text(xPlayer).enable(false);\n    $('#btn-player-o').text(oPlayer).enable(false);\n    return setup();\n  };\n  RTC.ondisconnected = function() {\n    $('#btn-player-x').text('human').enable();\n    $('#btn-player-o').text('smart AI').enable();\n    return setup();\n  };\n  remotePlayer = function() {\n    var sendNew;\n    sendNew = function() {\n      return RTC.send(\"new\");\n    };\n    ($('#btn-new-game')).on('click', sendNew);\n    RTC.onmessage = function(data) {\n      if (data === \"new\") {\n        return newGame();\n      } else {\n        return playAction(data);\n      }\n    };\n    return {\n      setup: function(done) {\n        return done();\n      },\n      play: function() {\n        if (!checkGameOver()) {\n          playable();\n          showSpinner();\n        }\n        if (lastAction != null) {\n          return RTC.send(lastAction);\n        }\n      },\n      teardown: function() {\n        return ($('#btn-new-game')).off('click', sendNew);\n      }\n    };\n  };\n  setup = function() {\n    var ref2;\n    teardown();\n    game = new UltimateTicTacToe;\n    game.lastPlayedPosition = null;\n    lastAction = null;\n    ref2 = [createPlayerX(), createPlayerO()], playerX = ref2[0], playerO = ref2[1];\n    return playerX.setup(function() {\n      return playerO.setup(function() {\n        return next();\n      });\n    });\n  };\n  teardown = function() {\n    if (playerX != null) {\n      if (typeof playerX.teardown === \"function\") {\n        playerX.teardown();\n      }\n    }\n    if (playerO != null) {\n      if (typeof playerO.teardown === \"function\") {\n        playerO.teardown();\n      }\n    }\n    hideSpinner();\n    $('.tic-tac-toe').removeClass('x-won-board').removeClass('o-won-board');\n    return $('.tile').removeClass('x-won-tile').removeClass('o-won-tile').text('');\n  };\n  newGame = function() {\n    swapPlayers();\n    return setup();\n  };\n  $('#btn-new-game').on('click', newGame);\n  return setup();\n});\n\n\n},{\"./highlight\":1,\"./spinner\":3,\"./web-rtc\":4,\"aye-aye/lib/games/bin-tic-tac-toe\":6,\"aye-aye/lib/games/ultimate-tic-tac-toe\":7}],3:[function(require,module,exports){\nvar $, hideSpinner, showSpinner, spinner, spinnerThresholdMs, spinnerTimeout;\n\n$ = jQuery;\n\nspinner = new Spinner({\n  lines: 9,\n  radius: 7,\n  length: 7\n});\n\nspinnerTimeout = null;\n\nspinnerThresholdMs = 100;\n\nshowSpinner = function() {\n  var target;\n  if (spinnerTimeout == null) {\n    target = ($('#spinner')).get(0);\n    return spinnerTimeout = setTimeout((function() {\n      return spinner.spin(target);\n    }), spinnerThresholdMs);\n  }\n};\n\nhideSpinner = function() {\n  if (spinnerTimeout != null) {\n    clearTimeout(spinnerTimeout);\n  }\n  spinner.stop();\n  return spinnerTimeout = null;\n};\n\nmodule.exports = {\n  showSpinner: showSpinner,\n  hideSpinner: hideSpinner\n};\n\n\n},{}],4:[function(require,module,exports){\nvar Guest, Host, RTC, RTCPeerConnection, RTCSessionDescription, configuration, constraints;\n\nRTCPeerConnection = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection || window.msRTCPeerConnection;\n\nRTCSessionDescription = window.RTCSessionDescription || window.mozRTCSessionDescription || window.webkitRTCSessionDescription || window.msRTCSessionDescription;\n\nconfiguration = {\n  iceServers: [\n    {\n      url: 'stun:23.21.150.121'\n    }\n  ]\n};\n\nconstraints = {\n  optional: [\n    {\n      DtlsSrtpKeyAgreement: true\n    }\n  ]\n};\n\nHost = (function() {\n  function Host() {\n    this.peerConnection = new RTCPeerConnection(configuration, constraints);\n    this.dataChannel = null;\n    this.peerConnection.onicecandidate = (function(_this) {\n      return function(e) {\n        if (e.candidate === null) {\n          return _this.onoffercreated(JSON.stringify(_this.peerConnection.localDescription));\n        }\n      };\n    })(this);\n  }\n\n  Host.prototype.setupDataChannel = function() {\n    this.dataChannel = this.peerConnection.createDataChannel('data', {\n      reliable: true\n    });\n    this.dataChannel.onopen = (function(_this) {\n      return function() {\n        _this.peerConnection.oniceconnectionstatechange = function() {\n          if (_this.peerConnection.iceConnectionState === 'disconnected') {\n            return typeof _this.ondisconnected === \"function\" ? _this.ondisconnected() : void 0;\n          }\n        };\n        return _this.onchannelopen();\n      };\n    })(this);\n    return this.dataChannel.onmessage = (function(_this) {\n      return function(e) {\n        return _this.onmessage(JSON.parse(e.data));\n      };\n    })(this);\n  };\n\n  Host.prototype.createOffer = function() {\n    this.setupDataChannel();\n    return this.peerConnection.createOffer(((function(_this) {\n      return function(offerDesc) {\n        return _this.peerConnection.setLocalDescription(offerDesc);\n      };\n    })(this)), function() {\n      return console.warn(\"Couldn't create offer\");\n    });\n  };\n\n  Host.prototype.acceptAnswer = function(answerJSON) {\n    return this.peerConnection.setRemoteDescription(new RTCSessionDescription(JSON.parse(answerJSON)));\n  };\n\n  Host.prototype.send = function(data) {\n    return this.dataChannel.send(JSON.stringify(data));\n  };\n\n  return Host;\n\n})();\n\nGuest = (function() {\n  function Guest() {\n    this.peerConnection = new RTCPeerConnection(configuration, constraints);\n    this.dataChannel = null;\n    this.peerConnection.onicecandidate = (function(_this) {\n      return function(e) {\n        if (e.candidate === null) {\n          return _this.onanswercreated(JSON.stringify(_this.peerConnection.localDescription));\n        }\n      };\n    })(this);\n    this.peerConnection.ondatachannel = (function(_this) {\n      return function(e) {\n        _this.dataChannel = e.channel || e;\n        _this.dataChannel.onopen = function() {\n          _this.peerConnection.oniceconnectionstatechange = function() {\n            if (_this.peerConnection.iceConnectionState === 'disconnected') {\n              return typeof _this.ondisconnected === \"function\" ? _this.ondisconnected() : void 0;\n            }\n          };\n          return _this.onchannelopen();\n        };\n        return _this.dataChannel.onmessage = function(e) {\n          return _this.onmessage(JSON.parse(e.data));\n        };\n      };\n    })(this);\n  }\n\n  Guest.prototype.offer = function(offerJSON) {\n    this.peerConnection.setRemoteDescription(new RTCSessionDescription(JSON.parse(offerJSON)));\n    return this.peerConnection.createAnswer(((function(_this) {\n      return function(answerDesc) {\n        return _this.peerConnection.setLocalDescription(answerDesc);\n      };\n    })(this)), function() {\n      return console.warn(\"Couldn't create answer\");\n    });\n  };\n\n  Guest.prototype.send = function(data) {\n    return this.dataChannel.send(JSON.stringify(data));\n  };\n\n  return Guest;\n\n})();\n\nmodule.exports = {\n  Host: Host,\n  Guest: Guest\n};\n\nRTC = {\n  greet: function() {\n    window.RTC = RTC;\n    return console.log('To play with a remote peer, start a match with %cRTC.host()', 'background: #222; color: #bada55');\n  },\n  host: function() {\n    var gameRef, host, key;\n    this.isHost = true;\n    host = new Host;\n    key = Math.random() * 99999 + 10000 | 0;\n    gameRef = new Firebase('https://ut3.firebaseio.com/' + key);\n    host.onoffercreated = function(offerJSON) {\n      gameRef.onDisconnect().remove();\n      gameRef.set({\n        offer: JSON.parse(offerJSON)\n      });\n      window.location.hash = key;\n      console.log('Give this URL to the other player:');\n      console.log(window.location.href);\n      return gameRef.on('value', function(snap) {\n        var data;\n        data = snap.val();\n        if ((data != null ? data.answer : void 0) == null) {\n          return;\n        }\n        return host.acceptAnswer(JSON.stringify(data.answer));\n      });\n    };\n    host.ondisconnected = function() {\n      console.log('peer disconnected!');\n      window.location.hash = '';\n      return typeof RTC.ondisconnected === \"function\" ? RTC.ondisconnected() : void 0;\n    };\n    host.onchannelopen = function() {\n      console.log('channel open');\n      RTC.send = function(m) {\n        return host.send(m);\n      };\n      gameRef.off('value');\n      return typeof RTC.ondatachannelopen === \"function\" ? RTC.ondatachannelopen() : void 0;\n    };\n    host.onmessage = function(data) {\n      console.log('HOST: got data', data);\n      return typeof RTC.onmessage === \"function\" ? RTC.onmessage(data) : void 0;\n    };\n    return host.createOffer();\n  },\n  guest: function() {\n    var gameRef, guest, hash;\n    hash = window.location.hash;\n    if (!hash) {\n      return;\n    }\n    this.isGuest = true;\n    gameRef = new Firebase('https://ut3.firebaseio.com/' + hash.substring(1));\n    guest = new Guest;\n    guest.onanswercreated = function(answerJSON) {\n      return gameRef.update({\n        answer: JSON.parse(answerJSON)\n      });\n    };\n    guest.ondisconnected = function() {\n      console.log('peer disconnected!');\n      window.location.hash = '';\n      return typeof RTC.ondisconnected === \"function\" ? RTC.ondisconnected() : void 0;\n    };\n    guest.onchannelopen = function() {\n      console.log('channel open');\n      RTC.send = function(m) {\n        return guest.send(m);\n      };\n      return typeof RTC.ondatachannelopen === \"function\" ? RTC.ondatachannelopen() : void 0;\n    };\n    guest.onmessage = function(data) {\n      console.log('GUEST: got data', data);\n      return typeof RTC.onmessage === \"function\" ? RTC.onmessage(data) : void 0;\n    };\n    return gameRef.once('value', function(snap) {\n      var data;\n      data = snap.val();\n      if ((data != null ? data.offer : void 0) != null) {\n        return guest.offer(JSON.stringify(data.offer));\n      } else {\n        console.log('HOST offer not found for game ' + hash);\n        return window.location.hash = '';\n      }\n    });\n  }\n};\n\njQuery(function() {\n  return RTC.guest();\n});\n\nmodule.exports.RTC = RTC;\n\n\n},{}],5:[function(require,module,exports){\nvar P1, P2, ref;\n\nref = [1, 2], P1 = ref[0], P2 = ref[1];\n\nmodule.exports = {\n  P1: P1,\n  P2: P2\n};\n\n},{}],6:[function(require,module,exports){\nvar BinTicTacToe, MAX, MIN, O, X, _, allPlays, at, bin, changedOn, columns, decode, diagonals, discountedUtility, empty, evaluate, evaluateCache, isFull, isTerminal, isWin, lines, masks, openPositions, opponent, positions, ref, ref1, rows, utility, winOn, γ,\n  slice = [].slice;\n\nref = require('../minimax'), MAX = ref.MAX, MIN = ref.MIN;\n\nref1 = [0x0, 0x1, 0x2], _ = ref1[0], X = ref1[1], O = ref1[2];\n\nopponent = function(W) {\n  return ~W & 0x3;\n};\n\ndecode = function(W) {\n  return {\n    0x0: ' ',\n    0x1: 'X',\n    0x2: 'O'\n  }[W] || (function() {\n    throw new Error(W);\n  })();\n};\n\nempty = 0x0;\n\nbin = function(a) {\n  var e, i, j, len, res;\n  res = 0;\n  for (i = j = 0, len = a.length; j < len; i = ++j) {\n    e = a[i];\n    res |= e << (i * 2);\n  }\n  return res;\n};\n\nat = function(v, i) {\n  return v >> (i * 2) & 0x3;\n};\n\nrows = function(v) {\n  return [[at(v, 0), at(v, 1), at(v, 2)], [at(v, 3), at(v, 4), at(v, 5)], [at(v, 6), at(v, 7), at(v, 8)]];\n};\n\ncolumns = function(v) {\n  return [[at(v, 0), at(v, 3), at(v, 6)], [at(v, 1), at(v, 4), at(v, 7)], [at(v, 2), at(v, 5), at(v, 8)]];\n};\n\ndiagonals = function(v) {\n  return [[at(v, 0), at(v, 4), at(v, 8)], [at(v, 2), at(v, 4), at(v, 6)]];\n};\n\nlines = function(v) {\n  return slice.call(rows(v)).concat(slice.call(columns(v)), slice.call(diagonals(v)));\n};\n\nisFull = function(v) {\n  var i, j;\n  for (i = j = 0; j < 18; i = j += 2) {\n    if ((0x3 << i & v) === 0) {\n      return false;\n    }\n  }\n  return true;\n};\n\nmasks = {\n  0x1: [0x15, 0x540, 0x15000, 0x1041, 0x4104, 0x10410, 0x10101, 0x1110],\n  0x2: [0x2a, 0xa80, 0x2a000, 0x2082, 0x8208, 0x20820, 0x20202, 0x2220]\n};\n\npositions = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\nisWin = function(v, W) {\n  var j, len, m, ms;\n  ms = masks[W] || (function() {\n    throw new Error(W);\n  })();\n  for (j = 0, len = ms.length; j < len; j++) {\n    m = ms[j];\n    if ((m & v) === m) {\n      return true;\n    }\n  }\n  return false;\n};\n\nwinOn = function(v) {\n  var w;\n  w = function(W) {\n    var i, j, len, m, ms;\n    ms = masks[W];\n    for (i = j = 0, len = ms.length; j < len; i = ++j) {\n      m = ms[i];\n      if ((m & v) === m) {\n        return positions[i];\n      }\n    }\n    return null;\n  };\n  return (w(X)) || (w(O)) || [];\n};\n\nisTerminal = function(v) {\n  return (isFull(v)) || (isWin(v, X)) || (isWin(v, O));\n};\n\nopenPositions = function(v) {\n  var i, j, results;\n  results = [];\n  for (i = j = 0; j < 9; i = ++j) {\n    if ((0x3 << (i * 2) & v) === 0) {\n      results.push(i);\n    }\n  }\n  return results;\n};\n\nallPlays = function(v, W) {\n  var i, j, res;\n  res = [];\n  for (i = j = 0; j < 18; i = j += 2) {\n    if ((0x3 << i & v) === 0) {\n      res.push(W << i | v);\n    }\n  }\n  return res;\n};\n\nchangedOn = function(v1, v2) {\n  var i, j;\n  for (i = j = 0; j < 18; i = ++j) {\n    if ((0x3 << (i * 2) & v1) !== (0x3 << (i * 2) & v2)) {\n      return i;\n    }\n  }\n  return null;\n};\n\nγ = 0.1;\n\ndiscountedUtility = function(v, depth) {\n  if (depth == null) {\n    depth = 0;\n  }\n  return Math.pow(γ, depth) * utility(v);\n};\n\nutility = function(v) {\n  if (isWin(v, X)) {\n    return 2000;\n  } else if (isWin(v, O)) {\n    return -2000;\n  } else if (isFull(v)) {\n    return 0;\n  } else {\n    return evaluate(v);\n  }\n};\n\nevaluateCache = {};\n\nevaluate = function(v) {\n  var j, k, l, len, len1, o, ref2, ref3, score, w, x;\n  if (evaluateCache[v] != null) {\n    return evaluateCache[v];\n  }\n  score = 0;\n  ref2 = lines(v);\n  for (j = 0, len = ref2.length; j < len; j++) {\n    l = ref2[j];\n    ref3 = [0, 0], x = ref3[0], o = ref3[1];\n    for (k = 0, len1 = l.length; k < len1; k++) {\n      w = l[k];\n      if (w === X) {\n        ++x;\n      }\n      if (w === O) {\n        ++o;\n      }\n    }\n    if (x === 0 || o === 0) {\n      score += Math.pow(10, x) - Math.pow(10, o);\n    }\n  }\n  return evaluateCache[v] = score;\n};\n\nBinTicTacToe = (function() {\n  BinTicTacToe.create = function() {\n    var a, args;\n    a = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    if (a == null) {\n      a = [_, _, _, _, _, _, _, _, _];\n    }\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(BinTicTacToe, [bin(a)].concat(slice.call(args)), function(){});\n  };\n\n  function BinTicTacToe(value1, nextPlayer, depth1) {\n    this.value = value1 != null ? value1 : empty;\n    this.nextPlayer = nextPlayer != null ? nextPlayer : X;\n    this.depth = depth1 != null ? depth1 : 0;\n  }\n\n  BinTicTacToe.prototype.at = function(i) {\n    return at(this.value, i);\n  };\n\n  BinTicTacToe.prototype.rows = function() {\n    return rows(this.value);\n  };\n\n  BinTicTacToe.prototype.columns = function() {\n    return columns(this.value);\n  };\n\n  BinTicTacToe.prototype.diagonals = function() {\n    return diagonals(this.value);\n  };\n\n  BinTicTacToe.prototype.lines = function() {\n    return lines(this.value);\n  };\n\n  BinTicTacToe.prototype.isFull = function() {\n    return isFull(this.value);\n  };\n\n  BinTicTacToe.prototype.isWin = function(W) {\n    return isWin(this.value, W);\n  };\n\n  BinTicTacToe.prototype.winner = function() {\n    switch (false) {\n      case !this.isWin(X):\n        return X;\n      case !this.isWin(O):\n        return O;\n      default:\n        return null;\n    }\n  };\n\n  BinTicTacToe.prototype.winOn = function() {\n    return winOn(this.value);\n  };\n\n  BinTicTacToe.prototype.isTerminal = function() {\n    return isTerminal(this.value);\n  };\n\n  BinTicTacToe.prototype.nextAgent = function() {\n    if (this.nextPlayer === X) {\n      return MAX;\n    } else {\n      return MIN;\n    }\n  };\n\n  BinTicTacToe.prototype.openPositions = function() {\n    return openPositions(this.value);\n  };\n\n  BinTicTacToe.prototype.possibleActions = function() {\n    return allPlays(this.value, this.nextPlayer);\n  };\n\n  BinTicTacToe.prototype.action = function(i) {\n    return this.nextPlayer << (i * 2) | this.value;\n  };\n\n  BinTicTacToe.prototype.positionForAction = function(action) {\n    return changedOn(this.value, action);\n  };\n\n  BinTicTacToe.prototype.play = function(value) {\n    return new this.constructor(value, this.opponent(), this.depth + 1);\n  };\n\n  BinTicTacToe.prototype.utility = function() {\n    return utility(this.value);\n  };\n\n  BinTicTacToe.prototype.opponent = function(W) {\n    if (W == null) {\n      W = this.nextPlayer;\n    }\n    return opponent(W);\n  };\n\n  BinTicTacToe.prototype.toString = function() {\n    var e, r;\n    return ((function() {\n      var j, len, ref2, results;\n      ref2 = this.rows();\n      results = [];\n      for (j = 0, len = ref2.length; j < len; j++) {\n        r = ref2[j];\n        results.push(\"|\" + (((function() {\n          var k, len1, results1;\n          results1 = [];\n          for (k = 0, len1 = r.length; k < len1; k++) {\n            e = r[k];\n            results1.push(decode(e));\n          }\n          return results1;\n        })()).join('|')) + \"|\");\n      }\n      return results;\n    }).call(this)).join(\"\\n\");\n  };\n\n  return BinTicTacToe;\n\n})();\n\nmodule.exports = {\n  _: _,\n  X: X,\n  O: O,\n  opponent: opponent,\n  decode: decode,\n  empty: empty,\n  bin: bin,\n  at: at,\n  rows: rows,\n  columns: columns,\n  diagonals: diagonals,\n  lines: lines,\n  isFull: isFull,\n  isWin: isWin,\n  isTerminal: isTerminal,\n  openPositions: openPositions,\n  allPlays: allPlays,\n  changedOn: changedOn,\n  winOn: winOn,\n  discountedUtility: discountedUtility,\n  utility: utility,\n  evaluate: evaluate,\n  BinTicTacToe: BinTicTacToe\n};\n\n},{\"../minimax\":8}],7:[function(require,module,exports){\nvar BinTicTacToe, MAX, MIN, O, UltimateTicTacToe, X, _, at, bin, columns, columnsU, decode, diagonals, diagonalsU, e, empty, evaluate, isTerminal, isWin, isWinU, lines, linesU, ref, ref1, rows, rowsU, ultimateEmpty, winOn,\n  slice = [].slice;\n\nref = require('../minimax'), MAX = ref.MAX, MIN = ref.MIN;\n\nref1 = require('./bin-tic-tac-toe'), _ = ref1._, X = ref1.X, O = ref1.O, decode = ref1.decode, empty = ref1.empty, bin = ref1.bin, at = ref1.at, rows = ref1.rows, columns = ref1.columns, diagonals = ref1.diagonals, lines = ref1.lines, isWin = ref1.isWin, winOn = ref1.winOn, isTerminal = ref1.isTerminal, evaluate = ref1.evaluate, BinTicTacToe = ref1.BinTicTacToe;\n\ne = empty;\n\nultimateEmpty = [e, e, e, e, e, e, e, e, e];\n\nrowsU = function(a) {\n  var i, m, ref2, results;\n  results = [];\n  for (i = m = 0, ref2 = 3 * 3; m < ref2; i = m += 3) {\n    results.push(a.slice(i, i + 3));\n  }\n  return results;\n};\n\ncolumnsU = function(a) {\n  var i, m, results;\n  results = [];\n  for (i = m = 0; m < 3; i = ++m) {\n    results.push([a[i], a[i + 3], a[i + 6]]);\n  }\n  return results;\n};\n\ndiagonalsU = function(a) {\n  return [[a[0], a[4], a[8]], [a[2], a[4], a[6]]];\n};\n\nlinesU = function(a) {\n  return slice.call(rowsU(a)).concat(slice.call(columnsU(a)), slice.call(diagonalsU(a)));\n};\n\nisWinU = function(a, W) {\n  var l, len, m, ref2;\n  ref2 = linesU(a);\n  for (m = 0, len = ref2.length; m < len; m++) {\n    l = ref2[m];\n    if (l.every(function(v) {\n      return isWin(v, W);\n    })) {\n      return true;\n    }\n  }\n  return false;\n};\n\nUltimateTicTacToe = (function() {\n  function UltimateTicTacToe(a1, nextPlayer, lastPlayedPosition, depth) {\n    this.a = a1 != null ? a1 : ultimateEmpty;\n    this.nextPlayer = nextPlayer != null ? nextPlayer : X;\n    this.lastPlayedPosition = lastPlayedPosition != null ? lastPlayedPosition : 4;\n    this.depth = depth != null ? depth : 0;\n  }\n\n  UltimateTicTacToe.prototype.at = function(i, j) {\n    return at(this.a[i], j);\n  };\n\n  UltimateTicTacToe.prototype.rows = function() {\n    return rowsU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.columns = function() {\n    return columnsU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.diagonals = function() {\n    return diagonalsU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.lines = function() {\n    return linesU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.isTerminal = function() {\n    return (this.possibleActions().length === 0) || (this.isWin(X)) || (this.isWin(O));\n  };\n\n  UltimateTicTacToe.prototype.winner = function() {\n    switch (false) {\n      case !this.isWin(X):\n        return X;\n      case !this.isWin(O):\n        return O;\n      default:\n        return null;\n    }\n  };\n\n  UltimateTicTacToe.prototype.isWin = function(W) {\n    return isWinU(this.a, W);\n  };\n\n  UltimateTicTacToe.prototype.winOn = function(i) {\n    return winOn(this.a[i]);\n  };\n\n  UltimateTicTacToe.prototype.nextAgent = function() {\n    if (this.nextPlayer === X) {\n      return MAX;\n    } else {\n      return MIN;\n    }\n  };\n\n  UltimateTicTacToe.prototype.opponent = function(who) {\n    if (who == null) {\n      who = this.nextPlayer;\n    }\n    if (who === X) {\n      return O;\n    } else {\n      return X;\n    }\n  };\n\n  UltimateTicTacToe.prototype.boardsForNextPlay = function() {\n    var i, len, m, ref2, res, v;\n    v = this.lastPlayedPosition != null ? this.a[this.lastPlayedPosition] : null;\n    if ((v != null) && !(isTerminal(v))) {\n      return [this.lastPlayedPosition];\n    } else {\n      res = [];\n      ref2 = this.a;\n      for (i = m = 0, len = ref2.length; m < len; i = ++m) {\n        v = ref2[i];\n        if (!isTerminal(v)) {\n          res.push(i);\n        }\n      }\n      return res;\n    }\n  };\n\n  UltimateTicTacToe.prototype.openPositions = function() {\n    var i, j, js, len, m, n, ref2, res, v;\n    res = [];\n    ref2 = this.boardsForNextPlay();\n    for (m = 0, len = ref2.length; m < len; m++) {\n      i = ref2[m];\n      v = this.a[i];\n      js = [];\n      for (j = n = 0; n < 18; j = n += 2) {\n        if ((0x3 << j & v) === 0) {\n          js.push(j / 2);\n        }\n      }\n      res.push([i, js]);\n    }\n    return res;\n  };\n\n  UltimateTicTacToe.prototype.action = function(ij) {\n    return ij;\n  };\n\n  UltimateTicTacToe.prototype.possibleActions = function() {\n    var i, j, js, len, len1, m, n, ref2, ref3, res;\n    if (this.actions != null) {\n      return this.actions;\n    }\n    res = [];\n    ref2 = this.openPositions();\n    for (m = 0, len = ref2.length; m < len; m++) {\n      ref3 = ref2[m], i = ref3[0], js = ref3[1];\n      for (n = 0, len1 = js.length; n < len1; n++) {\n        j = js[n];\n        res.push([i, j]);\n      }\n    }\n    return this.actions = res;\n  };\n\n  UltimateTicTacToe.prototype.play = function(arg) {\n    var a, i, j;\n    i = arg[0], j = arg[1];\n    a = this.a.slice();\n    a[i] = this.nextPlayer << (j * 2) | a[i];\n    return new this.constructor(a, this.opponent(), j, this.depth + 1);\n  };\n\n  UltimateTicTacToe.prototype.positionForAction = function(action) {\n    return action;\n  };\n\n  UltimateTicTacToe.prototype.utility = function() {\n    var i, j, k, l, len, len1, m, n, ref2, ref3, score, v;\n    score = 0;\n    ref2 = linesU(this.a);\n    for (m = 0, len = ref2.length; m < len; m++) {\n      l = ref2[m];\n      ref3 = [0, 0, 0], i = ref3[0], j = ref3[1], k = ref3[2];\n      for (n = 0, len1 = l.length; n < len1; n++) {\n        v = l[n];\n        if (isWin(v, X)) {\n          ++i;\n        } else if (isWin(v, O)) {\n          ++j;\n        }\n        k += evaluate(v);\n      }\n      if (i === 0 || j === 0) {\n        score += Math.pow(1000, i) - Math.pow(1000, j);\n      }\n      score += k;\n    }\n    return score;\n  };\n\n  UltimateTicTacToe.prototype.toString = function() {\n    var bri, m, n, ri, s, strRows, v, vs;\n    s = '';\n    for (bri = m = 0; m <= 2; bri = ++m) {\n      vs = this.rows()[bri];\n      for (ri = n = 0; n <= 2; ri = ++n) {\n        strRows = (function() {\n          var len, o, results;\n          results = [];\n          for (o = 0, len = vs.length; o < len; o++) {\n            v = vs[o];\n            results.push(\"|\" + (((function() {\n              var len1, p, ref2, results1;\n              ref2 = (rows(v))[ri];\n              results1 = [];\n              for (p = 0, len1 = ref2.length; p < len1; p++) {\n                e = ref2[p];\n                results1.push(decode(e));\n              }\n              return results1;\n            })()).join('|')) + \"|\");\n          }\n          return results;\n        })();\n        s += strRows.join(' ║ ');\n        if (bri < 2 || ri < 2) {\n          s += '\\n';\n        }\n      }\n      if (bri < 2) {\n        s += '════════╬═════════╬════════\\n';\n      }\n    }\n    return s;\n  };\n\n  return UltimateTicTacToe;\n\n})();\n\nmodule.exports = {\n  _: _,\n  X: X,\n  O: O,\n  bin: bin,\n  UltimateTicTacToe: UltimateTicTacToe\n};\n\n},{\"../minimax\":8,\"./bin-tic-tac-toe\":6}],8:[function(require,module,exports){\nvar Limit, MAX, MIN, MinimaxAgent, P1, P2, ref, ref1;\n\nref = require('./game'), P1 = ref.P1, P2 = ref.P2;\n\nref1 = [P1, P2], MAX = ref1[0], MIN = ref1[1];\n\nLimit = Number.MAX_SAFE_INTEGER;\n\nMinimaxAgent = (function() {\n  function MinimaxAgent(depth) {\n    this.depth = depth != null ? depth : Limit;\n    this.rootAgent = MAX;\n  }\n\n  MinimaxAgent.prototype.nextAction = function(state) {\n    var _, bestAction, ref2;\n    this.rootAgent = state.nextAgent();\n    ref2 = this.minimax(state), _ = ref2[0], bestAction = ref2[1];\n    return bestAction;\n  };\n\n  MinimaxAgent.prototype.minimax = function(state, α, β, ply) {\n    var isTerminal;\n    if (α == null) {\n      α = -Limit;\n    }\n    if (β == null) {\n      β = +Limit;\n    }\n    if (ply == null) {\n      ply = 0;\n    }\n    isTerminal = state.isTerminal();\n    if (!isTerminal && state.nextAgent() === this.rootAgent) {\n      ++ply;\n    }\n    if (ply > this.depth || isTerminal) {\n      return [state.utility(), null];\n    } else if (state.nextAgent() === MAX) {\n      return this.maxi(state, α, β, ply);\n    } else {\n      return this.mini(state, α, β, ply);\n    }\n  };\n\n  MinimaxAgent.prototype.maxi = function(state, α, β, ply) {\n    var _, a, action, i, len, nextValue, ref2, ref3, ref4, ref5, successor, v;\n    ref2 = [-Limit, null], v = ref2[0], a = ref2[1];\n    ref3 = state.possibleActions();\n    for (i = 0, len = ref3.length; i < len; i++) {\n      action = ref3[i];\n      successor = state.play(action);\n      ref4 = this.minimax(successor, α, β, ply), nextValue = ref4[0], _ = ref4[1];\n      if (nextValue > v) {\n        ref5 = [nextValue, action], v = ref5[0], a = ref5[1];\n      }\n      if (v >= β) {\n        return [v, a];\n      }\n      α = Math.max(α, v);\n    }\n    return [v, a];\n  };\n\n  MinimaxAgent.prototype.mini = function(state, α, β, ply) {\n    var _, a, action, i, len, nextValue, ref2, ref3, ref4, ref5, successor, v;\n    ref2 = [+Limit, null], v = ref2[0], a = ref2[1];\n    ref3 = state.possibleActions();\n    for (i = 0, len = ref3.length; i < len; i++) {\n      action = ref3[i];\n      successor = state.play(action);\n      ref4 = this.minimax(successor, α, β, ply), nextValue = ref4[0], _ = ref4[1];\n      if (nextValue < v) {\n        ref5 = [nextValue, action], v = ref5[0], a = ref5[1];\n      }\n      if (v <= α) {\n        return [v, a];\n      }\n      β = Math.min(β, v);\n    }\n    return [v, a];\n  };\n\n  return MinimaxAgent;\n\n})();\n\nmodule.exports = {\n  MAX: MAX,\n  MIN: MIN,\n  Limit: Limit,\n  MinimaxAgent: MinimaxAgent\n};\n\n},{\"./game\":5}]},{},[2])\n\n","# coffeelint: disable=max_line_length\n\n$ = jQuery\n\n{X, O, decode} = require 'aye-aye/lib/games/bin-tic-tac-toe'\n{UltimateTicTacToe} = require 'aye-aye/lib/games/ultimate-tic-tac-toe'\n\n{showSpinner, hideSpinner} = require './spinner'\nrequire './highlight'\n\n{RTC} = require './web-rtc'\n\n$ ->\n\n  game = null\n  lastAction = null\n\n  playable = ->\n    className =\n      if game.nextPlayer is X then 'x-playable-tile' else 'o-playable-tile'\n    for [i, j] in game.possibleActions()\n      $ \"##{i}\\\\,#{j}\"\n        .addClass className\n    className\n\n  unplayable = ->\n    $ '.tile'\n      .removeClass 'x-playable-tile'\n      .removeClass 'o-playable-tile'\n      .removeClass 'human-playable-tile'\n      .off 'click'\n\n  markWins = ->\n    for i in [0...9]\n      wonBy = null\n      for j in game.winOn i\n        wonBy = game.at i, j\n        wonClass = if wonBy is X then 'x-won-tile' else 'o-won-tile'\n        ($ \"##{i}\\\\,#{j}\").addClass wonClass\n      if wonBy?\n        wonClass = if wonBy is X then 'x-won-board' else 'o-won-board'\n        ($ '#' + i).addClass wonClass\n\n  checkGameOver = ->\n    return no unless game.isTerminal()\n    endText = switch\n      when game.isWin(X) then 'X Wins!'\n      when game.isWin(O) then 'O Wins!'\n      else 'Draw!'\n    $ '#end-text'\n      .text endText\n    $ '#modal-game-over'\n      .modal('show')\n    yes\n\n  playerText = -> (decode game.nextPlayer).toLowerCase()\n\n  playAction = (action) ->\n    [i, j] = action\n    hideSpinner()\n    $ \"##{i}\\\\,#{j}\"\n      .text playerText()\n      .highlight()\n    game = game.play action\n    lastAction = action\n    next()\n\n  # player :: {\n  #   setup : (done: ->) ->\n  #   teardown : ->\n  #   play : ->\n  # }\n\n  playerX = null\n  playerO = null\n\n  next = ->\n    unplayable()\n    markWins()\n    player = if game.nextPlayer is X then playerX else playerO\n    player.play()\n\n  players =\n    human: -> humanPlayer()\n    peer: -> remotePlayer()\n    'starter AI': -> computerPlayer 'monte-carlo', 500\n    'smart AI': -> computerPlayer 'minimax', 3\n\n  createPlayerX = ->\n    playerName = ($ '#btn-player-x').text()\n    players[playerName]()\n  createPlayerO = ->\n    playerName = ($ '#btn-player-o').text()\n    players[playerName]()\n\n  swapPlayers = ->\n    $x = $ '#btn-player-x'\n    $o = $ '#btn-player-o'\n    tmp = $x.text()\n    $x.text $o.text()\n    $o.text tmp\n\n  $ '.player'\n    .on 'click', ->\n      $player = $ this\n      playerFor = $player.data 'player-for'\n      $btn = $ \"#btn-player-#{playerFor}\"\n      playerName = $player.text()\n      currentPlayerName = $btn.text()\n      if currentPlayerName isnt playerName\n        $btn.text playerName\n        setup()\n\n  humanPlayer = ->\n    int = (s) -> parseInt s, 10\n    parseAction = (text) ->\n      match = text.match /(\\d),(\\d)/\n      [(int match[1]), (int match[2])]\n    setup: (done) -> done()\n    play: ->\n      return if checkGameOver()\n      playableClassName = playable()\n      $ \".#{playableClassName}\"\n        .addClass 'human-playable-tile'\n        .on 'click', ->\n          $tile = $ this\n          action = parseAction $tile.get(0).id\n          playAction action\n\n  computerPlayer = (agentName = 'minimax', depth = 3) ->\n    worker = new Worker 'src/ai-worker.min.js'\n    setup: (done) ->\n      worker.onmessage = (e) -> playAction e.data.action\n      worker.postMessage command: 'setup', args: {agentName, depth}\n      done()\n    play: ->\n      return if checkGameOver()\n      playable()\n      showSpinner()\n      worker.postMessage command: 'play', args: {lastAction}\n    teardown: -> worker.terminate()\n\n  $.fn.enable = (v = yes) -> ($ this).prop 'disabled', not v\n  RTC.greet()\n  RTC.ondatachannelopen = ->\n    [xPlayer, oPlayer] =\n      if RTC.isHost then ['human', 'peer'] else ['peer', 'human']\n    $ '#btn-player-x'\n      .text xPlayer\n      .enable no\n    $ '#btn-player-o'\n      .text oPlayer\n      .enable no\n    setup()\n  RTC.ondisconnected = ->\n    $ '#btn-player-x'\n      .text 'human'\n      .enable()\n    $ '#btn-player-o'\n      .text 'smart AI'\n      .enable()\n    setup()\n\n  remotePlayer = ->\n    sendNew = -> RTC.send \"new\"\n    ($ '#btn-new-game').on 'click', sendNew\n    RTC.onmessage = (data) ->\n      if data is \"new\" then newGame() else playAction data\n    setup: (done) -> done()\n    play: ->\n      unless checkGameOver()\n        playable()\n        showSpinner()\n      RTC.send lastAction if lastAction?\n    teardown: -> ($ '#btn-new-game').off 'click', sendNew\n\n  setup = ->\n    teardown()\n    game = new UltimateTicTacToe\n    game.lastPlayedPosition = null # start with the full board open\n    lastAction = null\n    [playerX, playerO] = [createPlayerX(), createPlayerO()]\n    playerX.setup -> playerO.setup -> next()\n\n  teardown = ->\n    playerX?.teardown?()\n    playerO?.teardown?()\n    hideSpinner()\n    $ '.tic-tac-toe'\n      .removeClass 'x-won-board'\n      .removeClass 'o-won-board'\n    $ '.tile'\n      .removeClass 'x-won-tile'\n      .removeClass 'o-won-tile'\n      .text ''\n\n  newGame = ->\n    swapPlayers()\n    setup()\n\n  $ '#btn-new-game'\n    .on 'click', newGame\n\n  setup()\n","$ = jQuery\r\n\r\nspinner = new Spinner lines: 9, radius: 7, length: 7\r\nspinnerTimeout = null\r\nspinnerThresholdMs = 100\r\nshowSpinner = ->\r\n  unless spinnerTimeout?\r\n    target = ($ '#spinner').get 0\r\n    spinnerTimeout =\r\n      setTimeout (-> spinner.spin target), spinnerThresholdMs\r\nhideSpinner = ->\r\n  clearTimeout spinnerTimeout if spinnerTimeout?\r\n  spinner.stop()\r\n  spinnerTimeout = null\r\n\r\nmodule.exports = {showSpinner, hideSpinner}\r\n","# coffeelint: disable=max_line_length\n\nRTCPeerConnection =\n  window.RTCPeerConnection or\n  window.mozRTCPeerConnection or\n  window.webkitRTCPeerConnection or\n  window.msRTCPeerConnection\nRTCSessionDescription =\n  window.RTCSessionDescription or\n  window.mozRTCSessionDescription or\n  window.webkitRTCSessionDescription or\n  window.msRTCSessionDescription\n\nconfiguration = iceServers: [url: 'stun:23.21.150.121']\nconstraints = optional: [DtlsSrtpKeyAgreement: true]\n\nclass Host\n\n  constructor: ->\n    @peerConnection = new RTCPeerConnection configuration, constraints\n    @dataChannel = null\n\n    @peerConnection.onicecandidate = (e) =>\n      if e.candidate is null\n        @onoffercreated JSON.stringify @peerConnection.localDescription\n\n  setupDataChannel: ->\n    @dataChannel = @peerConnection.createDataChannel 'data', reliable: true\n    @dataChannel.onopen = =>\n      @peerConnection.oniceconnectionstatechange = =>\n        if @peerConnection.iceConnectionState is 'disconnected'\n          @ondisconnected?()\n      @onchannelopen()\n    @dataChannel.onmessage = (e) => @onmessage JSON.parse e.data\n\n  createOffer: ->\n    @setupDataChannel() # note: it's important to create the data channel before creating the offer\n    @peerConnection.createOffer ((offerDesc) => @peerConnection.setLocalDescription offerDesc),\n      -> console.warn \"Couldn't create offer\"\n\n  acceptAnswer: (answerJSON) ->\n    @peerConnection.setRemoteDescription new RTCSessionDescription JSON.parse answerJSON\n\n  send: (data) -> @dataChannel.send JSON.stringify data\n\nclass Guest\n\n  constructor: ->\n    @peerConnection = new RTCPeerConnection configuration, constraints\n    @dataChannel = null\n\n    @peerConnection.onicecandidate = (e) =>\n      if e.candidate is null\n        @onanswercreated JSON.stringify @peerConnection.localDescription\n\n    @peerConnection.ondatachannel = (e) =>\n      @dataChannel = e.channel or e\n      @dataChannel.onopen = =>\n        @peerConnection.oniceconnectionstatechange = =>\n          if @peerConnection.iceConnectionState is 'disconnected'\n            @ondisconnected?()\n        @onchannelopen()\n      @dataChannel.onmessage = (e) => @onmessage JSON.parse e.data\n\n  offer: (offerJSON) ->\n    @peerConnection.setRemoteDescription new RTCSessionDescription JSON.parse offerJSON\n    @peerConnection.createAnswer ((answerDesc) => @peerConnection.setLocalDescription answerDesc),\n      -> console.warn \"Couldn't create answer\"\n\n  send: (data) -> @dataChannel.send JSON.stringify data\n\nmodule.exports = {Host, Guest}\n\n# WebRTC with Firebase as a signaling service\n\nRTC =\n\n  greet: ->\n    window.RTC = RTC\n    console.log 'To play with a remote peer, start a match with %cRTC.host()',\n      'background: #222; color: #bada55'\n\n  host: ->\n    @isHost = yes\n    host = new Host\n    key = Math.random()*99999+10000|0\n    gameRef = new Firebase 'https://ut3.firebaseio.com/' + key\n    host.onoffercreated = (offerJSON) ->\n      gameRef.onDisconnect().remove()\n      gameRef.set offer: JSON.parse offerJSON\n      window.location.hash = key\n      console.log 'Give this URL to the other player:'\n      console.log window.location.href\n      gameRef.on 'value', (snap) ->\n        data = snap.val()\n        return unless data?.answer?\n        host.acceptAnswer JSON.stringify data.answer\n    host.ondisconnected = ->\n      console.log 'peer disconnected!'\n      window.location.hash = ''\n      RTC.ondisconnected?()\n    host.onchannelopen = ->\n      console.log 'channel open'\n      RTC.send = (m) -> host.send m\n      gameRef.off 'value'\n      RTC.ondatachannelopen?()\n    host.onmessage = (data) ->\n      console.log 'HOST: got data', data\n      RTC.onmessage? data\n    host.createOffer()\n\n  guest: ->\n    hash = window.location.hash\n    return unless hash\n    @isGuest = yes\n    gameRef = new Firebase 'https://ut3.firebaseio.com/' + hash.substring 1\n    guest = new Guest\n    guest.onanswercreated = (answerJSON) ->\n      gameRef.update answer: JSON.parse answerJSON\n    guest.ondisconnected = ->\n      console.log 'peer disconnected!'\n      window.location.hash = ''\n      RTC.ondisconnected?()\n    guest.onchannelopen = ->\n      console.log 'channel open'\n      RTC.send = (m) -> guest.send m\n      RTC.ondatachannelopen?()\n    guest.onmessage = (data) ->\n      console.log 'GUEST: got data', data\n      RTC.onmessage? data\n    gameRef.once 'value', (snap) ->\n      data = snap.val()\n      if data?.offer?\n        guest.offer JSON.stringify data.offer\n      else\n        console.log 'HOST offer not found for game ' + hash\n        window.location.hash = ''\n\njQuery -> RTC.guest()\n\nmodule.exports.RTC = RTC\n","var P1, P2, ref;\n\nref = [1, 2], P1 = ref[0], P2 = ref[1];\n\nmodule.exports = {\n  P1: P1,\n  P2: P2\n};\n","var BinTicTacToe, MAX, MIN, O, X, _, allPlays, at, bin, changedOn, columns, decode, diagonals, discountedUtility, empty, evaluate, evaluateCache, isFull, isTerminal, isWin, lines, masks, openPositions, opponent, positions, ref, ref1, rows, utility, winOn, γ,\n  slice = [].slice;\n\nref = require('../minimax'), MAX = ref.MAX, MIN = ref.MIN;\n\nref1 = [0x0, 0x1, 0x2], _ = ref1[0], X = ref1[1], O = ref1[2];\n\nopponent = function(W) {\n  return ~W & 0x3;\n};\n\ndecode = function(W) {\n  return {\n    0x0: ' ',\n    0x1: 'X',\n    0x2: 'O'\n  }[W] || (function() {\n    throw new Error(W);\n  })();\n};\n\nempty = 0x0;\n\nbin = function(a) {\n  var e, i, j, len, res;\n  res = 0;\n  for (i = j = 0, len = a.length; j < len; i = ++j) {\n    e = a[i];\n    res |= e << (i * 2);\n  }\n  return res;\n};\n\nat = function(v, i) {\n  return v >> (i * 2) & 0x3;\n};\n\nrows = function(v) {\n  return [[at(v, 0), at(v, 1), at(v, 2)], [at(v, 3), at(v, 4), at(v, 5)], [at(v, 6), at(v, 7), at(v, 8)]];\n};\n\ncolumns = function(v) {\n  return [[at(v, 0), at(v, 3), at(v, 6)], [at(v, 1), at(v, 4), at(v, 7)], [at(v, 2), at(v, 5), at(v, 8)]];\n};\n\ndiagonals = function(v) {\n  return [[at(v, 0), at(v, 4), at(v, 8)], [at(v, 2), at(v, 4), at(v, 6)]];\n};\n\nlines = function(v) {\n  return slice.call(rows(v)).concat(slice.call(columns(v)), slice.call(diagonals(v)));\n};\n\nisFull = function(v) {\n  var i, j;\n  for (i = j = 0; j < 18; i = j += 2) {\n    if ((0x3 << i & v) === 0) {\n      return false;\n    }\n  }\n  return true;\n};\n\nmasks = {\n  0x1: [0x15, 0x540, 0x15000, 0x1041, 0x4104, 0x10410, 0x10101, 0x1110],\n  0x2: [0x2a, 0xa80, 0x2a000, 0x2082, 0x8208, 0x20820, 0x20202, 0x2220]\n};\n\npositions = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\nisWin = function(v, W) {\n  var j, len, m, ms;\n  ms = masks[W] || (function() {\n    throw new Error(W);\n  })();\n  for (j = 0, len = ms.length; j < len; j++) {\n    m = ms[j];\n    if ((m & v) === m) {\n      return true;\n    }\n  }\n  return false;\n};\n\nwinOn = function(v) {\n  var w;\n  w = function(W) {\n    var i, j, len, m, ms;\n    ms = masks[W];\n    for (i = j = 0, len = ms.length; j < len; i = ++j) {\n      m = ms[i];\n      if ((m & v) === m) {\n        return positions[i];\n      }\n    }\n    return null;\n  };\n  return (w(X)) || (w(O)) || [];\n};\n\nisTerminal = function(v) {\n  return (isFull(v)) || (isWin(v, X)) || (isWin(v, O));\n};\n\nopenPositions = function(v) {\n  var i, j, results;\n  results = [];\n  for (i = j = 0; j < 9; i = ++j) {\n    if ((0x3 << (i * 2) & v) === 0) {\n      results.push(i);\n    }\n  }\n  return results;\n};\n\nallPlays = function(v, W) {\n  var i, j, res;\n  res = [];\n  for (i = j = 0; j < 18; i = j += 2) {\n    if ((0x3 << i & v) === 0) {\n      res.push(W << i | v);\n    }\n  }\n  return res;\n};\n\nchangedOn = function(v1, v2) {\n  var i, j;\n  for (i = j = 0; j < 18; i = ++j) {\n    if ((0x3 << (i * 2) & v1) !== (0x3 << (i * 2) & v2)) {\n      return i;\n    }\n  }\n  return null;\n};\n\nγ = 0.1;\n\ndiscountedUtility = function(v, depth) {\n  if (depth == null) {\n    depth = 0;\n  }\n  return Math.pow(γ, depth) * utility(v);\n};\n\nutility = function(v) {\n  if (isWin(v, X)) {\n    return 2000;\n  } else if (isWin(v, O)) {\n    return -2000;\n  } else if (isFull(v)) {\n    return 0;\n  } else {\n    return evaluate(v);\n  }\n};\n\nevaluateCache = {};\n\nevaluate = function(v) {\n  var j, k, l, len, len1, o, ref2, ref3, score, w, x;\n  if (evaluateCache[v] != null) {\n    return evaluateCache[v];\n  }\n  score = 0;\n  ref2 = lines(v);\n  for (j = 0, len = ref2.length; j < len; j++) {\n    l = ref2[j];\n    ref3 = [0, 0], x = ref3[0], o = ref3[1];\n    for (k = 0, len1 = l.length; k < len1; k++) {\n      w = l[k];\n      if (w === X) {\n        ++x;\n      }\n      if (w === O) {\n        ++o;\n      }\n    }\n    if (x === 0 || o === 0) {\n      score += Math.pow(10, x) - Math.pow(10, o);\n    }\n  }\n  return evaluateCache[v] = score;\n};\n\nBinTicTacToe = (function() {\n  BinTicTacToe.create = function() {\n    var a, args;\n    a = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    if (a == null) {\n      a = [_, _, _, _, _, _, _, _, _];\n    }\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(BinTicTacToe, [bin(a)].concat(slice.call(args)), function(){});\n  };\n\n  function BinTicTacToe(value1, nextPlayer, depth1) {\n    this.value = value1 != null ? value1 : empty;\n    this.nextPlayer = nextPlayer != null ? nextPlayer : X;\n    this.depth = depth1 != null ? depth1 : 0;\n  }\n\n  BinTicTacToe.prototype.at = function(i) {\n    return at(this.value, i);\n  };\n\n  BinTicTacToe.prototype.rows = function() {\n    return rows(this.value);\n  };\n\n  BinTicTacToe.prototype.columns = function() {\n    return columns(this.value);\n  };\n\n  BinTicTacToe.prototype.diagonals = function() {\n    return diagonals(this.value);\n  };\n\n  BinTicTacToe.prototype.lines = function() {\n    return lines(this.value);\n  };\n\n  BinTicTacToe.prototype.isFull = function() {\n    return isFull(this.value);\n  };\n\n  BinTicTacToe.prototype.isWin = function(W) {\n    return isWin(this.value, W);\n  };\n\n  BinTicTacToe.prototype.winner = function() {\n    switch (false) {\n      case !this.isWin(X):\n        return X;\n      case !this.isWin(O):\n        return O;\n      default:\n        return null;\n    }\n  };\n\n  BinTicTacToe.prototype.winOn = function() {\n    return winOn(this.value);\n  };\n\n  BinTicTacToe.prototype.isTerminal = function() {\n    return isTerminal(this.value);\n  };\n\n  BinTicTacToe.prototype.nextAgent = function() {\n    if (this.nextPlayer === X) {\n      return MAX;\n    } else {\n      return MIN;\n    }\n  };\n\n  BinTicTacToe.prototype.openPositions = function() {\n    return openPositions(this.value);\n  };\n\n  BinTicTacToe.prototype.possibleActions = function() {\n    return allPlays(this.value, this.nextPlayer);\n  };\n\n  BinTicTacToe.prototype.action = function(i) {\n    return this.nextPlayer << (i * 2) | this.value;\n  };\n\n  BinTicTacToe.prototype.positionForAction = function(action) {\n    return changedOn(this.value, action);\n  };\n\n  BinTicTacToe.prototype.play = function(value) {\n    return new this.constructor(value, this.opponent(), this.depth + 1);\n  };\n\n  BinTicTacToe.prototype.utility = function() {\n    return utility(this.value);\n  };\n\n  BinTicTacToe.prototype.opponent = function(W) {\n    if (W == null) {\n      W = this.nextPlayer;\n    }\n    return opponent(W);\n  };\n\n  BinTicTacToe.prototype.toString = function() {\n    var e, r;\n    return ((function() {\n      var j, len, ref2, results;\n      ref2 = this.rows();\n      results = [];\n      for (j = 0, len = ref2.length; j < len; j++) {\n        r = ref2[j];\n        results.push(\"|\" + (((function() {\n          var k, len1, results1;\n          results1 = [];\n          for (k = 0, len1 = r.length; k < len1; k++) {\n            e = r[k];\n            results1.push(decode(e));\n          }\n          return results1;\n        })()).join('|')) + \"|\");\n      }\n      return results;\n    }).call(this)).join(\"\\n\");\n  };\n\n  return BinTicTacToe;\n\n})();\n\nmodule.exports = {\n  _: _,\n  X: X,\n  O: O,\n  opponent: opponent,\n  decode: decode,\n  empty: empty,\n  bin: bin,\n  at: at,\n  rows: rows,\n  columns: columns,\n  diagonals: diagonals,\n  lines: lines,\n  isFull: isFull,\n  isWin: isWin,\n  isTerminal: isTerminal,\n  openPositions: openPositions,\n  allPlays: allPlays,\n  changedOn: changedOn,\n  winOn: winOn,\n  discountedUtility: discountedUtility,\n  utility: utility,\n  evaluate: evaluate,\n  BinTicTacToe: BinTicTacToe\n};\n","var BinTicTacToe, MAX, MIN, O, UltimateTicTacToe, X, _, at, bin, columns, columnsU, decode, diagonals, diagonalsU, e, empty, evaluate, isTerminal, isWin, isWinU, lines, linesU, ref, ref1, rows, rowsU, ultimateEmpty, winOn,\n  slice = [].slice;\n\nref = require('../minimax'), MAX = ref.MAX, MIN = ref.MIN;\n\nref1 = require('./bin-tic-tac-toe'), _ = ref1._, X = ref1.X, O = ref1.O, decode = ref1.decode, empty = ref1.empty, bin = ref1.bin, at = ref1.at, rows = ref1.rows, columns = ref1.columns, diagonals = ref1.diagonals, lines = ref1.lines, isWin = ref1.isWin, winOn = ref1.winOn, isTerminal = ref1.isTerminal, evaluate = ref1.evaluate, BinTicTacToe = ref1.BinTicTacToe;\n\ne = empty;\n\nultimateEmpty = [e, e, e, e, e, e, e, e, e];\n\nrowsU = function(a) {\n  var i, m, ref2, results;\n  results = [];\n  for (i = m = 0, ref2 = 3 * 3; m < ref2; i = m += 3) {\n    results.push(a.slice(i, i + 3));\n  }\n  return results;\n};\n\ncolumnsU = function(a) {\n  var i, m, results;\n  results = [];\n  for (i = m = 0; m < 3; i = ++m) {\n    results.push([a[i], a[i + 3], a[i + 6]]);\n  }\n  return results;\n};\n\ndiagonalsU = function(a) {\n  return [[a[0], a[4], a[8]], [a[2], a[4], a[6]]];\n};\n\nlinesU = function(a) {\n  return slice.call(rowsU(a)).concat(slice.call(columnsU(a)), slice.call(diagonalsU(a)));\n};\n\nisWinU = function(a, W) {\n  var l, len, m, ref2;\n  ref2 = linesU(a);\n  for (m = 0, len = ref2.length; m < len; m++) {\n    l = ref2[m];\n    if (l.every(function(v) {\n      return isWin(v, W);\n    })) {\n      return true;\n    }\n  }\n  return false;\n};\n\nUltimateTicTacToe = (function() {\n  function UltimateTicTacToe(a1, nextPlayer, lastPlayedPosition, depth) {\n    this.a = a1 != null ? a1 : ultimateEmpty;\n    this.nextPlayer = nextPlayer != null ? nextPlayer : X;\n    this.lastPlayedPosition = lastPlayedPosition != null ? lastPlayedPosition : 4;\n    this.depth = depth != null ? depth : 0;\n  }\n\n  UltimateTicTacToe.prototype.at = function(i, j) {\n    return at(this.a[i], j);\n  };\n\n  UltimateTicTacToe.prototype.rows = function() {\n    return rowsU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.columns = function() {\n    return columnsU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.diagonals = function() {\n    return diagonalsU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.lines = function() {\n    return linesU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.isTerminal = function() {\n    return (this.possibleActions().length === 0) || (this.isWin(X)) || (this.isWin(O));\n  };\n\n  UltimateTicTacToe.prototype.winner = function() {\n    switch (false) {\n      case !this.isWin(X):\n        return X;\n      case !this.isWin(O):\n        return O;\n      default:\n        return null;\n    }\n  };\n\n  UltimateTicTacToe.prototype.isWin = function(W) {\n    return isWinU(this.a, W);\n  };\n\n  UltimateTicTacToe.prototype.winOn = function(i) {\n    return winOn(this.a[i]);\n  };\n\n  UltimateTicTacToe.prototype.nextAgent = function() {\n    if (this.nextPlayer === X) {\n      return MAX;\n    } else {\n      return MIN;\n    }\n  };\n\n  UltimateTicTacToe.prototype.opponent = function(who) {\n    if (who == null) {\n      who = this.nextPlayer;\n    }\n    if (who === X) {\n      return O;\n    } else {\n      return X;\n    }\n  };\n\n  UltimateTicTacToe.prototype.boardsForNextPlay = function() {\n    var i, len, m, ref2, res, v;\n    v = this.lastPlayedPosition != null ? this.a[this.lastPlayedPosition] : null;\n    if ((v != null) && !(isTerminal(v))) {\n      return [this.lastPlayedPosition];\n    } else {\n      res = [];\n      ref2 = this.a;\n      for (i = m = 0, len = ref2.length; m < len; i = ++m) {\n        v = ref2[i];\n        if (!isTerminal(v)) {\n          res.push(i);\n        }\n      }\n      return res;\n    }\n  };\n\n  UltimateTicTacToe.prototype.openPositions = function() {\n    var i, j, js, len, m, n, ref2, res, v;\n    res = [];\n    ref2 = this.boardsForNextPlay();\n    for (m = 0, len = ref2.length; m < len; m++) {\n      i = ref2[m];\n      v = this.a[i];\n      js = [];\n      for (j = n = 0; n < 18; j = n += 2) {\n        if ((0x3 << j & v) === 0) {\n          js.push(j / 2);\n        }\n      }\n      res.push([i, js]);\n    }\n    return res;\n  };\n\n  UltimateTicTacToe.prototype.action = function(ij) {\n    return ij;\n  };\n\n  UltimateTicTacToe.prototype.possibleActions = function() {\n    var i, j, js, len, len1, m, n, ref2, ref3, res;\n    if (this.actions != null) {\n      return this.actions;\n    }\n    res = [];\n    ref2 = this.openPositions();\n    for (m = 0, len = ref2.length; m < len; m++) {\n      ref3 = ref2[m], i = ref3[0], js = ref3[1];\n      for (n = 0, len1 = js.length; n < len1; n++) {\n        j = js[n];\n        res.push([i, j]);\n      }\n    }\n    return this.actions = res;\n  };\n\n  UltimateTicTacToe.prototype.play = function(arg) {\n    var a, i, j;\n    i = arg[0], j = arg[1];\n    a = this.a.slice();\n    a[i] = this.nextPlayer << (j * 2) | a[i];\n    return new this.constructor(a, this.opponent(), j, this.depth + 1);\n  };\n\n  UltimateTicTacToe.prototype.positionForAction = function(action) {\n    return action;\n  };\n\n  UltimateTicTacToe.prototype.utility = function() {\n    var i, j, k, l, len, len1, m, n, ref2, ref3, score, v;\n    score = 0;\n    ref2 = linesU(this.a);\n    for (m = 0, len = ref2.length; m < len; m++) {\n      l = ref2[m];\n      ref3 = [0, 0, 0], i = ref3[0], j = ref3[1], k = ref3[2];\n      for (n = 0, len1 = l.length; n < len1; n++) {\n        v = l[n];\n        if (isWin(v, X)) {\n          ++i;\n        } else if (isWin(v, O)) {\n          ++j;\n        }\n        k += evaluate(v);\n      }\n      if (i === 0 || j === 0) {\n        score += Math.pow(1000, i) - Math.pow(1000, j);\n      }\n      score += k;\n    }\n    return score;\n  };\n\n  UltimateTicTacToe.prototype.toString = function() {\n    var bri, m, n, ri, s, strRows, v, vs;\n    s = '';\n    for (bri = m = 0; m <= 2; bri = ++m) {\n      vs = this.rows()[bri];\n      for (ri = n = 0; n <= 2; ri = ++n) {\n        strRows = (function() {\n          var len, o, results;\n          results = [];\n          for (o = 0, len = vs.length; o < len; o++) {\n            v = vs[o];\n            results.push(\"|\" + (((function() {\n              var len1, p, ref2, results1;\n              ref2 = (rows(v))[ri];\n              results1 = [];\n              for (p = 0, len1 = ref2.length; p < len1; p++) {\n                e = ref2[p];\n                results1.push(decode(e));\n              }\n              return results1;\n            })()).join('|')) + \"|\");\n          }\n          return results;\n        })();\n        s += strRows.join(' ║ ');\n        if (bri < 2 || ri < 2) {\n          s += '\\n';\n        }\n      }\n      if (bri < 2) {\n        s += '════════╬═════════╬════════\\n';\n      }\n    }\n    return s;\n  };\n\n  return UltimateTicTacToe;\n\n})();\n\nmodule.exports = {\n  _: _,\n  X: X,\n  O: O,\n  bin: bin,\n  UltimateTicTacToe: UltimateTicTacToe\n};\n","var Limit, MAX, MIN, MinimaxAgent, P1, P2, ref, ref1;\n\nref = require('./game'), P1 = ref.P1, P2 = ref.P2;\n\nref1 = [P1, P2], MAX = ref1[0], MIN = ref1[1];\n\nLimit = Number.MAX_SAFE_INTEGER;\n\nMinimaxAgent = (function() {\n  function MinimaxAgent(depth) {\n    this.depth = depth != null ? depth : Limit;\n    this.rootAgent = MAX;\n  }\n\n  MinimaxAgent.prototype.nextAction = function(state) {\n    var _, bestAction, ref2;\n    this.rootAgent = state.nextAgent();\n    ref2 = this.minimax(state), _ = ref2[0], bestAction = ref2[1];\n    return bestAction;\n  };\n\n  MinimaxAgent.prototype.minimax = function(state, α, β, ply) {\n    var isTerminal;\n    if (α == null) {\n      α = -Limit;\n    }\n    if (β == null) {\n      β = +Limit;\n    }\n    if (ply == null) {\n      ply = 0;\n    }\n    isTerminal = state.isTerminal();\n    if (!isTerminal && state.nextAgent() === this.rootAgent) {\n      ++ply;\n    }\n    if (ply > this.depth || isTerminal) {\n      return [state.utility(), null];\n    } else if (state.nextAgent() === MAX) {\n      return this.maxi(state, α, β, ply);\n    } else {\n      return this.mini(state, α, β, ply);\n    }\n  };\n\n  MinimaxAgent.prototype.maxi = function(state, α, β, ply) {\n    var _, a, action, i, len, nextValue, ref2, ref3, ref4, ref5, successor, v;\n    ref2 = [-Limit, null], v = ref2[0], a = ref2[1];\n    ref3 = state.possibleActions();\n    for (i = 0, len = ref3.length; i < len; i++) {\n      action = ref3[i];\n      successor = state.play(action);\n      ref4 = this.minimax(successor, α, β, ply), nextValue = ref4[0], _ = ref4[1];\n      if (nextValue > v) {\n        ref5 = [nextValue, action], v = ref5[0], a = ref5[1];\n      }\n      if (v >= β) {\n        return [v, a];\n      }\n      α = Math.max(α, v);\n    }\n    return [v, a];\n  };\n\n  MinimaxAgent.prototype.mini = function(state, α, β, ply) {\n    var _, a, action, i, len, nextValue, ref2, ref3, ref4, ref5, successor, v;\n    ref2 = [+Limit, null], v = ref2[0], a = ref2[1];\n    ref3 = state.possibleActions();\n    for (i = 0, len = ref3.length; i < len; i++) {\n      action = ref3[i];\n      successor = state.play(action);\n      ref4 = this.minimax(successor, α, β, ply), nextValue = ref4[0], _ = ref4[1];\n      if (nextValue < v) {\n        ref5 = [nextValue, action], v = ref5[0], a = ref5[1];\n      }\n      if (v <= α) {\n        return [v, a];\n      }\n      β = Math.min(β, v);\n    }\n    return [v, a];\n  };\n\n  return MinimaxAgent;\n\n})();\n\nmodule.exports = {\n  MAX: MAX,\n  MIN: MIN,\n  Limit: Limit,\n  MinimaxAgent: MinimaxAgent\n};\n"],"sourceRoot":"/source/"}