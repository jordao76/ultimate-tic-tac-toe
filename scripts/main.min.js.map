{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","app/scripts/highlight.coffee","main.min.js","app/scripts/index.coffee","app/scripts/spinner.coffee","node_modules/aye-aye/lib/games/bin-tic-tac-toe.js","node_modules/aye-aye/lib/games/ultimate-tic-tac-toe.js","node_modules/aye-aye/lib/minimax.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","$","jQuery","fn","highlight","this","each","el","width","outerWidth","height","outerHeight","css","position","left","offset","top","background-color","opacity","z-index","appendTo","fadeOut","queue","remove",2,"O","UltimateTicTacToe","X","decode","hideSpinner","ref","ref1","showSpinner","prototype","state","nextPlayer","lastPlayedPosition","depth","checkGameOver","computerPlayer","createPlayerO","createPlayerX","game","humanPlayer","markWins","next","playable","playerO","playerText","playerX","setup","teardown","unplayable","player","play","className","j","k","len","ref2","ref3","possibleActions","addClass","removeClass","off","results","wonBy","wonClass","winOn","at","push","isTerminal","text","isWin","toLowerCase","worker","done","Worker","postMessage","command","onmessage","data","action","gameState","end","terminate","toString","int","parseId","parseInt","match","playableClassName","on","$tile","get","id","./highlight","./spinner","aye-aye/lib/games/bin-tic-tac-toe","aye-aye/lib/games/ultimate-tic-tac-toe",3,"spinner","spinnerThresholdMs","spinnerTimeout","Spinner","lines","radius","target","setTimeout","spin","clearTimeout","stop",4,"BinTicTacToe","MAX","MIN","_","allPlays","bin","changedOn","columns","diagonals","discountedUtility","empty","evaluate","evaluateCache","isFull","masks","openPositions","opponent","positions","rows","utility","γ","slice","W","res","v","concat","m","ms","w","v1","v2","Math","pow","len1","score","x","value1","depth1","value","create","args","arguments","func","ctor","child","result","apply","Object","nextAgent","positionForAction","constructor","results1","join","../minimax",5,"columnsU","diagonalsU","isWinU","linesU","rowsU","ultimateEmpty","every","a1","who","boardsForNextPlay","js","ij","actions","arg","bri","ri","strRows","vs","p","./bin-tic-tac-toe",6,"MinimaxAgent","Infinity","rootAgent","nextAction","bestAction","minimax","α","β","ply","maxi","mini","nextValue","ref4","successor","max","min"],"mappings":"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","file":"main.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","$ = jQuery\r\n\r\n$.fn.highlight = ->\r\n  ($ this).each ->\r\n    el = $ this\r\n    $ '<div/>'\r\n      .width el.outerWidth()\r\n      .height el.outerHeight()\r\n      .css\r\n        'position': 'absolute'\r\n        'left': el.offset().left\r\n        'top': el.offset().top\r\n        'background-color': '#ffff77'\r\n        'opacity': .7\r\n        'z-index': 10\r\n      .appendTo 'body'\r\n      .fadeOut 1000\r\n      .queue -> ($ this).remove()\r\n",null,"$ = jQuery\n\n{X, O, decode} = require 'aye-aye/lib/games/bin-tic-tac-toe'\n{UltimateTicTacToe} = require 'aye-aye/lib/games/ultimate-tic-tac-toe'\n\n{showSpinner, hideSpinner} = require './spinner'\nrequire './highlight'\n\nUltimateTicTacToe::state = ->\n  {@a, @nextPlayer, @lastPlayedPosition, @depth}\n\n$ ->\n\n  game = null\n  playerX = null\n  playerO = null\n  createPlayerX = -> humanPlayer()\n  createPlayerO = -> computerPlayer()\n\n  next = ->\n    player = if game.nextPlayer is X then playerX else playerO\n    player.play()\n\n  playable = ->\n    className =\n      if game.nextPlayer is X then 'x-playable-tile' else 'o-playable-tile'\n    for [i, j] in game.possibleActions()\n      $ \"##{i}\\\\,#{j}\"\n        .addClass className\n    className\n\n  unplayable = ->\n    $ '.tile'\n      .removeClass 'x-playable-tile'\n      .removeClass 'o-playable-tile'\n      .removeClass 'human-playable-tile'\n      .off 'click'\n\n  markWins = ->\n    for i in [0...9]\n      wonBy = null\n      for j in game.winOn i\n        wonBy = game.at i, j\n        wonClass = if wonBy is X then 'x-won-tile' else 'o-won-tile'\n        ($ \"##{i}\\\\,#{j}\").addClass wonClass\n      if wonBy?\n        wonClass = if wonBy is X then 'x-won-board' else 'o-won-board'\n        ($ '#' + i).addClass wonClass\n\n  checkGameOver = ->\n    return no unless game.isTerminal()\n    $ '#info'\n      .text switch\n        when game.isWin(X) then 'X Wins!'\n        when game.isWin(O) then 'O Wins!'\n        else 'Draw!'\n    yes\n\n  playerText = -> (decode game.nextPlayer).toLowerCase()\n\n  computerPlayer = (depth = 3) ->\n    worker = null\n    setup: (done) ->\n      worker = new Worker 'scripts/minimax-worker.min.js'\n      worker.postMessage command: 'setup', depth: depth\n      worker.onmessage = (e) ->\n        hideSpinner()\n        [i, j] = e.data.action\n        $ \"##{i}\\\\,#{j}\"\n          .text playerText()\n          .highlight()\n        game = game.play [i, j]\n        next()\n      done()\n    play: ->\n      unplayable()\n      markWins()\n      return if checkGameOver()\n      playable()\n      showSpinner()\n      worker.postMessage command: 'play', gameState: game.state()\n    end: -> worker.terminate()\n    toString: -> \"computer\"\n\n  humanPlayer = ->\n    int = (s) -> parseInt s, 10\n    parseId = (text) ->\n      match = text.match /(\\d),(\\d)/\n      [(int match[1]), (int match[2])]\n    setup: (done) -> done()\n    play: ->\n      unplayable()\n      markWins()\n      return if checkGameOver()\n      playableClassName = playable()\n      $ \".#{playableClassName}\"\n        .addClass 'human-playable-tile'\n        .on 'click', ->\n          $tile = $ this\n          $tile.text playerText()\n          game = game.play parseId $tile.get(0).id\n          next()\n    toString: -> \"human\"\n\n  setup = ->\n    teardown()\n    game = new UltimateTicTacToe\n    [playerX, playerO] = [createPlayerX(), createPlayerO()]\n    # swap for next time\n    [createPlayerX, createPlayerO] = [createPlayerO, createPlayerX]\n    $ '#info'\n      .text playerX + \" vs \" + playerO\n    playerX.setup -> playerO.setup -> next()\n\n  teardown = ->\n    playerX?.end?()\n    playerO?.end?()\n    hideSpinner()\n    $ '.tic-tac-toe'\n      .removeClass 'x-won-board'\n      .removeClass 'o-won-board'\n    $ '.tile'\n      .removeClass 'x-won-tile'\n      .removeClass 'o-won-tile'\n      .text ''\n\n  $ '#btn-new-game'\n    .on 'click', setup\n\n  setup()\n","$ = jQuery\r\n\r\nspinner = new Spinner lines: 9, radius: 7, length: 7\r\nspinnerTimeout = null\r\nspinnerThresholdMs = 100\r\nshowSpinner = ->\r\n  unless spinnerTimeout?\r\n    target = ($ '#spinner').get 0\r\n    spinnerTimeout =\r\n      setTimeout (-> spinner.spin target), spinnerThresholdMs\r\nhideSpinner = ->\r\n  clearTimeout spinnerTimeout if spinnerTimeout?\r\n  spinner.stop()\r\n  spinnerTimeout = null\r\n\r\nmodule.exports = {showSpinner, hideSpinner}\r\n","var BinTicTacToe, MAX, MIN, O, X, _, allPlays, at, bin, changedOn, columns, decode, diagonals, discountedUtility, empty, evaluate, evaluateCache, isFull, isTerminal, isWin, lines, masks, openPositions, opponent, positions, ref, ref1, rows, utility, winOn, γ,\n  slice = [].slice;\n\nref = require('../minimax'), MAX = ref.MAX, MIN = ref.MIN;\n\nref1 = [0x0, 0x1, 0x2], _ = ref1[0], X = ref1[1], O = ref1[2];\n\nopponent = function(W) {\n  return ~W & 0x3;\n};\n\ndecode = function(W) {\n  return {\n    0x0: ' ',\n    0x1: 'X',\n    0x2: 'O'\n  }[W] || (function() {\n    throw new Error(W);\n  })();\n};\n\nempty = 0x0;\n\nbin = function(a) {\n  var e, i, j, len, res;\n  res = 0;\n  for (i = j = 0, len = a.length; j < len; i = ++j) {\n    e = a[i];\n    res |= e << (i * 2);\n  }\n  return res;\n};\n\nat = function(v, i) {\n  return v >> (i * 2) & 0x3;\n};\n\nrows = function(v) {\n  return [[at(v, 0), at(v, 1), at(v, 2)], [at(v, 3), at(v, 4), at(v, 5)], [at(v, 6), at(v, 7), at(v, 8)]];\n};\n\ncolumns = function(v) {\n  return [[at(v, 0), at(v, 3), at(v, 6)], [at(v, 1), at(v, 4), at(v, 7)], [at(v, 2), at(v, 5), at(v, 8)]];\n};\n\ndiagonals = function(v) {\n  return [[at(v, 0), at(v, 4), at(v, 8)], [at(v, 2), at(v, 4), at(v, 6)]];\n};\n\nlines = function(v) {\n  return slice.call(rows(v)).concat(slice.call(columns(v)), slice.call(diagonals(v)));\n};\n\nisFull = function(v) {\n  var i, j;\n  for (i = j = 0; j < 18; i = j += 2) {\n    if ((0x3 << i & v) === 0) {\n      return false;\n    }\n  }\n  return true;\n};\n\nmasks = {\n  0x1: [0x15, 0x540, 0x15000, 0x1041, 0x4104, 0x10410, 0x10101, 0x1110],\n  0x2: [0x2a, 0xa80, 0x2a000, 0x2082, 0x8208, 0x20820, 0x20202, 0x2220]\n};\n\npositions = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\nisWin = function(v, W) {\n  var j, len, m, ms;\n  ms = masks[W] || (function() {\n    throw new Error(W);\n  })();\n  for (j = 0, len = ms.length; j < len; j++) {\n    m = ms[j];\n    if ((m & v) === m) {\n      return true;\n    }\n  }\n  return false;\n};\n\nwinOn = function(v) {\n  var w;\n  w = function(W) {\n    var i, j, len, m, ms;\n    ms = masks[W];\n    for (i = j = 0, len = ms.length; j < len; i = ++j) {\n      m = ms[i];\n      if ((m & v) === m) {\n        return positions[i];\n      }\n    }\n    return null;\n  };\n  return (w(X)) || (w(O)) || [];\n};\n\nisTerminal = function(v) {\n  return (isFull(v)) || (isWin(v, X)) || (isWin(v, O));\n};\n\nopenPositions = function(v) {\n  var i, j, results;\n  results = [];\n  for (i = j = 0; j < 9; i = ++j) {\n    if ((0x3 << (i * 2) & v) === 0) {\n      results.push(i);\n    }\n  }\n  return results;\n};\n\nallPlays = function(v, W) {\n  var i, j, res;\n  res = [];\n  for (i = j = 0; j < 18; i = j += 2) {\n    if ((0x3 << i & v) === 0) {\n      res.push(W << i | v);\n    }\n  }\n  return res;\n};\n\nchangedOn = function(v1, v2) {\n  var i, j;\n  for (i = j = 0; j < 18; i = ++j) {\n    if ((0x3 << (i * 2) & v1) !== (0x3 << (i * 2) & v2)) {\n      return i;\n    }\n  }\n  return null;\n};\n\nγ = 0.1;\n\ndiscountedUtility = function(v, depth) {\n  if (depth == null) {\n    depth = 0;\n  }\n  return Math.pow(γ, depth) * utility(v);\n};\n\nutility = function(v) {\n  if (isWin(v, X)) {\n    return 2000;\n  } else if (isWin(v, O)) {\n    return -2000;\n  } else if (isFull(v)) {\n    return 0;\n  } else {\n    return evaluate(v);\n  }\n};\n\nevaluateCache = {};\n\nevaluate = function(v) {\n  var j, k, l, len, len1, o, ref2, ref3, score, w, x;\n  if (evaluateCache[v] != null) {\n    return evaluateCache[v];\n  }\n  score = 0;\n  ref2 = lines(v);\n  for (j = 0, len = ref2.length; j < len; j++) {\n    l = ref2[j];\n    ref3 = [0, 0], x = ref3[0], o = ref3[1];\n    for (k = 0, len1 = l.length; k < len1; k++) {\n      w = l[k];\n      if (w === X) {\n        ++x;\n      }\n      if (w === O) {\n        ++o;\n      }\n    }\n    if (x === 0 || o === 0) {\n      score += Math.pow(10, x) - Math.pow(10, o);\n    }\n  }\n  return evaluateCache[v] = score;\n};\n\nBinTicTacToe = (function() {\n  BinTicTacToe.create = function() {\n    var a, args;\n    a = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    if (a == null) {\n      a = [_, _, _, _, _, _, _, _, _];\n    }\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(BinTicTacToe, [bin(a)].concat(slice.call(args)), function(){});\n  };\n\n  function BinTicTacToe(value1, nextPlayer, depth1) {\n    this.value = value1 != null ? value1 : empty;\n    this.nextPlayer = nextPlayer != null ? nextPlayer : X;\n    this.depth = depth1 != null ? depth1 : 0;\n  }\n\n  BinTicTacToe.prototype.at = function(i) {\n    return at(this.value, i);\n  };\n\n  BinTicTacToe.prototype.rows = function() {\n    return rows(this.value);\n  };\n\n  BinTicTacToe.prototype.columns = function() {\n    return columns(this.value);\n  };\n\n  BinTicTacToe.prototype.diagonals = function() {\n    return diagonals(this.value);\n  };\n\n  BinTicTacToe.prototype.lines = function() {\n    return lines(this.value);\n  };\n\n  BinTicTacToe.prototype.isFull = function() {\n    return isFull(this.value);\n  };\n\n  BinTicTacToe.prototype.isWin = function(W) {\n    return isWin(this.value, W);\n  };\n\n  BinTicTacToe.prototype.winOn = function() {\n    return winOn(this.value);\n  };\n\n  BinTicTacToe.prototype.isTerminal = function() {\n    return isTerminal(this.value);\n  };\n\n  BinTicTacToe.prototype.nextAgent = function() {\n    if (this.nextPlayer === X) {\n      return MAX;\n    } else {\n      return MIN;\n    }\n  };\n\n  BinTicTacToe.prototype.openPositions = function() {\n    return openPositions(this.value);\n  };\n\n  BinTicTacToe.prototype.possibleActions = function() {\n    return allPlays(this.value, this.nextPlayer);\n  };\n\n  BinTicTacToe.prototype.action = function(i) {\n    return this.nextPlayer << (i * 2) | this.value;\n  };\n\n  BinTicTacToe.prototype.positionForAction = function(action) {\n    return changedOn(this.value, action);\n  };\n\n  BinTicTacToe.prototype.play = function(value) {\n    return new this.constructor(value, this.opponent(), this.depth + 1);\n  };\n\n  BinTicTacToe.prototype.utility = function() {\n    return utility(this.value);\n  };\n\n  BinTicTacToe.prototype.opponent = function(W) {\n    if (W == null) {\n      W = this.nextPlayer;\n    }\n    return opponent(W);\n  };\n\n  BinTicTacToe.prototype.toString = function() {\n    var e, r;\n    return ((function() {\n      var j, len, ref2, results;\n      ref2 = this.rows();\n      results = [];\n      for (j = 0, len = ref2.length; j < len; j++) {\n        r = ref2[j];\n        results.push(\"|\" + (((function() {\n          var k, len1, results1;\n          results1 = [];\n          for (k = 0, len1 = r.length; k < len1; k++) {\n            e = r[k];\n            results1.push(decode(e));\n          }\n          return results1;\n        })()).join('|')) + \"|\");\n      }\n      return results;\n    }).call(this)).join(\"\\n\");\n  };\n\n  return BinTicTacToe;\n\n})();\n\nmodule.exports = {\n  _: _,\n  X: X,\n  O: O,\n  opponent: opponent,\n  decode: decode,\n  empty: empty,\n  bin: bin,\n  at: at,\n  rows: rows,\n  columns: columns,\n  diagonals: diagonals,\n  lines: lines,\n  isFull: isFull,\n  isWin: isWin,\n  isTerminal: isTerminal,\n  openPositions: openPositions,\n  allPlays: allPlays,\n  changedOn: changedOn,\n  winOn: winOn,\n  discountedUtility: discountedUtility,\n  utility: utility,\n  evaluate: evaluate,\n  BinTicTacToe: BinTicTacToe\n};\n","var BinTicTacToe, MAX, MIN, O, UltimateTicTacToe, X, _, at, bin, columns, columnsU, decode, diagonals, diagonalsU, e, empty, evaluate, isTerminal, isWin, isWinU, lines, linesU, ref, ref1, rows, rowsU, ultimateEmpty, winOn,\n  slice = [].slice;\n\nref = require('../minimax'), MAX = ref.MAX, MIN = ref.MIN;\n\nref1 = require('./bin-tic-tac-toe'), _ = ref1._, X = ref1.X, O = ref1.O, decode = ref1.decode, empty = ref1.empty, bin = ref1.bin, at = ref1.at, rows = ref1.rows, columns = ref1.columns, diagonals = ref1.diagonals, lines = ref1.lines, isWin = ref1.isWin, winOn = ref1.winOn, isTerminal = ref1.isTerminal, evaluate = ref1.evaluate, BinTicTacToe = ref1.BinTicTacToe;\n\ne = empty;\n\nultimateEmpty = [e, e, e, e, e, e, e, e, e];\n\nrowsU = function(a) {\n  var i, m, ref2, results;\n  results = [];\n  for (i = m = 0, ref2 = 3 * 3; m < ref2; i = m += 3) {\n    results.push(a.slice(i, i + 3));\n  }\n  return results;\n};\n\ncolumnsU = function(a) {\n  var i, m, results;\n  results = [];\n  for (i = m = 0; m < 3; i = ++m) {\n    results.push([a[i], a[i + 3], a[i + 6]]);\n  }\n  return results;\n};\n\ndiagonalsU = function(a) {\n  return [[a[0], a[4], a[8]], [a[2], a[4], a[6]]];\n};\n\nlinesU = function(a) {\n  return slice.call(rowsU(a)).concat(slice.call(columnsU(a)), slice.call(diagonalsU(a)));\n};\n\nisWinU = function(a, W) {\n  var l, len, m, ref2;\n  ref2 = linesU(a);\n  for (m = 0, len = ref2.length; m < len; m++) {\n    l = ref2[m];\n    if (l.every(function(v) {\n      return isWin(v, W);\n    })) {\n      return true;\n    }\n  }\n  return false;\n};\n\nUltimateTicTacToe = (function() {\n  function UltimateTicTacToe(a1, nextPlayer, lastPlayedPosition, depth) {\n    this.a = a1 != null ? a1 : ultimateEmpty;\n    this.nextPlayer = nextPlayer != null ? nextPlayer : X;\n    this.lastPlayedPosition = lastPlayedPosition != null ? lastPlayedPosition : 4;\n    this.depth = depth != null ? depth : 0;\n  }\n\n  UltimateTicTacToe.prototype.at = function(i, j) {\n    return at(this.a[i], j);\n  };\n\n  UltimateTicTacToe.prototype.rows = function() {\n    return rowsU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.columns = function() {\n    return columnsU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.diagonals = function() {\n    return diagonalsU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.lines = function() {\n    return linesU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.isTerminal = function() {\n    return (this.possibleActions().length === 0) || (this.isWin(X)) || (this.isWin(O));\n  };\n\n  UltimateTicTacToe.prototype.isWin = function(W) {\n    return isWinU(this.a, W);\n  };\n\n  UltimateTicTacToe.prototype.winOn = function(i) {\n    return winOn(this.a[i]);\n  };\n\n  UltimateTicTacToe.prototype.nextAgent = function() {\n    if (this.nextPlayer === X) {\n      return MAX;\n    } else {\n      return MIN;\n    }\n  };\n\n  UltimateTicTacToe.prototype.opponent = function(who) {\n    if (who == null) {\n      who = this.nextPlayer;\n    }\n    if (who === X) {\n      return O;\n    } else {\n      return X;\n    }\n  };\n\n  UltimateTicTacToe.prototype.boardsForNextPlay = function() {\n    var i, len, m, ref2, res, v;\n    v = this.lastPlayedPosition != null ? this.a[this.lastPlayedPosition] : null;\n    if ((v != null) && !(isTerminal(v))) {\n      return [this.lastPlayedPosition];\n    } else {\n      res = [];\n      ref2 = this.a;\n      for (i = m = 0, len = ref2.length; m < len; i = ++m) {\n        v = ref2[i];\n        if (!isTerminal(v)) {\n          res.push(i);\n        }\n      }\n      return res;\n    }\n  };\n\n  UltimateTicTacToe.prototype.openPositions = function() {\n    var i, j, js, len, m, n, ref2, res, v;\n    res = [];\n    ref2 = this.boardsForNextPlay();\n    for (m = 0, len = ref2.length; m < len; m++) {\n      i = ref2[m];\n      v = this.a[i];\n      js = [];\n      for (j = n = 0; n < 18; j = n += 2) {\n        if ((0x3 << j & v) === 0) {\n          js.push(j / 2);\n        }\n      }\n      res.push([i, js]);\n    }\n    return res;\n  };\n\n  UltimateTicTacToe.prototype.action = function(ij) {\n    return ij;\n  };\n\n  UltimateTicTacToe.prototype.possibleActions = function() {\n    var i, j, js, len, len1, m, n, ref2, ref3, res;\n    if (this.actions != null) {\n      return this.actions;\n    }\n    res = [];\n    ref2 = this.openPositions();\n    for (m = 0, len = ref2.length; m < len; m++) {\n      ref3 = ref2[m], i = ref3[0], js = ref3[1];\n      for (n = 0, len1 = js.length; n < len1; n++) {\n        j = js[n];\n        res.push([i, j]);\n      }\n    }\n    return this.actions = res;\n  };\n\n  UltimateTicTacToe.prototype.play = function(arg) {\n    var a, i, j;\n    i = arg[0], j = arg[1];\n    a = this.a.slice();\n    a[i] = this.nextPlayer << (j * 2) | a[i];\n    return new this.constructor(a, this.opponent(), j, this.depth + 1);\n  };\n\n  UltimateTicTacToe.prototype.positionForAction = function(action) {\n    return action;\n  };\n\n  UltimateTicTacToe.prototype.utility = function() {\n    var i, j, k, l, len, len1, m, n, ref2, ref3, score, v;\n    score = 0;\n    ref2 = linesU(this.a);\n    for (m = 0, len = ref2.length; m < len; m++) {\n      l = ref2[m];\n      ref3 = [0, 0, 0], i = ref3[0], j = ref3[1], k = ref3[2];\n      for (n = 0, len1 = l.length; n < len1; n++) {\n        v = l[n];\n        if (isWin(v, X)) {\n          ++i;\n        } else if (isWin(v, O)) {\n          ++j;\n        }\n        k += evaluate(v);\n      }\n      if (i === 0 || j === 0) {\n        score += Math.pow(1000, i) - Math.pow(1000, j);\n      }\n      score += k;\n    }\n    return score;\n  };\n\n  UltimateTicTacToe.prototype.toString = function() {\n    var bri, m, n, ri, s, strRows, v, vs;\n    s = '';\n    for (bri = m = 0; m <= 2; bri = ++m) {\n      vs = this.rows()[bri];\n      for (ri = n = 0; n <= 2; ri = ++n) {\n        strRows = (function() {\n          var len, o, results;\n          results = [];\n          for (o = 0, len = vs.length; o < len; o++) {\n            v = vs[o];\n            results.push(\"|\" + (((function() {\n              var len1, p, ref2, results1;\n              ref2 = (rows(v))[ri];\n              results1 = [];\n              for (p = 0, len1 = ref2.length; p < len1; p++) {\n                e = ref2[p];\n                results1.push(decode(e));\n              }\n              return results1;\n            })()).join('|')) + \"|\");\n          }\n          return results;\n        })();\n        s += strRows.join(' ║ ');\n        if (bri < 2 || ri < 2) {\n          s += '\\n';\n        }\n      }\n      if (bri < 2) {\n        s += '════════╬═════════╬════════\\n';\n      }\n    }\n    return s;\n  };\n\n  return UltimateTicTacToe;\n\n})();\n\nmodule.exports = {\n  _: _,\n  X: X,\n  O: O,\n  bin: bin,\n  UltimateTicTacToe: UltimateTicTacToe\n};\n","var MAX, MIN, MinimaxAgent, ref;\n\nref = ['MAX', 'MIN'], MAX = ref[0], MIN = ref[1];\n\nMinimaxAgent = (function() {\n  function MinimaxAgent(depth) {\n    this.depth = depth != null ? depth : Infinity;\n    this.rootAgent = MAX;\n  }\n\n  MinimaxAgent.prototype.nextAction = function(state) {\n    var _, bestAction, ref1;\n    this.rootAgent = state.nextAgent();\n    ref1 = this.minimax(state), _ = ref1[0], bestAction = ref1[1];\n    return bestAction;\n  };\n\n  MinimaxAgent.prototype.minimax = function(state, α, β, ply) {\n    var isTerminal;\n    if (α == null) {\n      α = -Infinity;\n    }\n    if (β == null) {\n      β = +Infinity;\n    }\n    if (ply == null) {\n      ply = 0;\n    }\n    isTerminal = state.isTerminal();\n    if (!isTerminal && state.nextAgent() === this.rootAgent) {\n      ++ply;\n    }\n    if (ply > this.depth || isTerminal) {\n      return [state.utility(), null];\n    } else if (state.nextAgent() === MAX) {\n      return this.maxi(state, α, β, ply);\n    } else {\n      return this.mini(state, α, β, ply);\n    }\n  };\n\n  MinimaxAgent.prototype.maxi = function(state, α, β, ply) {\n    var _, a, action, i, len, nextValue, ref1, ref2, ref3, ref4, successor, v;\n    ref1 = [-Infinity, null], v = ref1[0], a = ref1[1];\n    ref2 = state.possibleActions();\n    for (i = 0, len = ref2.length; i < len; i++) {\n      action = ref2[i];\n      successor = state.play(action);\n      ref3 = this.minimax(successor, α, β, ply), nextValue = ref3[0], _ = ref3[1];\n      if (nextValue > v) {\n        ref4 = [nextValue, action], v = ref4[0], a = ref4[1];\n      }\n      if (v >= β) {\n        return [v, a];\n      }\n      α = Math.max(α, v);\n    }\n    return [v, a];\n  };\n\n  MinimaxAgent.prototype.mini = function(state, α, β, ply) {\n    var _, a, action, i, len, nextValue, ref1, ref2, ref3, ref4, successor, v;\n    ref1 = [+Infinity, null], v = ref1[0], a = ref1[1];\n    ref2 = state.possibleActions();\n    for (i = 0, len = ref2.length; i < len; i++) {\n      action = ref2[i];\n      successor = state.play(action);\n      ref3 = this.minimax(successor, α, β, ply), nextValue = ref3[0], _ = ref3[1];\n      if (nextValue < v) {\n        ref4 = [nextValue, action], v = ref4[0], a = ref4[1];\n      }\n      if (v <= α) {\n        return [v, a];\n      }\n      β = Math.min(β, v);\n    }\n    return [v, a];\n  };\n\n  return MinimaxAgent;\n\n})();\n\nmodule.exports = {\n  MAX: MAX,\n  MIN: MIN,\n  MinimaxAgent: MinimaxAgent\n};\n"],"sourceRoot":"/source/"}