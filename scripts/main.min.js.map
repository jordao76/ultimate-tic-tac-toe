{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","app/scripts/highlight.coffee","main.min.js","app/scripts/index.coffee","app/scripts/spinner.coffee","node_modules/aye-aye/lib/games/bin-tic-tac-toe.js","node_modules/aye-aye/lib/games/ultimate-tic-tac-toe.js","node_modules/aye-aye/lib/minimax.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","$","jQuery","fn","highlight","this","each","el","width","outerWidth","height","outerHeight","css","position","left","offset","top","background-color","opacity","z-index","appendTo","fadeOut","queue","remove",2,"O","UltimateTicTacToe","X","decode","hideSpinner","ref","ref1","showSpinner","prototype","state","nextPlayer","lastPlayedPosition","depth","checkGameOver","computerPlayer","createPlayerO","createPlayerX","game","humanPlayer","markWins","messagingPlayer","next","playable","playerO","playerText","playerX","setup","teardown","unplayable","player","play","className","j","k","len","ref2","ref3","possibleActions","addClass","removeClass","off","results","wonBy","wonClass","winOn","at","push","isTerminal","text","isWin","toLowerCase","bus","onAction","arg","done","onmessage","m","action","postMessage","command","args","toString","worker","Worker","data","terminate","int","parseId","parseInt","match","playableClassName","on","$tile","get","id","./highlight","./spinner","aye-aye/lib/games/bin-tic-tac-toe","aye-aye/lib/games/ultimate-tic-tac-toe",3,"spinner","spinnerThresholdMs","spinnerTimeout","Spinner","lines","radius","target","setTimeout","spin","clearTimeout","stop",4,"BinTicTacToe","MAX","MIN","_","allPlays","bin","changedOn","columns","diagonals","discountedUtility","empty","evaluate","evaluateCache","isFull","masks","openPositions","opponent","positions","rows","utility","γ","slice","W","res","v","concat","ms","w","v1","v2","Math","pow","len1","score","x","value1","depth1","value","create","arguments","func","ctor","child","result","apply","Object","nextAgent","positionForAction","constructor","results1","join","../minimax",5,"columnsU","diagonalsU","isWinU","linesU","rowsU","ultimateEmpty","every","a1","who","boardsForNextPlay","js","ij","actions","bri","ri","strRows","vs","p","./bin-tic-tac-toe",6,"MinimaxAgent","Infinity","rootAgent","nextAction","bestAction","minimax","α","β","ply","maxi","mini","nextValue","ref4","successor","max","min"],"mappings":"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","file":"main.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","$ = jQuery\r\n\r\n$.fn.highlight = ->\r\n  ($ this).each ->\r\n    el = $ this\r\n    $ '<div/>'\r\n      .width el.outerWidth()\r\n      .height el.outerHeight()\r\n      .css\r\n        'position': 'absolute'\r\n        'left': el.offset().left\r\n        'top': el.offset().top\r\n        'background-color': '#ffff77'\r\n        'opacity': .7\r\n        'z-index': 10\r\n      .appendTo 'body'\r\n      .fadeOut 1000\r\n      .queue -> ($ this).remove()\r\n",null,"$ = jQuery\n\n{X, O, decode} = require 'aye-aye/lib/games/bin-tic-tac-toe'\n{UltimateTicTacToe} = require 'aye-aye/lib/games/ultimate-tic-tac-toe'\n\n{showSpinner, hideSpinner} = require './spinner'\nrequire './highlight'\n\nUltimateTicTacToe::state = ->\n  {@a, @nextPlayer, @lastPlayedPosition, @depth}\n\n$ ->\n\n  game = null\n  playerX = null\n  playerO = null\n  createPlayerX = -> humanPlayer()\n  createPlayerO = -> computerPlayer()\n\n  # player :: {\n  #   setup : (done: ->) ->\n  #   teardown : ->\n  #   play : ->\n  #   toString : -> Str\n  # }\n\n  next = ->\n    unplayable()\n    markWins()\n    player = if game.nextPlayer is X then playerX else playerO\n    player.play()\n\n  playable = ->\n    className =\n      if game.nextPlayer is X then 'x-playable-tile' else 'o-playable-tile'\n    for [i, j] in game.possibleActions()\n      $ \"##{i}\\\\,#{j}\"\n        .addClass className\n    className\n\n  unplayable = ->\n    $ '.tile'\n      .removeClass 'x-playable-tile'\n      .removeClass 'o-playable-tile'\n      .removeClass 'human-playable-tile'\n      .off 'click'\n\n  markWins = ->\n    for i in [0...9]\n      wonBy = null\n      for j in game.winOn i\n        wonBy = game.at i, j\n        wonClass = if wonBy is X then 'x-won-tile' else 'o-won-tile'\n        ($ \"##{i}\\\\,#{j}\").addClass wonClass\n      if wonBy?\n        wonClass = if wonBy is X then 'x-won-board' else 'o-won-board'\n        ($ '#' + i).addClass wonClass\n\n  checkGameOver = ->\n    return no unless game.isTerminal()\n    $ '#info'\n      .text switch\n        when game.isWin(X) then 'X Wins!'\n        when game.isWin(O) then 'O Wins!'\n        else 'Draw!'\n    yes\n\n  playerText = -> (decode game.nextPlayer).toLowerCase()\n\n  # bus :: {\n  #   setup : (done : ->)\n  #   teardown : ->\n  #   postMessage : (message : Any) ->\n  #   onMessage : (callback : (m: Any) ->) ->\n  #   toString : -> Str\n  # }\n  messagingPlayer = (bus) ->\n    onAction = ([i, j]) ->\n      hideSpinner()\n      $ \"##{i}\\\\,#{j}\"\n        .text playerText()\n        .highlight()\n      game = game.play [i, j]\n      next()\n    setup: (done) ->\n      bus.setup ->\n        bus.onmessage (m) -> onAction m.action\n        done()\n    play: ->\n      return if checkGameOver()\n      playable()\n      showSpinner()\n      bus.postMessage command: 'play', args: game.state()\n    teardown: -> bus.teardown()\n    toString: -> bus.toString()\n\n  computerPlayer = (depth = 3) ->\n    worker = new Worker 'scripts/minimax-worker.min.js'\n    bus =\n      setup: (done) ->\n        worker.postMessage command: 'setup', args: depth\n        done()\n      postMessage: (m) -> worker.postMessage m\n      onmessage: (f) -> worker.onmessage = (e) -> f e.data\n      teardown: -> worker.terminate()\n      toString: -> 'computer'\n    messagingPlayer bus\n\n  humanPlayer = ->\n    int = (s) -> parseInt s, 10\n    parseId = (text) ->\n      match = text.match /(\\d),(\\d)/\n      [(int match[1]), (int match[2])]\n    setup: (done) -> done()\n    play: ->\n      return if checkGameOver()\n      playableClassName = playable()\n      $ \".#{playableClassName}\"\n        .addClass 'human-playable-tile'\n        .on 'click', ->\n          $tile = $ this\n          $tile.text playerText()\n          game = game.play parseId $tile.get(0).id\n          next()\n    toString: -> \"human\"\n\n  setup = ->\n    teardown()\n    game = new UltimateTicTacToe\n    [playerX, playerO] = [createPlayerX(), createPlayerO()]\n    # swap for next time\n    [createPlayerX, createPlayerO] = [createPlayerO, createPlayerX]\n    $ '#info'\n      .text playerX + \" vs \" + playerO\n    playerX.setup -> playerO.setup -> next()\n\n  teardown = ->\n    playerX?.teardown?()\n    playerO?.teardown?()\n    hideSpinner()\n    $ '.tic-tac-toe'\n      .removeClass 'x-won-board'\n      .removeClass 'o-won-board'\n    $ '.tile'\n      .removeClass 'x-won-tile'\n      .removeClass 'o-won-tile'\n      .text ''\n\n  $ '#btn-new-game'\n    .on 'click', setup\n\n  setup()\n","$ = jQuery\r\n\r\nspinner = new Spinner lines: 9, radius: 7, length: 7\r\nspinnerTimeout = null\r\nspinnerThresholdMs = 100\r\nshowSpinner = ->\r\n  unless spinnerTimeout?\r\n    target = ($ '#spinner').get 0\r\n    spinnerTimeout =\r\n      setTimeout (-> spinner.spin target), spinnerThresholdMs\r\nhideSpinner = ->\r\n  clearTimeout spinnerTimeout if spinnerTimeout?\r\n  spinner.stop()\r\n  spinnerTimeout = null\r\n\r\nmodule.exports = {showSpinner, hideSpinner}\r\n","var BinTicTacToe, MAX, MIN, O, X, _, allPlays, at, bin, changedOn, columns, decode, diagonals, discountedUtility, empty, evaluate, evaluateCache, isFull, isTerminal, isWin, lines, masks, openPositions, opponent, positions, ref, ref1, rows, utility, winOn, γ,\n  slice = [].slice;\n\nref = require('../minimax'), MAX = ref.MAX, MIN = ref.MIN;\n\nref1 = [0x0, 0x1, 0x2], _ = ref1[0], X = ref1[1], O = ref1[2];\n\nopponent = function(W) {\n  return ~W & 0x3;\n};\n\ndecode = function(W) {\n  return {\n    0x0: ' ',\n    0x1: 'X',\n    0x2: 'O'\n  }[W] || (function() {\n    throw new Error(W);\n  })();\n};\n\nempty = 0x0;\n\nbin = function(a) {\n  var e, i, j, len, res;\n  res = 0;\n  for (i = j = 0, len = a.length; j < len; i = ++j) {\n    e = a[i];\n    res |= e << (i * 2);\n  }\n  return res;\n};\n\nat = function(v, i) {\n  return v >> (i * 2) & 0x3;\n};\n\nrows = function(v) {\n  return [[at(v, 0), at(v, 1), at(v, 2)], [at(v, 3), at(v, 4), at(v, 5)], [at(v, 6), at(v, 7), at(v, 8)]];\n};\n\ncolumns = function(v) {\n  return [[at(v, 0), at(v, 3), at(v, 6)], [at(v, 1), at(v, 4), at(v, 7)], [at(v, 2), at(v, 5), at(v, 8)]];\n};\n\ndiagonals = function(v) {\n  return [[at(v, 0), at(v, 4), at(v, 8)], [at(v, 2), at(v, 4), at(v, 6)]];\n};\n\nlines = function(v) {\n  return slice.call(rows(v)).concat(slice.call(columns(v)), slice.call(diagonals(v)));\n};\n\nisFull = function(v) {\n  var i, j;\n  for (i = j = 0; j < 18; i = j += 2) {\n    if ((0x3 << i & v) === 0) {\n      return false;\n    }\n  }\n  return true;\n};\n\nmasks = {\n  0x1: [0x15, 0x540, 0x15000, 0x1041, 0x4104, 0x10410, 0x10101, 0x1110],\n  0x2: [0x2a, 0xa80, 0x2a000, 0x2082, 0x8208, 0x20820, 0x20202, 0x2220]\n};\n\npositions = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\nisWin = function(v, W) {\n  var j, len, m, ms;\n  ms = masks[W] || (function() {\n    throw new Error(W);\n  })();\n  for (j = 0, len = ms.length; j < len; j++) {\n    m = ms[j];\n    if ((m & v) === m) {\n      return true;\n    }\n  }\n  return false;\n};\n\nwinOn = function(v) {\n  var w;\n  w = function(W) {\n    var i, j, len, m, ms;\n    ms = masks[W];\n    for (i = j = 0, len = ms.length; j < len; i = ++j) {\n      m = ms[i];\n      if ((m & v) === m) {\n        return positions[i];\n      }\n    }\n    return null;\n  };\n  return (w(X)) || (w(O)) || [];\n};\n\nisTerminal = function(v) {\n  return (isFull(v)) || (isWin(v, X)) || (isWin(v, O));\n};\n\nopenPositions = function(v) {\n  var i, j, results;\n  results = [];\n  for (i = j = 0; j < 9; i = ++j) {\n    if ((0x3 << (i * 2) & v) === 0) {\n      results.push(i);\n    }\n  }\n  return results;\n};\n\nallPlays = function(v, W) {\n  var i, j, res;\n  res = [];\n  for (i = j = 0; j < 18; i = j += 2) {\n    if ((0x3 << i & v) === 0) {\n      res.push(W << i | v);\n    }\n  }\n  return res;\n};\n\nchangedOn = function(v1, v2) {\n  var i, j;\n  for (i = j = 0; j < 18; i = ++j) {\n    if ((0x3 << (i * 2) & v1) !== (0x3 << (i * 2) & v2)) {\n      return i;\n    }\n  }\n  return null;\n};\n\nγ = 0.1;\n\ndiscountedUtility = function(v, depth) {\n  if (depth == null) {\n    depth = 0;\n  }\n  return Math.pow(γ, depth) * utility(v);\n};\n\nutility = function(v) {\n  if (isWin(v, X)) {\n    return 2000;\n  } else if (isWin(v, O)) {\n    return -2000;\n  } else if (isFull(v)) {\n    return 0;\n  } else {\n    return evaluate(v);\n  }\n};\n\nevaluateCache = {};\n\nevaluate = function(v) {\n  var j, k, l, len, len1, o, ref2, ref3, score, w, x;\n  if (evaluateCache[v] != null) {\n    return evaluateCache[v];\n  }\n  score = 0;\n  ref2 = lines(v);\n  for (j = 0, len = ref2.length; j < len; j++) {\n    l = ref2[j];\n    ref3 = [0, 0], x = ref3[0], o = ref3[1];\n    for (k = 0, len1 = l.length; k < len1; k++) {\n      w = l[k];\n      if (w === X) {\n        ++x;\n      }\n      if (w === O) {\n        ++o;\n      }\n    }\n    if (x === 0 || o === 0) {\n      score += Math.pow(10, x) - Math.pow(10, o);\n    }\n  }\n  return evaluateCache[v] = score;\n};\n\nBinTicTacToe = (function() {\n  BinTicTacToe.create = function() {\n    var a, args;\n    a = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    if (a == null) {\n      a = [_, _, _, _, _, _, _, _, _];\n    }\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(BinTicTacToe, [bin(a)].concat(slice.call(args)), function(){});\n  };\n\n  function BinTicTacToe(value1, nextPlayer, depth1) {\n    this.value = value1 != null ? value1 : empty;\n    this.nextPlayer = nextPlayer != null ? nextPlayer : X;\n    this.depth = depth1 != null ? depth1 : 0;\n  }\n\n  BinTicTacToe.prototype.at = function(i) {\n    return at(this.value, i);\n  };\n\n  BinTicTacToe.prototype.rows = function() {\n    return rows(this.value);\n  };\n\n  BinTicTacToe.prototype.columns = function() {\n    return columns(this.value);\n  };\n\n  BinTicTacToe.prototype.diagonals = function() {\n    return diagonals(this.value);\n  };\n\n  BinTicTacToe.prototype.lines = function() {\n    return lines(this.value);\n  };\n\n  BinTicTacToe.prototype.isFull = function() {\n    return isFull(this.value);\n  };\n\n  BinTicTacToe.prototype.isWin = function(W) {\n    return isWin(this.value, W);\n  };\n\n  BinTicTacToe.prototype.winOn = function() {\n    return winOn(this.value);\n  };\n\n  BinTicTacToe.prototype.isTerminal = function() {\n    return isTerminal(this.value);\n  };\n\n  BinTicTacToe.prototype.nextAgent = function() {\n    if (this.nextPlayer === X) {\n      return MAX;\n    } else {\n      return MIN;\n    }\n  };\n\n  BinTicTacToe.prototype.openPositions = function() {\n    return openPositions(this.value);\n  };\n\n  BinTicTacToe.prototype.possibleActions = function() {\n    return allPlays(this.value, this.nextPlayer);\n  };\n\n  BinTicTacToe.prototype.action = function(i) {\n    return this.nextPlayer << (i * 2) | this.value;\n  };\n\n  BinTicTacToe.prototype.positionForAction = function(action) {\n    return changedOn(this.value, action);\n  };\n\n  BinTicTacToe.prototype.play = function(value) {\n    return new this.constructor(value, this.opponent(), this.depth + 1);\n  };\n\n  BinTicTacToe.prototype.utility = function() {\n    return utility(this.value);\n  };\n\n  BinTicTacToe.prototype.opponent = function(W) {\n    if (W == null) {\n      W = this.nextPlayer;\n    }\n    return opponent(W);\n  };\n\n  BinTicTacToe.prototype.toString = function() {\n    var e, r;\n    return ((function() {\n      var j, len, ref2, results;\n      ref2 = this.rows();\n      results = [];\n      for (j = 0, len = ref2.length; j < len; j++) {\n        r = ref2[j];\n        results.push(\"|\" + (((function() {\n          var k, len1, results1;\n          results1 = [];\n          for (k = 0, len1 = r.length; k < len1; k++) {\n            e = r[k];\n            results1.push(decode(e));\n          }\n          return results1;\n        })()).join('|')) + \"|\");\n      }\n      return results;\n    }).call(this)).join(\"\\n\");\n  };\n\n  return BinTicTacToe;\n\n})();\n\nmodule.exports = {\n  _: _,\n  X: X,\n  O: O,\n  opponent: opponent,\n  decode: decode,\n  empty: empty,\n  bin: bin,\n  at: at,\n  rows: rows,\n  columns: columns,\n  diagonals: diagonals,\n  lines: lines,\n  isFull: isFull,\n  isWin: isWin,\n  isTerminal: isTerminal,\n  openPositions: openPositions,\n  allPlays: allPlays,\n  changedOn: changedOn,\n  winOn: winOn,\n  discountedUtility: discountedUtility,\n  utility: utility,\n  evaluate: evaluate,\n  BinTicTacToe: BinTicTacToe\n};\n","var BinTicTacToe, MAX, MIN, O, UltimateTicTacToe, X, _, at, bin, columns, columnsU, decode, diagonals, diagonalsU, e, empty, evaluate, isTerminal, isWin, isWinU, lines, linesU, ref, ref1, rows, rowsU, ultimateEmpty, winOn,\n  slice = [].slice;\n\nref = require('../minimax'), MAX = ref.MAX, MIN = ref.MIN;\n\nref1 = require('./bin-tic-tac-toe'), _ = ref1._, X = ref1.X, O = ref1.O, decode = ref1.decode, empty = ref1.empty, bin = ref1.bin, at = ref1.at, rows = ref1.rows, columns = ref1.columns, diagonals = ref1.diagonals, lines = ref1.lines, isWin = ref1.isWin, winOn = ref1.winOn, isTerminal = ref1.isTerminal, evaluate = ref1.evaluate, BinTicTacToe = ref1.BinTicTacToe;\n\ne = empty;\n\nultimateEmpty = [e, e, e, e, e, e, e, e, e];\n\nrowsU = function(a) {\n  var i, m, ref2, results;\n  results = [];\n  for (i = m = 0, ref2 = 3 * 3; m < ref2; i = m += 3) {\n    results.push(a.slice(i, i + 3));\n  }\n  return results;\n};\n\ncolumnsU = function(a) {\n  var i, m, results;\n  results = [];\n  for (i = m = 0; m < 3; i = ++m) {\n    results.push([a[i], a[i + 3], a[i + 6]]);\n  }\n  return results;\n};\n\ndiagonalsU = function(a) {\n  return [[a[0], a[4], a[8]], [a[2], a[4], a[6]]];\n};\n\nlinesU = function(a) {\n  return slice.call(rowsU(a)).concat(slice.call(columnsU(a)), slice.call(diagonalsU(a)));\n};\n\nisWinU = function(a, W) {\n  var l, len, m, ref2;\n  ref2 = linesU(a);\n  for (m = 0, len = ref2.length; m < len; m++) {\n    l = ref2[m];\n    if (l.every(function(v) {\n      return isWin(v, W);\n    })) {\n      return true;\n    }\n  }\n  return false;\n};\n\nUltimateTicTacToe = (function() {\n  function UltimateTicTacToe(a1, nextPlayer, lastPlayedPosition, depth) {\n    this.a = a1 != null ? a1 : ultimateEmpty;\n    this.nextPlayer = nextPlayer != null ? nextPlayer : X;\n    this.lastPlayedPosition = lastPlayedPosition != null ? lastPlayedPosition : 4;\n    this.depth = depth != null ? depth : 0;\n  }\n\n  UltimateTicTacToe.prototype.at = function(i, j) {\n    return at(this.a[i], j);\n  };\n\n  UltimateTicTacToe.prototype.rows = function() {\n    return rowsU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.columns = function() {\n    return columnsU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.diagonals = function() {\n    return diagonalsU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.lines = function() {\n    return linesU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.isTerminal = function() {\n    return (this.possibleActions().length === 0) || (this.isWin(X)) || (this.isWin(O));\n  };\n\n  UltimateTicTacToe.prototype.isWin = function(W) {\n    return isWinU(this.a, W);\n  };\n\n  UltimateTicTacToe.prototype.winOn = function(i) {\n    return winOn(this.a[i]);\n  };\n\n  UltimateTicTacToe.prototype.nextAgent = function() {\n    if (this.nextPlayer === X) {\n      return MAX;\n    } else {\n      return MIN;\n    }\n  };\n\n  UltimateTicTacToe.prototype.opponent = function(who) {\n    if (who == null) {\n      who = this.nextPlayer;\n    }\n    if (who === X) {\n      return O;\n    } else {\n      return X;\n    }\n  };\n\n  UltimateTicTacToe.prototype.boardsForNextPlay = function() {\n    var i, len, m, ref2, res, v;\n    v = this.lastPlayedPosition != null ? this.a[this.lastPlayedPosition] : null;\n    if ((v != null) && !(isTerminal(v))) {\n      return [this.lastPlayedPosition];\n    } else {\n      res = [];\n      ref2 = this.a;\n      for (i = m = 0, len = ref2.length; m < len; i = ++m) {\n        v = ref2[i];\n        if (!isTerminal(v)) {\n          res.push(i);\n        }\n      }\n      return res;\n    }\n  };\n\n  UltimateTicTacToe.prototype.openPositions = function() {\n    var i, j, js, len, m, n, ref2, res, v;\n    res = [];\n    ref2 = this.boardsForNextPlay();\n    for (m = 0, len = ref2.length; m < len; m++) {\n      i = ref2[m];\n      v = this.a[i];\n      js = [];\n      for (j = n = 0; n < 18; j = n += 2) {\n        if ((0x3 << j & v) === 0) {\n          js.push(j / 2);\n        }\n      }\n      res.push([i, js]);\n    }\n    return res;\n  };\n\n  UltimateTicTacToe.prototype.action = function(ij) {\n    return ij;\n  };\n\n  UltimateTicTacToe.prototype.possibleActions = function() {\n    var i, j, js, len, len1, m, n, ref2, ref3, res;\n    if (this.actions != null) {\n      return this.actions;\n    }\n    res = [];\n    ref2 = this.openPositions();\n    for (m = 0, len = ref2.length; m < len; m++) {\n      ref3 = ref2[m], i = ref3[0], js = ref3[1];\n      for (n = 0, len1 = js.length; n < len1; n++) {\n        j = js[n];\n        res.push([i, j]);\n      }\n    }\n    return this.actions = res;\n  };\n\n  UltimateTicTacToe.prototype.play = function(arg) {\n    var a, i, j;\n    i = arg[0], j = arg[1];\n    a = this.a.slice();\n    a[i] = this.nextPlayer << (j * 2) | a[i];\n    return new this.constructor(a, this.opponent(), j, this.depth + 1);\n  };\n\n  UltimateTicTacToe.prototype.positionForAction = function(action) {\n    return action;\n  };\n\n  UltimateTicTacToe.prototype.utility = function() {\n    var i, j, k, l, len, len1, m, n, ref2, ref3, score, v;\n    score = 0;\n    ref2 = linesU(this.a);\n    for (m = 0, len = ref2.length; m < len; m++) {\n      l = ref2[m];\n      ref3 = [0, 0, 0], i = ref3[0], j = ref3[1], k = ref3[2];\n      for (n = 0, len1 = l.length; n < len1; n++) {\n        v = l[n];\n        if (isWin(v, X)) {\n          ++i;\n        } else if (isWin(v, O)) {\n          ++j;\n        }\n        k += evaluate(v);\n      }\n      if (i === 0 || j === 0) {\n        score += Math.pow(1000, i) - Math.pow(1000, j);\n      }\n      score += k;\n    }\n    return score;\n  };\n\n  UltimateTicTacToe.prototype.toString = function() {\n    var bri, m, n, ri, s, strRows, v, vs;\n    s = '';\n    for (bri = m = 0; m <= 2; bri = ++m) {\n      vs = this.rows()[bri];\n      for (ri = n = 0; n <= 2; ri = ++n) {\n        strRows = (function() {\n          var len, o, results;\n          results = [];\n          for (o = 0, len = vs.length; o < len; o++) {\n            v = vs[o];\n            results.push(\"|\" + (((function() {\n              var len1, p, ref2, results1;\n              ref2 = (rows(v))[ri];\n              results1 = [];\n              for (p = 0, len1 = ref2.length; p < len1; p++) {\n                e = ref2[p];\n                results1.push(decode(e));\n              }\n              return results1;\n            })()).join('|')) + \"|\");\n          }\n          return results;\n        })();\n        s += strRows.join(' ║ ');\n        if (bri < 2 || ri < 2) {\n          s += '\\n';\n        }\n      }\n      if (bri < 2) {\n        s += '════════╬═════════╬════════\\n';\n      }\n    }\n    return s;\n  };\n\n  return UltimateTicTacToe;\n\n})();\n\nmodule.exports = {\n  _: _,\n  X: X,\n  O: O,\n  bin: bin,\n  UltimateTicTacToe: UltimateTicTacToe\n};\n","var MAX, MIN, MinimaxAgent, ref;\n\nref = ['MAX', 'MIN'], MAX = ref[0], MIN = ref[1];\n\nMinimaxAgent = (function() {\n  function MinimaxAgent(depth) {\n    this.depth = depth != null ? depth : Infinity;\n    this.rootAgent = MAX;\n  }\n\n  MinimaxAgent.prototype.nextAction = function(state) {\n    var _, bestAction, ref1;\n    this.rootAgent = state.nextAgent();\n    ref1 = this.minimax(state), _ = ref1[0], bestAction = ref1[1];\n    return bestAction;\n  };\n\n  MinimaxAgent.prototype.minimax = function(state, α, β, ply) {\n    var isTerminal;\n    if (α == null) {\n      α = -Infinity;\n    }\n    if (β == null) {\n      β = +Infinity;\n    }\n    if (ply == null) {\n      ply = 0;\n    }\n    isTerminal = state.isTerminal();\n    if (!isTerminal && state.nextAgent() === this.rootAgent) {\n      ++ply;\n    }\n    if (ply > this.depth || isTerminal) {\n      return [state.utility(), null];\n    } else if (state.nextAgent() === MAX) {\n      return this.maxi(state, α, β, ply);\n    } else {\n      return this.mini(state, α, β, ply);\n    }\n  };\n\n  MinimaxAgent.prototype.maxi = function(state, α, β, ply) {\n    var _, a, action, i, len, nextValue, ref1, ref2, ref3, ref4, successor, v;\n    ref1 = [-Infinity, null], v = ref1[0], a = ref1[1];\n    ref2 = state.possibleActions();\n    for (i = 0, len = ref2.length; i < len; i++) {\n      action = ref2[i];\n      successor = state.play(action);\n      ref3 = this.minimax(successor, α, β, ply), nextValue = ref3[0], _ = ref3[1];\n      if (nextValue > v) {\n        ref4 = [nextValue, action], v = ref4[0], a = ref4[1];\n      }\n      if (v >= β) {\n        return [v, a];\n      }\n      α = Math.max(α, v);\n    }\n    return [v, a];\n  };\n\n  MinimaxAgent.prototype.mini = function(state, α, β, ply) {\n    var _, a, action, i, len, nextValue, ref1, ref2, ref3, ref4, successor, v;\n    ref1 = [+Infinity, null], v = ref1[0], a = ref1[1];\n    ref2 = state.possibleActions();\n    for (i = 0, len = ref2.length; i < len; i++) {\n      action = ref2[i];\n      successor = state.play(action);\n      ref3 = this.minimax(successor, α, β, ply), nextValue = ref3[0], _ = ref3[1];\n      if (nextValue < v) {\n        ref4 = [nextValue, action], v = ref4[0], a = ref4[1];\n      }\n      if (v <= α) {\n        return [v, a];\n      }\n      β = Math.min(β, v);\n    }\n    return [v, a];\n  };\n\n  return MinimaxAgent;\n\n})();\n\nmodule.exports = {\n  MAX: MAX,\n  MIN: MIN,\n  MinimaxAgent: MinimaxAgent\n};\n"],"sourceRoot":"/source/"}