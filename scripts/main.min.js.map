{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","app/scripts/index.coffee","main.min.js","node_modules/aye-aye/lib/games/bin-tic-tac-toe.js","node_modules/aye-aye/lib/games/ultimate-tic-tac-toe.js","node_modules/aye-aye/lib/minimax.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","$","MinimaxAgent","O","UltimateTicTacToe","X","decode","ref","jQuery","checkGameOver","computerPlayer","game","humanPlayer","markWins","next","playerO","playerX","setup","unplayable","player","nextPlayer","play","removeClass","off","j","k","results","wonClass","push","len","ref1","results1","winOn","at","addClass","isTerminal","text","isWin","on","modal","depth","agent","window","setTimeout","nextAction","toLowerCase","highlight","int","parseId","parseInt","match","ref2","possibleActions","tile","this","get","id","lastPlayedPosition","fn","each","el","width","outerWidth","height","outerHeight","css","position","left","offset","top","background-color","opacity","z-index","appendTo","fadeOut","queue","remove","aye-aye","aye-aye/lib/games/bin-tic-tac-toe","aye-aye/lib/games/ultimate-tic-tac-toe",2,"BinTicTacToe","MAX","MIN","_","allPlays","bin","changedOn","columns","diagonals","discountedUtility","empty","evaluate","evaluateCache","isFull","lines","masks","openPositions","opponent","positions","rows","utility","γ","slice","W","res","v","concat","m","ms","w","v1","v2","Math","pow","len1","ref3","score","x","value1","depth1","value","create","args","arguments","func","ctor","prototype","child","result","apply","Object","nextAgent","action","positionForAction","constructor","toString","join","../minimax",3,"columnsU","diagonalsU","isWinU","linesU","rowsU","ultimateEmpty","every","a1","who","boardsForNextPlay","js","ij","actions","arg","bri","ri","strRows","vs","p","./bin-tic-tac-toe",4,"Infinity","rootAgent","state","bestAction","minimax","α","β","ply","maxi","mini","nextValue","ref4","successor","max","min"],"mappings":"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","file":"main.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","$ = jQuery\n\n{MinimaxAgent} = require 'aye-aye'\n{X, O, decode} = require 'aye-aye/lib/games/bin-tic-tac-toe'\n{UltimateTicTacToe} = require 'aye-aye/lib/games/ultimate-tic-tac-toe'\n\n$ ->\n\n  game = null\n  playerX = null\n  playerO = null\n\n  next = ->\n    player = if game.nextPlayer is X then playerX else playerO\n    player.play()\n\n  unplayable = ->\n    $ '.tile'\n      .removeClass 'playable-tile'\n      .off 'click'\n\n  markWins = ->\n    for i in [0...9]\n      for j in game.winOn i\n        wonClass = if (game.at i, j) is X then 'x-won-tile' else 'o-won-tile'\n        $ \"##{i}\\\\,#{j}\"\n          .addClass wonClass\n\n  checkGameOver = ->\n    return no unless game.isTerminal()\n    $ '#game-over-text'\n      .text switch\n        when game.isWin(X) then 'X Wins!'\n        when game.isWin(O) then 'O Wins!'\n        else 'Draw!'\n    $ '#game-over'\n      .on 'hidden.bs.modal', -> setup()\n      .modal 'show'\n    yes\n\n  computerPlayer = (depth = 3) ->\n    agent = new MinimaxAgent depth\n    play: ->\n      window.setTimeout ->\n        unplayable()\n        markWins()\n        return if checkGameOver()\n        [i, j] = agent.nextAction game\n        $ \"##{i}\\\\,#{j}\"\n          .text (decode game.nextPlayer).toLowerCase()\n          .highlight()\n        game = game.play [i, j]\n        next()\n\n  humanPlayer = ->\n    int = (s) -> parseInt s, 10\n    parseId = (text) ->\n      match = text.match /(\\d),(\\d)/\n      [(int match[1]), (int match[2])]\n    play: ->\n      unplayable()\n      markWins()\n      return if checkGameOver()\n      for [i,j] in game.possibleActions()\n        $ \"##{i}\\\\,#{j}\"\n          .addClass 'playable-tile'\n      $ '.playable-tile'\n        .on 'click', ->\n          tile = ($ this)\n          tile.text (decode game.nextPlayer).toLowerCase()\n          game = game.play parseId tile.get(0).id\n          next()\n\n  setup = ->\n    playerX = humanPlayer()\n    playerO = computerPlayer()\n    $ '.tile'\n      .removeClass 'x-won-tile'\n      .removeClass 'o-won-tile'\n      .text ''\n    game = new UltimateTicTacToe\n    game.lastPlayedPosition = null\n    next()\n\n  setup()\n\n$.fn.highlight = ->\n  ($ this).each ->\n    el = $ this\n    $ '<div/>'\n      .width el.outerWidth()\n      .height el.outerHeight()\n      .css\n        'position': 'absolute'\n        'left': el.offset().left\n        'top': el.offset().top\n        'background-color': '#ffff77'\n        'opacity': .7\n        'z-index': 10\n      .appendTo 'body'\n      .fadeOut 1000\n      .queue -> ($ this).remove()\n",null,"var BinTicTacToe, MAX, MIN, O, X, _, allPlays, at, bin, changedOn, columns, decode, diagonals, discountedUtility, empty, evaluate, evaluateCache, isFull, isTerminal, isWin, lines, masks, openPositions, opponent, positions, ref, ref1, rows, utility, winOn, γ,\n  slice = [].slice;\n\nref = require('../minimax'), MAX = ref.MAX, MIN = ref.MIN;\n\nref1 = [0x0, 0x1, 0x2], _ = ref1[0], X = ref1[1], O = ref1[2];\n\nopponent = function(W) {\n  return ~W & 0x3;\n};\n\ndecode = function(W) {\n  return {\n    0x0: ' ',\n    0x1: 'X',\n    0x2: 'O'\n  }[W] || (function() {\n    throw new Error(W);\n  })();\n};\n\nempty = 0x0;\n\nbin = function(a) {\n  var e, i, j, len, res;\n  res = 0;\n  for (i = j = 0, len = a.length; j < len; i = ++j) {\n    e = a[i];\n    res |= e << (i * 2);\n  }\n  return res;\n};\n\nat = function(v, i) {\n  return v >> (i * 2) & 0x3;\n};\n\nrows = function(v) {\n  return [[at(v, 0), at(v, 1), at(v, 2)], [at(v, 3), at(v, 4), at(v, 5)], [at(v, 6), at(v, 7), at(v, 8)]];\n};\n\ncolumns = function(v) {\n  return [[at(v, 0), at(v, 3), at(v, 6)], [at(v, 1), at(v, 4), at(v, 7)], [at(v, 2), at(v, 5), at(v, 8)]];\n};\n\ndiagonals = function(v) {\n  return [[at(v, 0), at(v, 4), at(v, 8)], [at(v, 2), at(v, 4), at(v, 6)]];\n};\n\nlines = function(v) {\n  return slice.call(rows(v)).concat(slice.call(columns(v)), slice.call(diagonals(v)));\n};\n\nisFull = function(v) {\n  var i, j;\n  for (i = j = 0; j < 18; i = j += 2) {\n    if ((0x3 << i & v) === 0) {\n      return false;\n    }\n  }\n  return true;\n};\n\nmasks = {\n  0x1: [0x15, 0x540, 0x15000, 0x1041, 0x4104, 0x10410, 0x10101, 0x1110],\n  0x2: [0x2a, 0xa80, 0x2a000, 0x2082, 0x8208, 0x20820, 0x20202, 0x2220]\n};\n\npositions = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\nisWin = function(v, W) {\n  var j, len, m, ms;\n  ms = masks[W] || (function() {\n    throw new Error(W);\n  })();\n  for (j = 0, len = ms.length; j < len; j++) {\n    m = ms[j];\n    if ((m & v) === m) {\n      return true;\n    }\n  }\n  return false;\n};\n\nwinOn = function(v) {\n  var w;\n  w = function(W) {\n    var i, j, len, m, ms;\n    ms = masks[W];\n    for (i = j = 0, len = ms.length; j < len; i = ++j) {\n      m = ms[i];\n      if ((m & v) === m) {\n        return positions[i];\n      }\n    }\n    return null;\n  };\n  return (w(X)) || (w(O)) || [];\n};\n\nisTerminal = function(v) {\n  return (isFull(v)) || (isWin(v, X)) || (isWin(v, O));\n};\n\nopenPositions = function(v) {\n  var i, j, results;\n  results = [];\n  for (i = j = 0; j < 9; i = ++j) {\n    if ((0x3 << (i * 2) & v) === 0) {\n      results.push(i);\n    }\n  }\n  return results;\n};\n\nallPlays = function(v, W) {\n  var i, j, res;\n  res = [];\n  for (i = j = 0; j < 18; i = j += 2) {\n    if ((0x3 << i & v) === 0) {\n      res.push(W << i | v);\n    }\n  }\n  return res;\n};\n\nchangedOn = function(v1, v2) {\n  var i, j;\n  for (i = j = 0; j < 18; i = ++j) {\n    if ((0x3 << (i * 2) & v1) !== (0x3 << (i * 2) & v2)) {\n      return i;\n    }\n  }\n  return null;\n};\n\nγ = 0.1;\n\ndiscountedUtility = function(v, depth) {\n  if (depth == null) {\n    depth = 0;\n  }\n  return Math.pow(γ, depth) * utility(v);\n};\n\nutility = function(v) {\n  if (isWin(v, X)) {\n    return 2000;\n  } else if (isWin(v, O)) {\n    return -2000;\n  } else if (isFull(v)) {\n    return 0;\n  } else {\n    return evaluate(v);\n  }\n};\n\nevaluateCache = {};\n\nevaluate = function(v) {\n  var j, k, l, len, len1, o, ref2, ref3, score, w, x;\n  if (evaluateCache[v] != null) {\n    return evaluateCache[v];\n  }\n  score = 0;\n  ref2 = lines(v);\n  for (j = 0, len = ref2.length; j < len; j++) {\n    l = ref2[j];\n    ref3 = [0, 0], x = ref3[0], o = ref3[1];\n    for (k = 0, len1 = l.length; k < len1; k++) {\n      w = l[k];\n      if (w === X) {\n        ++x;\n      }\n      if (w === O) {\n        ++o;\n      }\n    }\n    if (x === 0 || o === 0) {\n      score += Math.pow(10, x) - Math.pow(10, o);\n    }\n  }\n  return evaluateCache[v] = score;\n};\n\nBinTicTacToe = (function() {\n  BinTicTacToe.create = function() {\n    var a, args;\n    a = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    if (a == null) {\n      a = [_, _, _, _, _, _, _, _, _];\n    }\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(BinTicTacToe, [bin(a)].concat(slice.call(args)), function(){});\n  };\n\n  function BinTicTacToe(value1, nextPlayer, depth1) {\n    this.value = value1 != null ? value1 : empty;\n    this.nextPlayer = nextPlayer != null ? nextPlayer : X;\n    this.depth = depth1 != null ? depth1 : 0;\n  }\n\n  BinTicTacToe.prototype.at = function(i) {\n    return at(this.value, i);\n  };\n\n  BinTicTacToe.prototype.rows = function() {\n    return rows(this.value);\n  };\n\n  BinTicTacToe.prototype.columns = function() {\n    return columns(this.value);\n  };\n\n  BinTicTacToe.prototype.diagonals = function() {\n    return diagonals(this.value);\n  };\n\n  BinTicTacToe.prototype.lines = function() {\n    return lines(this.value);\n  };\n\n  BinTicTacToe.prototype.isFull = function() {\n    return isFull(this.value);\n  };\n\n  BinTicTacToe.prototype.isWin = function(W) {\n    return isWin(this.value, W);\n  };\n\n  BinTicTacToe.prototype.winOn = function() {\n    return winOn(this.value);\n  };\n\n  BinTicTacToe.prototype.isTerminal = function() {\n    return isTerminal(this.value);\n  };\n\n  BinTicTacToe.prototype.nextAgent = function() {\n    if (this.nextPlayer === X) {\n      return MAX;\n    } else {\n      return MIN;\n    }\n  };\n\n  BinTicTacToe.prototype.openPositions = function() {\n    return openPositions(this.value);\n  };\n\n  BinTicTacToe.prototype.possibleActions = function() {\n    return allPlays(this.value, this.nextPlayer);\n  };\n\n  BinTicTacToe.prototype.action = function(i) {\n    return this.nextPlayer << (i * 2) | this.value;\n  };\n\n  BinTicTacToe.prototype.positionForAction = function(action) {\n    return changedOn(this.value, action);\n  };\n\n  BinTicTacToe.prototype.play = function(value) {\n    return new this.constructor(value, this.opponent(), this.depth + 1);\n  };\n\n  BinTicTacToe.prototype.utility = function() {\n    return utility(this.value);\n  };\n\n  BinTicTacToe.prototype.opponent = function(W) {\n    if (W == null) {\n      W = this.nextPlayer;\n    }\n    return opponent(W);\n  };\n\n  BinTicTacToe.prototype.toString = function() {\n    var e, r;\n    return ((function() {\n      var j, len, ref2, results;\n      ref2 = this.rows();\n      results = [];\n      for (j = 0, len = ref2.length; j < len; j++) {\n        r = ref2[j];\n        results.push(\"|\" + (((function() {\n          var k, len1, results1;\n          results1 = [];\n          for (k = 0, len1 = r.length; k < len1; k++) {\n            e = r[k];\n            results1.push(decode(e));\n          }\n          return results1;\n        })()).join('|')) + \"|\");\n      }\n      return results;\n    }).call(this)).join(\"\\n\");\n  };\n\n  return BinTicTacToe;\n\n})();\n\nmodule.exports = {\n  _: _,\n  X: X,\n  O: O,\n  opponent: opponent,\n  decode: decode,\n  empty: empty,\n  bin: bin,\n  at: at,\n  rows: rows,\n  columns: columns,\n  diagonals: diagonals,\n  lines: lines,\n  isFull: isFull,\n  isWin: isWin,\n  isTerminal: isTerminal,\n  openPositions: openPositions,\n  allPlays: allPlays,\n  changedOn: changedOn,\n  winOn: winOn,\n  discountedUtility: discountedUtility,\n  utility: utility,\n  evaluate: evaluate,\n  BinTicTacToe: BinTicTacToe\n};\n","var BinTicTacToe, MAX, MIN, O, UltimateTicTacToe, X, _, at, bin, columns, columnsU, decode, diagonals, diagonalsU, e, empty, evaluate, isTerminal, isWin, isWinU, lines, linesU, ref, ref1, rows, rowsU, ultimateEmpty, winOn,\n  slice = [].slice;\n\nref = require('../minimax'), MAX = ref.MAX, MIN = ref.MIN;\n\nref1 = require('./bin-tic-tac-toe'), _ = ref1._, X = ref1.X, O = ref1.O, decode = ref1.decode, empty = ref1.empty, bin = ref1.bin, at = ref1.at, rows = ref1.rows, columns = ref1.columns, diagonals = ref1.diagonals, lines = ref1.lines, isWin = ref1.isWin, winOn = ref1.winOn, isTerminal = ref1.isTerminal, evaluate = ref1.evaluate, BinTicTacToe = ref1.BinTicTacToe;\n\ne = empty;\n\nultimateEmpty = [e, e, e, e, e, e, e, e, e];\n\nrowsU = function(a) {\n  var i, m, ref2, results;\n  results = [];\n  for (i = m = 0, ref2 = 3 * 3; m < ref2; i = m += 3) {\n    results.push(a.slice(i, i + 3));\n  }\n  return results;\n};\n\ncolumnsU = function(a) {\n  var i, m, results;\n  results = [];\n  for (i = m = 0; m < 3; i = ++m) {\n    results.push([a[i], a[i + 3], a[i + 6]]);\n  }\n  return results;\n};\n\ndiagonalsU = function(a) {\n  return [[a[0], a[4], a[8]], [a[2], a[4], a[6]]];\n};\n\nlinesU = function(a) {\n  return slice.call(rowsU(a)).concat(slice.call(columnsU(a)), slice.call(diagonalsU(a)));\n};\n\nisWinU = function(a, W) {\n  var l, len, m, ref2;\n  ref2 = linesU(a);\n  for (m = 0, len = ref2.length; m < len; m++) {\n    l = ref2[m];\n    if (l.every(function(v) {\n      return isWin(v, W);\n    })) {\n      return true;\n    }\n  }\n  return false;\n};\n\nUltimateTicTacToe = (function() {\n  function UltimateTicTacToe(a1, nextPlayer, lastPlayedPosition, depth) {\n    this.a = a1 != null ? a1 : ultimateEmpty;\n    this.nextPlayer = nextPlayer != null ? nextPlayer : X;\n    this.lastPlayedPosition = lastPlayedPosition != null ? lastPlayedPosition : 4;\n    this.depth = depth != null ? depth : 0;\n  }\n\n  UltimateTicTacToe.prototype.at = function(i, j) {\n    return at(this.a[i], j);\n  };\n\n  UltimateTicTacToe.prototype.rows = function() {\n    return rowsU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.columns = function() {\n    return columnsU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.diagonals = function() {\n    return diagonalsU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.lines = function() {\n    return linesU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.isTerminal = function() {\n    return (this.possibleActions().length === 0) || (this.isWin(X)) || (this.isWin(O));\n  };\n\n  UltimateTicTacToe.prototype.isWin = function(W) {\n    return isWinU(this.a, W);\n  };\n\n  UltimateTicTacToe.prototype.winOn = function(i) {\n    return winOn(this.a[i]);\n  };\n\n  UltimateTicTacToe.prototype.nextAgent = function() {\n    if (this.nextPlayer === X) {\n      return MAX;\n    } else {\n      return MIN;\n    }\n  };\n\n  UltimateTicTacToe.prototype.opponent = function(who) {\n    if (who == null) {\n      who = this.nextPlayer;\n    }\n    if (who === X) {\n      return O;\n    } else {\n      return X;\n    }\n  };\n\n  UltimateTicTacToe.prototype.boardsForNextPlay = function() {\n    var i, len, m, ref2, res, v;\n    v = this.lastPlayedPosition != null ? this.a[this.lastPlayedPosition] : null;\n    if ((v != null) && !(isTerminal(v))) {\n      return [this.lastPlayedPosition];\n    } else {\n      res = [];\n      ref2 = this.a;\n      for (i = m = 0, len = ref2.length; m < len; i = ++m) {\n        v = ref2[i];\n        if (!isTerminal(v)) {\n          res.push(i);\n        }\n      }\n      return res;\n    }\n  };\n\n  UltimateTicTacToe.prototype.openPositions = function() {\n    var i, j, js, len, m, n, ref2, res, v;\n    res = [];\n    ref2 = this.boardsForNextPlay();\n    for (m = 0, len = ref2.length; m < len; m++) {\n      i = ref2[m];\n      v = this.a[i];\n      js = [];\n      for (j = n = 0; n < 18; j = n += 2) {\n        if ((0x3 << j & v) === 0) {\n          js.push(j / 2);\n        }\n      }\n      res.push([i, js]);\n    }\n    return res;\n  };\n\n  UltimateTicTacToe.prototype.action = function(ij) {\n    return ij;\n  };\n\n  UltimateTicTacToe.prototype.possibleActions = function() {\n    var i, j, js, len, len1, m, n, ref2, ref3, res;\n    if (this.actions != null) {\n      return this.actions;\n    }\n    res = [];\n    ref2 = this.openPositions();\n    for (m = 0, len = ref2.length; m < len; m++) {\n      ref3 = ref2[m], i = ref3[0], js = ref3[1];\n      for (n = 0, len1 = js.length; n < len1; n++) {\n        j = js[n];\n        res.push([i, j]);\n      }\n    }\n    return this.actions = res;\n  };\n\n  UltimateTicTacToe.prototype.play = function(arg) {\n    var a, i, j;\n    i = arg[0], j = arg[1];\n    a = this.a.slice();\n    a[i] = this.nextPlayer << (j * 2) | a[i];\n    return new this.constructor(a, this.opponent(), j, this.depth + 1);\n  };\n\n  UltimateTicTacToe.prototype.positionForAction = function(action) {\n    return action;\n  };\n\n  UltimateTicTacToe.prototype.utility = function() {\n    var i, j, k, l, len, len1, m, n, ref2, ref3, score, v;\n    score = 0;\n    ref2 = linesU(this.a);\n    for (m = 0, len = ref2.length; m < len; m++) {\n      l = ref2[m];\n      ref3 = [0, 0, 0], i = ref3[0], j = ref3[1], k = ref3[2];\n      for (n = 0, len1 = l.length; n < len1; n++) {\n        v = l[n];\n        if (isWin(v, X)) {\n          ++i;\n        } else if (isWin(v, O)) {\n          ++j;\n        }\n        k += evaluate(v);\n      }\n      if (i === 0 || j === 0) {\n        score += Math.pow(1000, i) - Math.pow(1000, j);\n      }\n      score += k;\n    }\n    return score;\n  };\n\n  UltimateTicTacToe.prototype.toString = function() {\n    var bri, m, n, ri, s, strRows, v, vs;\n    s = '';\n    for (bri = m = 0; m <= 2; bri = ++m) {\n      vs = this.rows()[bri];\n      for (ri = n = 0; n <= 2; ri = ++n) {\n        strRows = (function() {\n          var len, o, results;\n          results = [];\n          for (o = 0, len = vs.length; o < len; o++) {\n            v = vs[o];\n            results.push(\"|\" + (((function() {\n              var len1, p, ref2, results1;\n              ref2 = (rows(v))[ri];\n              results1 = [];\n              for (p = 0, len1 = ref2.length; p < len1; p++) {\n                e = ref2[p];\n                results1.push(decode(e));\n              }\n              return results1;\n            })()).join('|')) + \"|\");\n          }\n          return results;\n        })();\n        s += strRows.join(' ║ ');\n        if (bri < 2 || ri < 2) {\n          s += '\\n';\n        }\n      }\n      if (bri < 2) {\n        s += '════════╬═════════╬════════\\n';\n      }\n    }\n    return s;\n  };\n\n  return UltimateTicTacToe;\n\n})();\n\nmodule.exports = {\n  _: _,\n  X: X,\n  O: O,\n  bin: bin,\n  UltimateTicTacToe: UltimateTicTacToe\n};\n","var MAX, MIN, MinimaxAgent, ref;\n\nref = ['MAX', 'MIN'], MAX = ref[0], MIN = ref[1];\n\nMinimaxAgent = (function() {\n  function MinimaxAgent(depth) {\n    this.depth = depth != null ? depth : Infinity;\n    this.rootAgent = MAX;\n  }\n\n  MinimaxAgent.prototype.nextAction = function(state) {\n    var _, bestAction, ref1;\n    this.rootAgent = state.nextAgent();\n    ref1 = this.minimax(state), _ = ref1[0], bestAction = ref1[1];\n    return bestAction;\n  };\n\n  MinimaxAgent.prototype.minimax = function(state, α, β, ply) {\n    var isTerminal;\n    if (α == null) {\n      α = -Infinity;\n    }\n    if (β == null) {\n      β = +Infinity;\n    }\n    if (ply == null) {\n      ply = 0;\n    }\n    isTerminal = state.isTerminal();\n    if (!isTerminal && state.nextAgent() === this.rootAgent) {\n      ++ply;\n    }\n    if (ply > this.depth || isTerminal) {\n      return [state.utility(), null];\n    } else if (state.nextAgent() === MAX) {\n      return this.maxi(state, α, β, ply);\n    } else {\n      return this.mini(state, α, β, ply);\n    }\n  };\n\n  MinimaxAgent.prototype.maxi = function(state, α, β, ply) {\n    var _, a, action, i, len, nextValue, ref1, ref2, ref3, ref4, successor, v;\n    ref1 = [-Infinity, null], v = ref1[0], a = ref1[1];\n    ref2 = state.possibleActions();\n    for (i = 0, len = ref2.length; i < len; i++) {\n      action = ref2[i];\n      successor = state.play(action);\n      ref3 = this.minimax(successor, α, β, ply), nextValue = ref3[0], _ = ref3[1];\n      if (nextValue > v) {\n        ref4 = [nextValue, action], v = ref4[0], a = ref4[1];\n      }\n      if (v >= β) {\n        return [v, a];\n      }\n      α = Math.max(α, v);\n    }\n    return [v, a];\n  };\n\n  MinimaxAgent.prototype.mini = function(state, α, β, ply) {\n    var _, a, action, i, len, nextValue, ref1, ref2, ref3, ref4, successor, v;\n    ref1 = [+Infinity, null], v = ref1[0], a = ref1[1];\n    ref2 = state.possibleActions();\n    for (i = 0, len = ref2.length; i < len; i++) {\n      action = ref2[i];\n      successor = state.play(action);\n      ref3 = this.minimax(successor, α, β, ply), nextValue = ref3[0], _ = ref3[1];\n      if (nextValue < v) {\n        ref4 = [nextValue, action], v = ref4[0], a = ref4[1];\n      }\n      if (v <= α) {\n        return [v, a];\n      }\n      β = Math.min(β, v);\n    }\n    return [v, a];\n  };\n\n  return MinimaxAgent;\n\n})();\n\nmodule.exports = {\n  MAX: MAX,\n  MIN: MIN,\n  MinimaxAgent: MinimaxAgent\n};\n"],"sourceRoot":"/source/"}