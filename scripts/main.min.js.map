{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","app/scripts/index.coffee","main.min.js","node_modules/aye-aye/lib/games/bin-tic-tac-toe.js","node_modules/aye-aye/lib/games/ultimate-tic-tac-toe.js","node_modules/aye-aye/lib/minimax.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","$","MinimaxAgent","O","UltimateTicTacToe","X","decode","ref","jQuery","agent","checkGameOver","computerPlays","game","humanPlays","int","markWins","parseId","setup","unplayable","parseInt","text","match","removeClass","off","j","k","results","wonClass","push","len","ref1","results1","winOn","at","addClass","isTerminal","isWin","on","modal","nextAction","nextPlayer","toLowerCase","play","ref2","possibleActions","tile","this","get","id","aye-aye","aye-aye/lib/games/bin-tic-tac-toe","aye-aye/lib/games/ultimate-tic-tac-toe",2,"BinTicTacToe","MAX","MIN","_","allPlays","bin","changedOn","columns","diagonals","discountedUtility","empty","evaluate","evaluateCache","isFull","lines","masks","openPositions","opponent","positions","rows","utility","γ","slice","W","res","v","concat","m","ms","w","v1","v2","depth","Math","pow","len1","ref3","score","x","value1","depth1","value","create","args","arguments","func","ctor","prototype","child","result","apply","Object","nextAgent","action","positionForAction","constructor","toString","join","../minimax",3,"columnsU","diagonalsU","isWinU","linesU","rowsU","ultimateEmpty","every","a1","lastPlayedPosition","who","boardsForNextPlay","js","ij","actions","arg","bri","ri","strRows","vs","p","./bin-tic-tac-toe",4,"Infinity","rootAgent","state","bestAction","minimax","α","β","ply","maxi","mini","nextValue","ref4","successor","max","min"],"mappings":"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","file":"main.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","$ = jQuery\n\n{MinimaxAgent} = require 'aye-aye'\n{X, O, decode} = require 'aye-aye/lib/games/bin-tic-tac-toe'\n{UltimateTicTacToe} = require 'aye-aye/lib/games/ultimate-tic-tac-toe'\n\n$ ->\n\n  agent = new MinimaxAgent 3\n\n  game = null\n\n  int = (s) -> parseInt s, 10\n\n  parseId = (text) ->\n    match = text.match /(\\d),(\\d)/\n    [(int match[1]), (int match[2])]\n\n  setup = ->\n    ($ '.tile')\n      .removeClass 'x-won-tile'\n      .removeClass 'o-won-tile'\n      .text ''\n    game = new UltimateTicTacToe\n    humanPlays()\n\n  unplayable = ->\n    ($ '.tile')\n      .removeClass 'playable-tile'\n      .off 'click'\n\n  markWins = ->\n    for i in [0...9]\n      for j in game.winOn i\n        wonClass = if (game.at i, j) is X then 'x-won-tile' else 'o-won-tile'\n        ($ \"##{i}\\\\,#{j}\").addClass wonClass\n\n  checkGameOver = ->\n    return no unless game.isTerminal()\n    ($ '#game-over-text').text switch\n      when game.isWin(X) then 'X Wins!'\n      when game.isWin(O) then 'O Wins!'\n      else 'Draw!'\n    ($ '#game-over')\n      .on 'hidden.bs.modal', -> setup()\n      .modal 'show'\n    yes\n\n  computerPlays = ->\n    unplayable()\n    markWins()\n    return if checkGameOver()\n\n    [i, j] = agent.nextAction game\n    ($ \"##{i}\\\\,#{j}\").text (decode game.nextPlayer).toLowerCase()\n    game = game.play [i, j]\n\n    humanPlays()\n\n  humanPlays = ->\n\n    unplayable()\n    markWins()\n    return if checkGameOver()\n\n    for [i,j] in game.possibleActions()\n      ($ \"##{i}\\\\,#{j}\").addClass 'playable-tile'\n\n    ($ '.playable-tile')\n      .on 'click', ->\n        tile = ($ this)\n        tile.text (decode game.nextPlayer).toLowerCase()\n        game = game.play parseId tile.get(0).id\n        computerPlays()\n\n  setup()\n",null,"var BinTicTacToe, MAX, MIN, O, X, _, allPlays, at, bin, changedOn, columns, decode, diagonals, discountedUtility, empty, evaluate, evaluateCache, isFull, isTerminal, isWin, lines, masks, openPositions, opponent, positions, ref, ref1, rows, utility, winOn, γ,\n  slice = [].slice;\n\nref = require('../minimax'), MAX = ref.MAX, MIN = ref.MIN;\n\nref1 = [0x0, 0x1, 0x2], _ = ref1[0], X = ref1[1], O = ref1[2];\n\nopponent = function(W) {\n  return ~W & 0x3;\n};\n\ndecode = function(W) {\n  return {\n    0x0: ' ',\n    0x1: 'X',\n    0x2: 'O'\n  }[W] || (function() {\n    throw new Error(W);\n  })();\n};\n\nempty = 0x0;\n\nbin = function(a) {\n  var e, i, j, len, res;\n  res = 0;\n  for (i = j = 0, len = a.length; j < len; i = ++j) {\n    e = a[i];\n    res |= e << (i * 2);\n  }\n  return res;\n};\n\nat = function(v, i) {\n  return v >> (i * 2) & 0x3;\n};\n\nrows = function(v) {\n  return [[at(v, 0), at(v, 1), at(v, 2)], [at(v, 3), at(v, 4), at(v, 5)], [at(v, 6), at(v, 7), at(v, 8)]];\n};\n\ncolumns = function(v) {\n  return [[at(v, 0), at(v, 3), at(v, 6)], [at(v, 1), at(v, 4), at(v, 7)], [at(v, 2), at(v, 5), at(v, 8)]];\n};\n\ndiagonals = function(v) {\n  return [[at(v, 0), at(v, 4), at(v, 8)], [at(v, 2), at(v, 4), at(v, 6)]];\n};\n\nlines = function(v) {\n  return slice.call(rows(v)).concat(slice.call(columns(v)), slice.call(diagonals(v)));\n};\n\nisFull = function(v) {\n  var i, j;\n  for (i = j = 0; j < 18; i = j += 2) {\n    if ((0x3 << i & v) === 0) {\n      return false;\n    }\n  }\n  return true;\n};\n\nmasks = {\n  0x1: [0x15, 0x540, 0x15000, 0x1041, 0x4104, 0x10410, 0x10101, 0x1110],\n  0x2: [0x2a, 0xa80, 0x2a000, 0x2082, 0x8208, 0x20820, 0x20202, 0x2220]\n};\n\npositions = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\nisWin = function(v, W) {\n  var j, len, m, ms;\n  ms = masks[W] || (function() {\n    throw new Error(W);\n  })();\n  for (j = 0, len = ms.length; j < len; j++) {\n    m = ms[j];\n    if ((m & v) === m) {\n      return true;\n    }\n  }\n  return false;\n};\n\nwinOn = function(v) {\n  var w;\n  w = function(W) {\n    var i, j, len, m, ms;\n    ms = masks[W];\n    for (i = j = 0, len = ms.length; j < len; i = ++j) {\n      m = ms[i];\n      if ((m & v) === m) {\n        return positions[i];\n      }\n    }\n    return null;\n  };\n  return (w(X)) || (w(O)) || [];\n};\n\nisTerminal = function(v) {\n  return (isFull(v)) || (isWin(v, X)) || (isWin(v, O));\n};\n\nopenPositions = function(v) {\n  var i, j, results;\n  results = [];\n  for (i = j = 0; j < 9; i = ++j) {\n    if ((0x3 << (i * 2) & v) === 0) {\n      results.push(i);\n    }\n  }\n  return results;\n};\n\nallPlays = function(v, W) {\n  var i, j, res;\n  res = [];\n  for (i = j = 0; j < 18; i = j += 2) {\n    if ((0x3 << i & v) === 0) {\n      res.push(W << i | v);\n    }\n  }\n  return res;\n};\n\nchangedOn = function(v1, v2) {\n  var i, j;\n  for (i = j = 0; j < 18; i = ++j) {\n    if ((0x3 << (i * 2) & v1) !== (0x3 << (i * 2) & v2)) {\n      return i;\n    }\n  }\n  return null;\n};\n\nγ = 0.1;\n\ndiscountedUtility = function(v, depth) {\n  if (depth == null) {\n    depth = 0;\n  }\n  return Math.pow(γ, depth) * utility(v);\n};\n\nutility = function(v) {\n  if (isWin(v, X)) {\n    return 2000;\n  } else if (isWin(v, O)) {\n    return -2000;\n  } else if (isFull(v)) {\n    return 0;\n  } else {\n    return evaluate(v);\n  }\n};\n\nevaluateCache = {};\n\nevaluate = function(v) {\n  var j, k, l, len, len1, o, ref2, ref3, score, w, x;\n  if (evaluateCache[v] != null) {\n    return evaluateCache[v];\n  }\n  score = 0;\n  ref2 = lines(v);\n  for (j = 0, len = ref2.length; j < len; j++) {\n    l = ref2[j];\n    ref3 = [0, 0], x = ref3[0], o = ref3[1];\n    for (k = 0, len1 = l.length; k < len1; k++) {\n      w = l[k];\n      if (w === X) {\n        ++x;\n      }\n      if (w === O) {\n        ++o;\n      }\n    }\n    if (x === 0 || o === 0) {\n      score += Math.pow(10, x) - Math.pow(10, o);\n    }\n  }\n  return evaluateCache[v] = score;\n};\n\nBinTicTacToe = (function() {\n  BinTicTacToe.create = function() {\n    var a, args;\n    a = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    if (a == null) {\n      a = [_, _, _, _, _, _, _, _, _];\n    }\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(BinTicTacToe, [bin(a)].concat(slice.call(args)), function(){});\n  };\n\n  function BinTicTacToe(value1, nextPlayer, depth1) {\n    this.value = value1 != null ? value1 : empty;\n    this.nextPlayer = nextPlayer != null ? nextPlayer : X;\n    this.depth = depth1 != null ? depth1 : 0;\n  }\n\n  BinTicTacToe.prototype.at = function(i) {\n    return at(this.value, i);\n  };\n\n  BinTicTacToe.prototype.rows = function() {\n    return rows(this.value);\n  };\n\n  BinTicTacToe.prototype.columns = function() {\n    return columns(this.value);\n  };\n\n  BinTicTacToe.prototype.diagonals = function() {\n    return diagonals(this.value);\n  };\n\n  BinTicTacToe.prototype.lines = function() {\n    return lines(this.value);\n  };\n\n  BinTicTacToe.prototype.isFull = function() {\n    return isFull(this.value);\n  };\n\n  BinTicTacToe.prototype.isWin = function(W) {\n    return isWin(this.value, W);\n  };\n\n  BinTicTacToe.prototype.winOn = function() {\n    return winOn(this.value);\n  };\n\n  BinTicTacToe.prototype.isTerminal = function() {\n    return isTerminal(this.value);\n  };\n\n  BinTicTacToe.prototype.nextAgent = function() {\n    if (this.nextPlayer === X) {\n      return MAX;\n    } else {\n      return MIN;\n    }\n  };\n\n  BinTicTacToe.prototype.openPositions = function() {\n    return openPositions(this.value);\n  };\n\n  BinTicTacToe.prototype.possibleActions = function() {\n    return allPlays(this.value, this.nextPlayer);\n  };\n\n  BinTicTacToe.prototype.action = function(i) {\n    return this.nextPlayer << (i * 2) | this.value;\n  };\n\n  BinTicTacToe.prototype.positionForAction = function(action) {\n    return changedOn(this.value, action);\n  };\n\n  BinTicTacToe.prototype.play = function(value) {\n    return new this.constructor(value, this.opponent(), this.depth + 1);\n  };\n\n  BinTicTacToe.prototype.utility = function() {\n    return utility(this.value);\n  };\n\n  BinTicTacToe.prototype.opponent = function(W) {\n    if (W == null) {\n      W = this.nextPlayer;\n    }\n    return opponent(W);\n  };\n\n  BinTicTacToe.prototype.toString = function() {\n    var e, r;\n    return ((function() {\n      var j, len, ref2, results;\n      ref2 = this.rows();\n      results = [];\n      for (j = 0, len = ref2.length; j < len; j++) {\n        r = ref2[j];\n        results.push(\"|\" + (((function() {\n          var k, len1, results1;\n          results1 = [];\n          for (k = 0, len1 = r.length; k < len1; k++) {\n            e = r[k];\n            results1.push(decode(e));\n          }\n          return results1;\n        })()).join('|')) + \"|\");\n      }\n      return results;\n    }).call(this)).join(\"\\n\");\n  };\n\n  return BinTicTacToe;\n\n})();\n\nmodule.exports = {\n  _: _,\n  X: X,\n  O: O,\n  opponent: opponent,\n  decode: decode,\n  empty: empty,\n  bin: bin,\n  at: at,\n  rows: rows,\n  columns: columns,\n  diagonals: diagonals,\n  lines: lines,\n  isFull: isFull,\n  isWin: isWin,\n  isTerminal: isTerminal,\n  openPositions: openPositions,\n  allPlays: allPlays,\n  changedOn: changedOn,\n  winOn: winOn,\n  discountedUtility: discountedUtility,\n  utility: utility,\n  evaluate: evaluate,\n  BinTicTacToe: BinTicTacToe\n};\n","var BinTicTacToe, MAX, MIN, O, UltimateTicTacToe, X, _, at, bin, columns, columnsU, decode, diagonals, diagonalsU, e, empty, evaluate, isTerminal, isWin, isWinU, lines, linesU, ref, ref1, rows, rowsU, ultimateEmpty, winOn,\n  slice = [].slice;\n\nref = require('../minimax'), MAX = ref.MAX, MIN = ref.MIN;\n\nref1 = require('./bin-tic-tac-toe'), _ = ref1._, X = ref1.X, O = ref1.O, decode = ref1.decode, empty = ref1.empty, bin = ref1.bin, at = ref1.at, rows = ref1.rows, columns = ref1.columns, diagonals = ref1.diagonals, lines = ref1.lines, isWin = ref1.isWin, winOn = ref1.winOn, isTerminal = ref1.isTerminal, evaluate = ref1.evaluate, BinTicTacToe = ref1.BinTicTacToe;\n\ne = empty;\n\nultimateEmpty = [e, e, e, e, e, e, e, e, e];\n\nrowsU = function(a) {\n  var i, m, ref2, results;\n  results = [];\n  for (i = m = 0, ref2 = 3 * 3; m < ref2; i = m += 3) {\n    results.push(a.slice(i, i + 3));\n  }\n  return results;\n};\n\ncolumnsU = function(a) {\n  var i, m, results;\n  results = [];\n  for (i = m = 0; m < 3; i = ++m) {\n    results.push([a[i], a[i + 3], a[i + 6]]);\n  }\n  return results;\n};\n\ndiagonalsU = function(a) {\n  return [[a[0], a[4], a[8]], [a[2], a[4], a[6]]];\n};\n\nlinesU = function(a) {\n  return slice.call(rowsU(a)).concat(slice.call(columnsU(a)), slice.call(diagonalsU(a)));\n};\n\nisWinU = function(a, W) {\n  var l, len, m, ref2;\n  ref2 = linesU(a);\n  for (m = 0, len = ref2.length; m < len; m++) {\n    l = ref2[m];\n    if (l.every(function(v) {\n      return isWin(v, W);\n    })) {\n      return true;\n    }\n  }\n  return false;\n};\n\nUltimateTicTacToe = (function() {\n  function UltimateTicTacToe(a1, nextPlayer, lastPlayedPosition, depth) {\n    this.a = a1 != null ? a1 : ultimateEmpty;\n    this.nextPlayer = nextPlayer != null ? nextPlayer : X;\n    this.lastPlayedPosition = lastPlayedPosition != null ? lastPlayedPosition : 4;\n    this.depth = depth != null ? depth : 0;\n  }\n\n  UltimateTicTacToe.prototype.at = function(i, j) {\n    return at(this.a[i], j);\n  };\n\n  UltimateTicTacToe.prototype.rows = function() {\n    return rowsU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.columns = function() {\n    return columnsU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.diagonals = function() {\n    return diagonalsU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.lines = function() {\n    return linesU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.isTerminal = function() {\n    return (this.possibleActions().length === 0) || (this.isWin(X)) || (this.isWin(O));\n  };\n\n  UltimateTicTacToe.prototype.isWin = function(W) {\n    return isWinU(this.a, W);\n  };\n\n  UltimateTicTacToe.prototype.winOn = function(i) {\n    return winOn(this.a[i]);\n  };\n\n  UltimateTicTacToe.prototype.nextAgent = function() {\n    if (this.nextPlayer === X) {\n      return MAX;\n    } else {\n      return MIN;\n    }\n  };\n\n  UltimateTicTacToe.prototype.opponent = function(who) {\n    if (who == null) {\n      who = this.nextPlayer;\n    }\n    if (who === X) {\n      return O;\n    } else {\n      return X;\n    }\n  };\n\n  UltimateTicTacToe.prototype.boardsForNextPlay = function() {\n    var i, len, m, ref2, res, v;\n    v = this.lastPlayedPosition != null ? this.a[this.lastPlayedPosition] : null;\n    if ((v != null) && !(isTerminal(v))) {\n      return [this.lastPlayedPosition];\n    } else {\n      res = [];\n      ref2 = this.a;\n      for (i = m = 0, len = ref2.length; m < len; i = ++m) {\n        v = ref2[i];\n        if (!isTerminal(v)) {\n          res.push(i);\n        }\n      }\n      return res;\n    }\n  };\n\n  UltimateTicTacToe.prototype.openPositions = function() {\n    var i, j, js, len, m, n, ref2, res, v;\n    res = [];\n    ref2 = this.boardsForNextPlay();\n    for (m = 0, len = ref2.length; m < len; m++) {\n      i = ref2[m];\n      v = this.a[i];\n      js = [];\n      for (j = n = 0; n < 18; j = n += 2) {\n        if ((0x3 << j & v) === 0) {\n          js.push(j / 2);\n        }\n      }\n      res.push([i, js]);\n    }\n    return res;\n  };\n\n  UltimateTicTacToe.prototype.action = function(ij) {\n    return ij;\n  };\n\n  UltimateTicTacToe.prototype.possibleActions = function() {\n    var i, j, js, len, len1, m, n, ref2, ref3, res;\n    if (this.actions != null) {\n      return this.actions;\n    }\n    res = [];\n    ref2 = this.openPositions();\n    for (m = 0, len = ref2.length; m < len; m++) {\n      ref3 = ref2[m], i = ref3[0], js = ref3[1];\n      for (n = 0, len1 = js.length; n < len1; n++) {\n        j = js[n];\n        res.push([i, j]);\n      }\n    }\n    return this.actions = res;\n  };\n\n  UltimateTicTacToe.prototype.play = function(arg) {\n    var a, i, j;\n    i = arg[0], j = arg[1];\n    a = this.a.slice();\n    a[i] = this.nextPlayer << (j * 2) | a[i];\n    return new this.constructor(a, this.opponent(), j, this.depth + 1);\n  };\n\n  UltimateTicTacToe.prototype.positionForAction = function(action) {\n    return action;\n  };\n\n  UltimateTicTacToe.prototype.utility = function() {\n    var i, j, k, l, len, len1, m, n, ref2, ref3, score, v;\n    score = 0;\n    ref2 = linesU(this.a);\n    for (m = 0, len = ref2.length; m < len; m++) {\n      l = ref2[m];\n      ref3 = [0, 0, 0], i = ref3[0], j = ref3[1], k = ref3[2];\n      for (n = 0, len1 = l.length; n < len1; n++) {\n        v = l[n];\n        if (isWin(v, X)) {\n          ++i;\n        } else if (isWin(v, O)) {\n          ++j;\n        }\n        k += evaluate(v);\n      }\n      if (i === 0 || j === 0) {\n        score += Math.pow(1000, i) - Math.pow(1000, j);\n      }\n      score += k;\n    }\n    return score;\n  };\n\n  UltimateTicTacToe.prototype.toString = function() {\n    var bri, m, n, ri, s, strRows, v, vs;\n    s = '';\n    for (bri = m = 0; m <= 2; bri = ++m) {\n      vs = this.rows()[bri];\n      for (ri = n = 0; n <= 2; ri = ++n) {\n        strRows = (function() {\n          var len, o, results;\n          results = [];\n          for (o = 0, len = vs.length; o < len; o++) {\n            v = vs[o];\n            results.push(\"|\" + (((function() {\n              var len1, p, ref2, results1;\n              ref2 = (rows(v))[ri];\n              results1 = [];\n              for (p = 0, len1 = ref2.length; p < len1; p++) {\n                e = ref2[p];\n                results1.push(decode(e));\n              }\n              return results1;\n            })()).join('|')) + \"|\");\n          }\n          return results;\n        })();\n        s += strRows.join(' ║ ');\n        if (bri < 2 || ri < 2) {\n          s += '\\n';\n        }\n      }\n      if (bri < 2) {\n        s += '════════╬═════════╬════════\\n';\n      }\n    }\n    return s;\n  };\n\n  return UltimateTicTacToe;\n\n})();\n\nmodule.exports = {\n  _: _,\n  X: X,\n  O: O,\n  bin: bin,\n  UltimateTicTacToe: UltimateTicTacToe\n};\n","var MAX, MIN, MinimaxAgent, ref;\n\nref = ['MAX', 'MIN'], MAX = ref[0], MIN = ref[1];\n\nMinimaxAgent = (function() {\n  function MinimaxAgent(depth) {\n    this.depth = depth != null ? depth : Infinity;\n    this.rootAgent = MAX;\n  }\n\n  MinimaxAgent.prototype.nextAction = function(state) {\n    var _, bestAction, ref1;\n    this.rootAgent = state.nextAgent();\n    ref1 = this.minimax(state), _ = ref1[0], bestAction = ref1[1];\n    return bestAction;\n  };\n\n  MinimaxAgent.prototype.minimax = function(state, α, β, ply) {\n    var isTerminal;\n    if (α == null) {\n      α = -Infinity;\n    }\n    if (β == null) {\n      β = +Infinity;\n    }\n    if (ply == null) {\n      ply = 0;\n    }\n    isTerminal = state.isTerminal();\n    if (!isTerminal && state.nextAgent() === this.rootAgent) {\n      ++ply;\n    }\n    if (ply > this.depth || isTerminal) {\n      return [state.utility(), null];\n    } else if (state.nextAgent() === MAX) {\n      return this.maxi(state, α, β, ply);\n    } else {\n      return this.mini(state, α, β, ply);\n    }\n  };\n\n  MinimaxAgent.prototype.maxi = function(state, α, β, ply) {\n    var _, a, action, i, len, nextValue, ref1, ref2, ref3, ref4, successor, v;\n    ref1 = [-Infinity, null], v = ref1[0], a = ref1[1];\n    ref2 = state.possibleActions();\n    for (i = 0, len = ref2.length; i < len; i++) {\n      action = ref2[i];\n      successor = state.play(action);\n      ref3 = this.minimax(successor, α, β, ply), nextValue = ref3[0], _ = ref3[1];\n      if (nextValue > v) {\n        ref4 = [nextValue, action], v = ref4[0], a = ref4[1];\n      }\n      if (v >= β) {\n        return [v, a];\n      }\n      α = Math.max(α, v);\n    }\n    return [v, a];\n  };\n\n  MinimaxAgent.prototype.mini = function(state, α, β, ply) {\n    var _, a, action, i, len, nextValue, ref1, ref2, ref3, ref4, successor, v;\n    ref1 = [+Infinity, null], v = ref1[0], a = ref1[1];\n    ref2 = state.possibleActions();\n    for (i = 0, len = ref2.length; i < len; i++) {\n      action = ref2[i];\n      successor = state.play(action);\n      ref3 = this.minimax(successor, α, β, ply), nextValue = ref3[0], _ = ref3[1];\n      if (nextValue < v) {\n        ref4 = [nextValue, action], v = ref4[0], a = ref4[1];\n      }\n      if (v <= α) {\n        return [v, a];\n      }\n      β = Math.min(β, v);\n    }\n    return [v, a];\n  };\n\n  return MinimaxAgent;\n\n})();\n\nmodule.exports = {\n  MAX: MAX,\n  MIN: MIN,\n  MinimaxAgent: MinimaxAgent\n};\n"],"sourceRoot":"/source/"}