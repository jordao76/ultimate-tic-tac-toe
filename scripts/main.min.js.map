{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","app/scripts/index.coffee","main.min.js","node_modules/aye-aye/lib/games/bin-tic-tac-toe.js","node_modules/aye-aye/lib/games/ultimate-tic-tac-toe.js","node_modules/aye-aye/lib/minimax.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","$","O","UltimateTicTacToe","X","decode","ref","jQuery","prototype","state","this","nextPlayer","lastPlayedPosition","depth","checkGameOver","computerPlayer","createPlayerO","createPlayerX","game","humanPlayer","markWins","next","playable","playerO","playerX","setup","unplayable","player","play","removeClass","off","j","k","results","wonClass","push","len","ref1","results1","winOn","at","addClass","isTerminal","end","text","isWin","on","modal","worker","Worker","postMessage","command","onmessage","data","action","toLowerCase","highlight","gameState","terminate","className","ref2","possibleActions","int","parseId","parseInt","match","tile","get","id","fn","each","el","width","outerWidth","height","outerHeight","css","position","left","offset","top","background-color","opacity","z-index","appendTo","fadeOut","queue","remove","aye-aye/lib/games/bin-tic-tac-toe","aye-aye/lib/games/ultimate-tic-tac-toe",2,"BinTicTacToe","MAX","MIN","_","allPlays","bin","changedOn","columns","diagonals","discountedUtility","empty","evaluate","evaluateCache","isFull","lines","masks","openPositions","opponent","positions","rows","utility","γ","slice","W","res","v","concat","m","ms","w","v1","v2","Math","pow","len1","ref3","score","x","value1","depth1","value","create","args","arguments","func","ctor","child","result","apply","Object","nextAgent","positionForAction","constructor","toString","join","../minimax",3,"columnsU","diagonalsU","isWinU","linesU","rowsU","ultimateEmpty","every","a1","who","boardsForNextPlay","js","ij","actions","arg","bri","ri","strRows","vs","p","./bin-tic-tac-toe",4,"MinimaxAgent","Infinity","rootAgent","nextAction","bestAction","minimax","α","β","ply","maxi","mini","nextValue","ref4","successor","max","min"],"mappings":"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","file":"main.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","$ = jQuery\n\n{X, O, decode} = require 'aye-aye/lib/games/bin-tic-tac-toe'\n{UltimateTicTacToe} = require 'aye-aye/lib/games/ultimate-tic-tac-toe'\n\nUltimateTicTacToe::state = ->\n  {@a, @nextPlayer, @lastPlayedPosition, @depth}\n\n$ ->\n\n  game = null\n  playerX = null\n  playerO = null\n\n  createPlayerX = -> humanPlayer()\n  createPlayerO = -> computerPlayer()\n\n  next = ->\n    player = if game.nextPlayer is X then playerX else playerO\n    player.play()\n\n  unplayable = ->\n    $ '.tile'\n      .removeClass 'human-playable-tile'\n      .removeClass 'computer-playable-tile'\n      .off 'click'\n\n  markWins = ->\n    for i in [0...9]\n      for j in game.winOn i\n        wonClass = if (game.at i, j) is X then 'x-won-tile' else 'o-won-tile'\n        $ \"##{i}\\\\,#{j}\"\n          .addClass wonClass\n\n  checkGameOver = ->\n    return no unless game.isTerminal()\n    playerX.end?()\n    playerO.end?()\n    $ '#game-over-text'\n      .text switch\n        when game.isWin(X) then 'X Wins!'\n        when game.isWin(O) then 'O Wins!'\n        else 'Draw!'\n    $ '#game-over'\n      .off 'hidden.bs.modal'\n      .on 'hidden.bs.modal', setup\n      .modal 'show'\n    yes\n\n  computerPlayer = (depth = 3) ->\n    worker = new Worker 'scripts/minimax-worker.min.js'\n    worker.postMessage command: 'setup', depth: depth\n    worker.onmessage = (e) ->\n      [i, j] = e.data.action\n      $ \"##{i}\\\\,#{j}\"\n        .text (decode game.nextPlayer).toLowerCase()\n        .highlight()\n      game = game.play [i, j]\n      next()\n    play: ->\n      unplayable()\n      markWins()\n      return if checkGameOver()\n      playable 'computer-playable-tile'\n      worker.postMessage command: 'play', gameState: game.state()\n    end: ->\n      worker.terminate()\n\n  playable = (className) ->\n    for [i,j] in game.possibleActions()\n      $ \"##{i}\\\\,#{j}\"\n        .addClass className\n\n  humanPlayer = ->\n    int = (s) -> parseInt s, 10\n    parseId = (text) ->\n      match = text.match /(\\d),(\\d)/\n      [(int match[1]), (int match[2])]\n    play: ->\n      unplayable()\n      markWins()\n      return if checkGameOver()\n      playable 'human-playable-tile'\n      $ '.human-playable-tile'\n        .on 'click', ->\n          tile = ($ this)\n          tile.text (decode game.nextPlayer).toLowerCase()\n          game = game.play parseId tile.get(0).id\n          next()\n\n  setup = ->\n    game = new UltimateTicTacToe\n    playerX = createPlayerX()\n    playerO = createPlayerO()\n    $ '.tile'\n      .removeClass 'x-won-tile'\n      .removeClass 'o-won-tile'\n      .text ''\n    next()\n\n  setup()\n\n$.fn.highlight = ->\n  ($ this).each ->\n    el = $ this\n    $ '<div/>'\n      .width el.outerWidth()\n      .height el.outerHeight()\n      .css\n        'position': 'absolute'\n        'left': el.offset().left\n        'top': el.offset().top\n        'background-color': '#ffff77'\n        'opacity': .7\n        'z-index': 10\n      .appendTo 'body'\n      .fadeOut 1000\n      .queue -> ($ this).remove()\n",null,"var BinTicTacToe, MAX, MIN, O, X, _, allPlays, at, bin, changedOn, columns, decode, diagonals, discountedUtility, empty, evaluate, evaluateCache, isFull, isTerminal, isWin, lines, masks, openPositions, opponent, positions, ref, ref1, rows, utility, winOn, γ,\n  slice = [].slice;\n\nref = require('../minimax'), MAX = ref.MAX, MIN = ref.MIN;\n\nref1 = [0x0, 0x1, 0x2], _ = ref1[0], X = ref1[1], O = ref1[2];\n\nopponent = function(W) {\n  return ~W & 0x3;\n};\n\ndecode = function(W) {\n  return {\n    0x0: ' ',\n    0x1: 'X',\n    0x2: 'O'\n  }[W] || (function() {\n    throw new Error(W);\n  })();\n};\n\nempty = 0x0;\n\nbin = function(a) {\n  var e, i, j, len, res;\n  res = 0;\n  for (i = j = 0, len = a.length; j < len; i = ++j) {\n    e = a[i];\n    res |= e << (i * 2);\n  }\n  return res;\n};\n\nat = function(v, i) {\n  return v >> (i * 2) & 0x3;\n};\n\nrows = function(v) {\n  return [[at(v, 0), at(v, 1), at(v, 2)], [at(v, 3), at(v, 4), at(v, 5)], [at(v, 6), at(v, 7), at(v, 8)]];\n};\n\ncolumns = function(v) {\n  return [[at(v, 0), at(v, 3), at(v, 6)], [at(v, 1), at(v, 4), at(v, 7)], [at(v, 2), at(v, 5), at(v, 8)]];\n};\n\ndiagonals = function(v) {\n  return [[at(v, 0), at(v, 4), at(v, 8)], [at(v, 2), at(v, 4), at(v, 6)]];\n};\n\nlines = function(v) {\n  return slice.call(rows(v)).concat(slice.call(columns(v)), slice.call(diagonals(v)));\n};\n\nisFull = function(v) {\n  var i, j;\n  for (i = j = 0; j < 18; i = j += 2) {\n    if ((0x3 << i & v) === 0) {\n      return false;\n    }\n  }\n  return true;\n};\n\nmasks = {\n  0x1: [0x15, 0x540, 0x15000, 0x1041, 0x4104, 0x10410, 0x10101, 0x1110],\n  0x2: [0x2a, 0xa80, 0x2a000, 0x2082, 0x8208, 0x20820, 0x20202, 0x2220]\n};\n\npositions = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\nisWin = function(v, W) {\n  var j, len, m, ms;\n  ms = masks[W] || (function() {\n    throw new Error(W);\n  })();\n  for (j = 0, len = ms.length; j < len; j++) {\n    m = ms[j];\n    if ((m & v) === m) {\n      return true;\n    }\n  }\n  return false;\n};\n\nwinOn = function(v) {\n  var w;\n  w = function(W) {\n    var i, j, len, m, ms;\n    ms = masks[W];\n    for (i = j = 0, len = ms.length; j < len; i = ++j) {\n      m = ms[i];\n      if ((m & v) === m) {\n        return positions[i];\n      }\n    }\n    return null;\n  };\n  return (w(X)) || (w(O)) || [];\n};\n\nisTerminal = function(v) {\n  return (isFull(v)) || (isWin(v, X)) || (isWin(v, O));\n};\n\nopenPositions = function(v) {\n  var i, j, results;\n  results = [];\n  for (i = j = 0; j < 9; i = ++j) {\n    if ((0x3 << (i * 2) & v) === 0) {\n      results.push(i);\n    }\n  }\n  return results;\n};\n\nallPlays = function(v, W) {\n  var i, j, res;\n  res = [];\n  for (i = j = 0; j < 18; i = j += 2) {\n    if ((0x3 << i & v) === 0) {\n      res.push(W << i | v);\n    }\n  }\n  return res;\n};\n\nchangedOn = function(v1, v2) {\n  var i, j;\n  for (i = j = 0; j < 18; i = ++j) {\n    if ((0x3 << (i * 2) & v1) !== (0x3 << (i * 2) & v2)) {\n      return i;\n    }\n  }\n  return null;\n};\n\nγ = 0.1;\n\ndiscountedUtility = function(v, depth) {\n  if (depth == null) {\n    depth = 0;\n  }\n  return Math.pow(γ, depth) * utility(v);\n};\n\nutility = function(v) {\n  if (isWin(v, X)) {\n    return 2000;\n  } else if (isWin(v, O)) {\n    return -2000;\n  } else if (isFull(v)) {\n    return 0;\n  } else {\n    return evaluate(v);\n  }\n};\n\nevaluateCache = {};\n\nevaluate = function(v) {\n  var j, k, l, len, len1, o, ref2, ref3, score, w, x;\n  if (evaluateCache[v] != null) {\n    return evaluateCache[v];\n  }\n  score = 0;\n  ref2 = lines(v);\n  for (j = 0, len = ref2.length; j < len; j++) {\n    l = ref2[j];\n    ref3 = [0, 0], x = ref3[0], o = ref3[1];\n    for (k = 0, len1 = l.length; k < len1; k++) {\n      w = l[k];\n      if (w === X) {\n        ++x;\n      }\n      if (w === O) {\n        ++o;\n      }\n    }\n    if (x === 0 || o === 0) {\n      score += Math.pow(10, x) - Math.pow(10, o);\n    }\n  }\n  return evaluateCache[v] = score;\n};\n\nBinTicTacToe = (function() {\n  BinTicTacToe.create = function() {\n    var a, args;\n    a = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    if (a == null) {\n      a = [_, _, _, _, _, _, _, _, _];\n    }\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(BinTicTacToe, [bin(a)].concat(slice.call(args)), function(){});\n  };\n\n  function BinTicTacToe(value1, nextPlayer, depth1) {\n    this.value = value1 != null ? value1 : empty;\n    this.nextPlayer = nextPlayer != null ? nextPlayer : X;\n    this.depth = depth1 != null ? depth1 : 0;\n  }\n\n  BinTicTacToe.prototype.at = function(i) {\n    return at(this.value, i);\n  };\n\n  BinTicTacToe.prototype.rows = function() {\n    return rows(this.value);\n  };\n\n  BinTicTacToe.prototype.columns = function() {\n    return columns(this.value);\n  };\n\n  BinTicTacToe.prototype.diagonals = function() {\n    return diagonals(this.value);\n  };\n\n  BinTicTacToe.prototype.lines = function() {\n    return lines(this.value);\n  };\n\n  BinTicTacToe.prototype.isFull = function() {\n    return isFull(this.value);\n  };\n\n  BinTicTacToe.prototype.isWin = function(W) {\n    return isWin(this.value, W);\n  };\n\n  BinTicTacToe.prototype.winOn = function() {\n    return winOn(this.value);\n  };\n\n  BinTicTacToe.prototype.isTerminal = function() {\n    return isTerminal(this.value);\n  };\n\n  BinTicTacToe.prototype.nextAgent = function() {\n    if (this.nextPlayer === X) {\n      return MAX;\n    } else {\n      return MIN;\n    }\n  };\n\n  BinTicTacToe.prototype.openPositions = function() {\n    return openPositions(this.value);\n  };\n\n  BinTicTacToe.prototype.possibleActions = function() {\n    return allPlays(this.value, this.nextPlayer);\n  };\n\n  BinTicTacToe.prototype.action = function(i) {\n    return this.nextPlayer << (i * 2) | this.value;\n  };\n\n  BinTicTacToe.prototype.positionForAction = function(action) {\n    return changedOn(this.value, action);\n  };\n\n  BinTicTacToe.prototype.play = function(value) {\n    return new this.constructor(value, this.opponent(), this.depth + 1);\n  };\n\n  BinTicTacToe.prototype.utility = function() {\n    return utility(this.value);\n  };\n\n  BinTicTacToe.prototype.opponent = function(W) {\n    if (W == null) {\n      W = this.nextPlayer;\n    }\n    return opponent(W);\n  };\n\n  BinTicTacToe.prototype.toString = function() {\n    var e, r;\n    return ((function() {\n      var j, len, ref2, results;\n      ref2 = this.rows();\n      results = [];\n      for (j = 0, len = ref2.length; j < len; j++) {\n        r = ref2[j];\n        results.push(\"|\" + (((function() {\n          var k, len1, results1;\n          results1 = [];\n          for (k = 0, len1 = r.length; k < len1; k++) {\n            e = r[k];\n            results1.push(decode(e));\n          }\n          return results1;\n        })()).join('|')) + \"|\");\n      }\n      return results;\n    }).call(this)).join(\"\\n\");\n  };\n\n  return BinTicTacToe;\n\n})();\n\nmodule.exports = {\n  _: _,\n  X: X,\n  O: O,\n  opponent: opponent,\n  decode: decode,\n  empty: empty,\n  bin: bin,\n  at: at,\n  rows: rows,\n  columns: columns,\n  diagonals: diagonals,\n  lines: lines,\n  isFull: isFull,\n  isWin: isWin,\n  isTerminal: isTerminal,\n  openPositions: openPositions,\n  allPlays: allPlays,\n  changedOn: changedOn,\n  winOn: winOn,\n  discountedUtility: discountedUtility,\n  utility: utility,\n  evaluate: evaluate,\n  BinTicTacToe: BinTicTacToe\n};\n","var BinTicTacToe, MAX, MIN, O, UltimateTicTacToe, X, _, at, bin, columns, columnsU, decode, diagonals, diagonalsU, e, empty, evaluate, isTerminal, isWin, isWinU, lines, linesU, ref, ref1, rows, rowsU, ultimateEmpty, winOn,\n  slice = [].slice;\n\nref = require('../minimax'), MAX = ref.MAX, MIN = ref.MIN;\n\nref1 = require('./bin-tic-tac-toe'), _ = ref1._, X = ref1.X, O = ref1.O, decode = ref1.decode, empty = ref1.empty, bin = ref1.bin, at = ref1.at, rows = ref1.rows, columns = ref1.columns, diagonals = ref1.diagonals, lines = ref1.lines, isWin = ref1.isWin, winOn = ref1.winOn, isTerminal = ref1.isTerminal, evaluate = ref1.evaluate, BinTicTacToe = ref1.BinTicTacToe;\n\ne = empty;\n\nultimateEmpty = [e, e, e, e, e, e, e, e, e];\n\nrowsU = function(a) {\n  var i, m, ref2, results;\n  results = [];\n  for (i = m = 0, ref2 = 3 * 3; m < ref2; i = m += 3) {\n    results.push(a.slice(i, i + 3));\n  }\n  return results;\n};\n\ncolumnsU = function(a) {\n  var i, m, results;\n  results = [];\n  for (i = m = 0; m < 3; i = ++m) {\n    results.push([a[i], a[i + 3], a[i + 6]]);\n  }\n  return results;\n};\n\ndiagonalsU = function(a) {\n  return [[a[0], a[4], a[8]], [a[2], a[4], a[6]]];\n};\n\nlinesU = function(a) {\n  return slice.call(rowsU(a)).concat(slice.call(columnsU(a)), slice.call(diagonalsU(a)));\n};\n\nisWinU = function(a, W) {\n  var l, len, m, ref2;\n  ref2 = linesU(a);\n  for (m = 0, len = ref2.length; m < len; m++) {\n    l = ref2[m];\n    if (l.every(function(v) {\n      return isWin(v, W);\n    })) {\n      return true;\n    }\n  }\n  return false;\n};\n\nUltimateTicTacToe = (function() {\n  function UltimateTicTacToe(a1, nextPlayer, lastPlayedPosition, depth) {\n    this.a = a1 != null ? a1 : ultimateEmpty;\n    this.nextPlayer = nextPlayer != null ? nextPlayer : X;\n    this.lastPlayedPosition = lastPlayedPosition != null ? lastPlayedPosition : 4;\n    this.depth = depth != null ? depth : 0;\n  }\n\n  UltimateTicTacToe.prototype.at = function(i, j) {\n    return at(this.a[i], j);\n  };\n\n  UltimateTicTacToe.prototype.rows = function() {\n    return rowsU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.columns = function() {\n    return columnsU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.diagonals = function() {\n    return diagonalsU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.lines = function() {\n    return linesU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.isTerminal = function() {\n    return (this.possibleActions().length === 0) || (this.isWin(X)) || (this.isWin(O));\n  };\n\n  UltimateTicTacToe.prototype.isWin = function(W) {\n    return isWinU(this.a, W);\n  };\n\n  UltimateTicTacToe.prototype.winOn = function(i) {\n    return winOn(this.a[i]);\n  };\n\n  UltimateTicTacToe.prototype.nextAgent = function() {\n    if (this.nextPlayer === X) {\n      return MAX;\n    } else {\n      return MIN;\n    }\n  };\n\n  UltimateTicTacToe.prototype.opponent = function(who) {\n    if (who == null) {\n      who = this.nextPlayer;\n    }\n    if (who === X) {\n      return O;\n    } else {\n      return X;\n    }\n  };\n\n  UltimateTicTacToe.prototype.boardsForNextPlay = function() {\n    var i, len, m, ref2, res, v;\n    v = this.lastPlayedPosition != null ? this.a[this.lastPlayedPosition] : null;\n    if ((v != null) && !(isTerminal(v))) {\n      return [this.lastPlayedPosition];\n    } else {\n      res = [];\n      ref2 = this.a;\n      for (i = m = 0, len = ref2.length; m < len; i = ++m) {\n        v = ref2[i];\n        if (!isTerminal(v)) {\n          res.push(i);\n        }\n      }\n      return res;\n    }\n  };\n\n  UltimateTicTacToe.prototype.openPositions = function() {\n    var i, j, js, len, m, n, ref2, res, v;\n    res = [];\n    ref2 = this.boardsForNextPlay();\n    for (m = 0, len = ref2.length; m < len; m++) {\n      i = ref2[m];\n      v = this.a[i];\n      js = [];\n      for (j = n = 0; n < 18; j = n += 2) {\n        if ((0x3 << j & v) === 0) {\n          js.push(j / 2);\n        }\n      }\n      res.push([i, js]);\n    }\n    return res;\n  };\n\n  UltimateTicTacToe.prototype.action = function(ij) {\n    return ij;\n  };\n\n  UltimateTicTacToe.prototype.possibleActions = function() {\n    var i, j, js, len, len1, m, n, ref2, ref3, res;\n    if (this.actions != null) {\n      return this.actions;\n    }\n    res = [];\n    ref2 = this.openPositions();\n    for (m = 0, len = ref2.length; m < len; m++) {\n      ref3 = ref2[m], i = ref3[0], js = ref3[1];\n      for (n = 0, len1 = js.length; n < len1; n++) {\n        j = js[n];\n        res.push([i, j]);\n      }\n    }\n    return this.actions = res;\n  };\n\n  UltimateTicTacToe.prototype.play = function(arg) {\n    var a, i, j;\n    i = arg[0], j = arg[1];\n    a = this.a.slice();\n    a[i] = this.nextPlayer << (j * 2) | a[i];\n    return new this.constructor(a, this.opponent(), j, this.depth + 1);\n  };\n\n  UltimateTicTacToe.prototype.positionForAction = function(action) {\n    return action;\n  };\n\n  UltimateTicTacToe.prototype.utility = function() {\n    var i, j, k, l, len, len1, m, n, ref2, ref3, score, v;\n    score = 0;\n    ref2 = linesU(this.a);\n    for (m = 0, len = ref2.length; m < len; m++) {\n      l = ref2[m];\n      ref3 = [0, 0, 0], i = ref3[0], j = ref3[1], k = ref3[2];\n      for (n = 0, len1 = l.length; n < len1; n++) {\n        v = l[n];\n        if (isWin(v, X)) {\n          ++i;\n        } else if (isWin(v, O)) {\n          ++j;\n        }\n        k += evaluate(v);\n      }\n      if (i === 0 || j === 0) {\n        score += Math.pow(1000, i) - Math.pow(1000, j);\n      }\n      score += k;\n    }\n    return score;\n  };\n\n  UltimateTicTacToe.prototype.toString = function() {\n    var bri, m, n, ri, s, strRows, v, vs;\n    s = '';\n    for (bri = m = 0; m <= 2; bri = ++m) {\n      vs = this.rows()[bri];\n      for (ri = n = 0; n <= 2; ri = ++n) {\n        strRows = (function() {\n          var len, o, results;\n          results = [];\n          for (o = 0, len = vs.length; o < len; o++) {\n            v = vs[o];\n            results.push(\"|\" + (((function() {\n              var len1, p, ref2, results1;\n              ref2 = (rows(v))[ri];\n              results1 = [];\n              for (p = 0, len1 = ref2.length; p < len1; p++) {\n                e = ref2[p];\n                results1.push(decode(e));\n              }\n              return results1;\n            })()).join('|')) + \"|\");\n          }\n          return results;\n        })();\n        s += strRows.join(' ║ ');\n        if (bri < 2 || ri < 2) {\n          s += '\\n';\n        }\n      }\n      if (bri < 2) {\n        s += '════════╬═════════╬════════\\n';\n      }\n    }\n    return s;\n  };\n\n  return UltimateTicTacToe;\n\n})();\n\nmodule.exports = {\n  _: _,\n  X: X,\n  O: O,\n  bin: bin,\n  UltimateTicTacToe: UltimateTicTacToe\n};\n","var MAX, MIN, MinimaxAgent, ref;\n\nref = ['MAX', 'MIN'], MAX = ref[0], MIN = ref[1];\n\nMinimaxAgent = (function() {\n  function MinimaxAgent(depth) {\n    this.depth = depth != null ? depth : Infinity;\n    this.rootAgent = MAX;\n  }\n\n  MinimaxAgent.prototype.nextAction = function(state) {\n    var _, bestAction, ref1;\n    this.rootAgent = state.nextAgent();\n    ref1 = this.minimax(state), _ = ref1[0], bestAction = ref1[1];\n    return bestAction;\n  };\n\n  MinimaxAgent.prototype.minimax = function(state, α, β, ply) {\n    var isTerminal;\n    if (α == null) {\n      α = -Infinity;\n    }\n    if (β == null) {\n      β = +Infinity;\n    }\n    if (ply == null) {\n      ply = 0;\n    }\n    isTerminal = state.isTerminal();\n    if (!isTerminal && state.nextAgent() === this.rootAgent) {\n      ++ply;\n    }\n    if (ply > this.depth || isTerminal) {\n      return [state.utility(), null];\n    } else if (state.nextAgent() === MAX) {\n      return this.maxi(state, α, β, ply);\n    } else {\n      return this.mini(state, α, β, ply);\n    }\n  };\n\n  MinimaxAgent.prototype.maxi = function(state, α, β, ply) {\n    var _, a, action, i, len, nextValue, ref1, ref2, ref3, ref4, successor, v;\n    ref1 = [-Infinity, null], v = ref1[0], a = ref1[1];\n    ref2 = state.possibleActions();\n    for (i = 0, len = ref2.length; i < len; i++) {\n      action = ref2[i];\n      successor = state.play(action);\n      ref3 = this.minimax(successor, α, β, ply), nextValue = ref3[0], _ = ref3[1];\n      if (nextValue > v) {\n        ref4 = [nextValue, action], v = ref4[0], a = ref4[1];\n      }\n      if (v >= β) {\n        return [v, a];\n      }\n      α = Math.max(α, v);\n    }\n    return [v, a];\n  };\n\n  MinimaxAgent.prototype.mini = function(state, α, β, ply) {\n    var _, a, action, i, len, nextValue, ref1, ref2, ref3, ref4, successor, v;\n    ref1 = [+Infinity, null], v = ref1[0], a = ref1[1];\n    ref2 = state.possibleActions();\n    for (i = 0, len = ref2.length; i < len; i++) {\n      action = ref2[i];\n      successor = state.play(action);\n      ref3 = this.minimax(successor, α, β, ply), nextValue = ref3[0], _ = ref3[1];\n      if (nextValue < v) {\n        ref4 = [nextValue, action], v = ref4[0], a = ref4[1];\n      }\n      if (v <= α) {\n        return [v, a];\n      }\n      β = Math.min(β, v);\n    }\n    return [v, a];\n  };\n\n  return MinimaxAgent;\n\n})();\n\nmodule.exports = {\n  MAX: MAX,\n  MIN: MIN,\n  MinimaxAgent: MinimaxAgent\n};\n"],"sourceRoot":"/source/"}