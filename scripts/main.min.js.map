{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","app/scripts/index.coffee","main.min.js","node_modules/aye-aye/lib/games/bin-tic-tac-toe.js","node_modules/aye-aye/lib/games/ultimate-tic-tac-toe.js","node_modules/aye-aye/lib/minimax.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","$","O","UltimateTicTacToe","X","decode","ref","jQuery","prototype","state","this","nextPlayer","lastPlayedPosition","depth","$spinner","checkGameOver","computerPlayer","createPlayerO","createPlayerX","game","hideSpinner","humanPlayer","markWins","next","playable","playerO","playerX","setup","showSpinner","spinnerThresholdMs","spinnerTimeout","unplayable","player","play","className","j","k","len","ref1","ref2","possibleActions","addClass","removeClass","off","results","wonClass","push","results1","winOn","at","isTerminal","end","text","isWin","on","modal","worker","Worker","postMessage","command","onmessage","data","action","toLowerCase","highlight","gameState","terminate","int","parseId","parseInt","match","playableClassName","tile","get","id","setTimeout","css","clearTimeout","Spinner","lines","radius","spin","fn","each","el","width","outerWidth","height","outerHeight","position","left","offset","top","background-color","opacity","z-index","appendTo","fadeOut","queue","remove","aye-aye/lib/games/bin-tic-tac-toe","aye-aye/lib/games/ultimate-tic-tac-toe",2,"BinTicTacToe","MAX","MIN","_","allPlays","bin","changedOn","columns","diagonals","discountedUtility","empty","evaluate","evaluateCache","isFull","masks","openPositions","opponent","positions","rows","utility","γ","slice","W","res","v","concat","m","ms","w","v1","v2","Math","pow","len1","ref3","score","x","value1","depth1","value","create","args","arguments","func","ctor","child","result","apply","Object","nextAgent","positionForAction","constructor","toString","join","../minimax",3,"columnsU","diagonalsU","isWinU","linesU","rowsU","ultimateEmpty","every","a1","who","boardsForNextPlay","js","ij","actions","arg","bri","ri","strRows","vs","p","./bin-tic-tac-toe",4,"MinimaxAgent","Infinity","rootAgent","nextAction","bestAction","minimax","α","β","ply","maxi","mini","nextValue","ref4","successor","max","min"],"mappings":"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","file":"main.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","$ = jQuery\n\n{X, O, decode} = require 'aye-aye/lib/games/bin-tic-tac-toe'\n{UltimateTicTacToe} = require 'aye-aye/lib/games/ultimate-tic-tac-toe'\n\nUltimateTicTacToe::state = ->\n  {@a, @nextPlayer, @lastPlayedPosition, @depth}\n\n$ ->\n\n  game = null\n  playerX = null\n  playerO = null\n\n  createPlayerX = -> humanPlayer()\n  createPlayerO = -> computerPlayer()\n\n  next = ->\n    player = if game.nextPlayer is X then playerX else playerO\n    player.play()\n\n  playable = ->\n    className =\n      if game.nextPlayer is X then 'x-playable-tile' else 'o-playable-tile'\n    for [i,j] in game.possibleActions()\n      $ \"##{i}\\\\,#{j}\"\n        .addClass className\n    className\n\n  unplayable = ->\n    $ '.tile'\n      .removeClass 'x-playable-tile'\n      .removeClass 'o-playable-tile'\n      .removeClass 'human-playable-tile'\n      .off 'click'\n\n  markWins = ->\n    for i in [0...9]\n      for j in game.winOn i\n        wonClass = if (game.at i, j) is X then 'x-won-tile' else 'o-won-tile'\n        $ \"##{i}\\\\,#{j}\"\n          .addClass wonClass\n\n  checkGameOver = ->\n    return no unless game.isTerminal()\n    playerX.end?()\n    playerO.end?()\n    $ '#game-over-text'\n      .text switch\n        when game.isWin(X) then 'X Wins!'\n        when game.isWin(O) then 'O Wins!'\n        else 'Draw!'\n    $ '#game-over'\n      .off 'hidden.bs.modal'\n      .on 'hidden.bs.modal', setup\n      .modal 'show'\n    yes\n\n  computerPlayer = (depth = 3) ->\n    worker = new Worker 'scripts/minimax-worker.min.js'\n    worker.postMessage command: 'setup', depth: depth\n    worker.onmessage = (e) ->\n      hideSpinner()\n      [i, j] = e.data.action\n      $ \"##{i}\\\\,#{j}\"\n        .text (decode game.nextPlayer).toLowerCase()\n        .highlight()\n      game = game.play [i, j]\n      next()\n    play: ->\n      unplayable()\n      markWins()\n      return if checkGameOver()\n      playable()\n      showSpinner()\n      worker.postMessage command: 'play', gameState: game.state()\n    end: ->\n      worker.terminate()\n\n  humanPlayer = ->\n    int = (s) -> parseInt s, 10\n    parseId = (text) ->\n      match = text.match /(\\d),(\\d)/\n      [(int match[1]), (int match[2])]\n    play: ->\n      unplayable()\n      markWins()\n      return if checkGameOver()\n      playableClassName = playable()\n      $ \".#{playableClassName}\"\n        .addClass 'human-playable-tile'\n        .on 'click', ->\n          tile = ($ this)\n          tile.text (decode game.nextPlayer).toLowerCase()\n          game = game.play parseId tile.get(0).id\n          next()\n\n  setup = ->\n    game = new UltimateTicTacToe\n    playerX = createPlayerX()\n    playerO = createPlayerO()\n    $ '.tile'\n      .removeClass 'x-won-tile'\n      .removeClass 'o-won-tile'\n      .text ''\n    next()\n\n  $spinner = $ '#spinner'\n  spinnerTimeout = null\n  spinnerThresholdMs = 100\n  showSpinner = ->\n    unless spinnerTimeout?\n      spinnerTimeout =\n        setTimeout (-> $spinner.css 'visibility', 'visible'), spinnerThresholdMs\n  hideSpinner = ->\n    clearTimeout spinnerTimeout if spinnerTimeout?\n    $spinner.css 'visibility', 'hidden'\n    spinnerTimeout = null\n  hideSpinner()\n  new Spinner(lines: 9, radius: 7, length: 7).spin $spinner.get(0)\n\n  setup()\n\n$.fn.highlight = ->\n  ($ this).each ->\n    el = $ this\n    $ '<div/>'\n      .width el.outerWidth()\n      .height el.outerHeight()\n      .css\n        'position': 'absolute'\n        'left': el.offset().left\n        'top': el.offset().top\n        'background-color': '#ffff77'\n        'opacity': .7\n        'z-index': 10\n      .appendTo 'body'\n      .fadeOut 1000\n      .queue -> ($ this).remove()\n",null,"var BinTicTacToe, MAX, MIN, O, X, _, allPlays, at, bin, changedOn, columns, decode, diagonals, discountedUtility, empty, evaluate, evaluateCache, isFull, isTerminal, isWin, lines, masks, openPositions, opponent, positions, ref, ref1, rows, utility, winOn, γ,\n  slice = [].slice;\n\nref = require('../minimax'), MAX = ref.MAX, MIN = ref.MIN;\n\nref1 = [0x0, 0x1, 0x2], _ = ref1[0], X = ref1[1], O = ref1[2];\n\nopponent = function(W) {\n  return ~W & 0x3;\n};\n\ndecode = function(W) {\n  return {\n    0x0: ' ',\n    0x1: 'X',\n    0x2: 'O'\n  }[W] || (function() {\n    throw new Error(W);\n  })();\n};\n\nempty = 0x0;\n\nbin = function(a) {\n  var e, i, j, len, res;\n  res = 0;\n  for (i = j = 0, len = a.length; j < len; i = ++j) {\n    e = a[i];\n    res |= e << (i * 2);\n  }\n  return res;\n};\n\nat = function(v, i) {\n  return v >> (i * 2) & 0x3;\n};\n\nrows = function(v) {\n  return [[at(v, 0), at(v, 1), at(v, 2)], [at(v, 3), at(v, 4), at(v, 5)], [at(v, 6), at(v, 7), at(v, 8)]];\n};\n\ncolumns = function(v) {\n  return [[at(v, 0), at(v, 3), at(v, 6)], [at(v, 1), at(v, 4), at(v, 7)], [at(v, 2), at(v, 5), at(v, 8)]];\n};\n\ndiagonals = function(v) {\n  return [[at(v, 0), at(v, 4), at(v, 8)], [at(v, 2), at(v, 4), at(v, 6)]];\n};\n\nlines = function(v) {\n  return slice.call(rows(v)).concat(slice.call(columns(v)), slice.call(diagonals(v)));\n};\n\nisFull = function(v) {\n  var i, j;\n  for (i = j = 0; j < 18; i = j += 2) {\n    if ((0x3 << i & v) === 0) {\n      return false;\n    }\n  }\n  return true;\n};\n\nmasks = {\n  0x1: [0x15, 0x540, 0x15000, 0x1041, 0x4104, 0x10410, 0x10101, 0x1110],\n  0x2: [0x2a, 0xa80, 0x2a000, 0x2082, 0x8208, 0x20820, 0x20202, 0x2220]\n};\n\npositions = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\nisWin = function(v, W) {\n  var j, len, m, ms;\n  ms = masks[W] || (function() {\n    throw new Error(W);\n  })();\n  for (j = 0, len = ms.length; j < len; j++) {\n    m = ms[j];\n    if ((m & v) === m) {\n      return true;\n    }\n  }\n  return false;\n};\n\nwinOn = function(v) {\n  var w;\n  w = function(W) {\n    var i, j, len, m, ms;\n    ms = masks[W];\n    for (i = j = 0, len = ms.length; j < len; i = ++j) {\n      m = ms[i];\n      if ((m & v) === m) {\n        return positions[i];\n      }\n    }\n    return null;\n  };\n  return (w(X)) || (w(O)) || [];\n};\n\nisTerminal = function(v) {\n  return (isFull(v)) || (isWin(v, X)) || (isWin(v, O));\n};\n\nopenPositions = function(v) {\n  var i, j, results;\n  results = [];\n  for (i = j = 0; j < 9; i = ++j) {\n    if ((0x3 << (i * 2) & v) === 0) {\n      results.push(i);\n    }\n  }\n  return results;\n};\n\nallPlays = function(v, W) {\n  var i, j, res;\n  res = [];\n  for (i = j = 0; j < 18; i = j += 2) {\n    if ((0x3 << i & v) === 0) {\n      res.push(W << i | v);\n    }\n  }\n  return res;\n};\n\nchangedOn = function(v1, v2) {\n  var i, j;\n  for (i = j = 0; j < 18; i = ++j) {\n    if ((0x3 << (i * 2) & v1) !== (0x3 << (i * 2) & v2)) {\n      return i;\n    }\n  }\n  return null;\n};\n\nγ = 0.1;\n\ndiscountedUtility = function(v, depth) {\n  if (depth == null) {\n    depth = 0;\n  }\n  return Math.pow(γ, depth) * utility(v);\n};\n\nutility = function(v) {\n  if (isWin(v, X)) {\n    return 2000;\n  } else if (isWin(v, O)) {\n    return -2000;\n  } else if (isFull(v)) {\n    return 0;\n  } else {\n    return evaluate(v);\n  }\n};\n\nevaluateCache = {};\n\nevaluate = function(v) {\n  var j, k, l, len, len1, o, ref2, ref3, score, w, x;\n  if (evaluateCache[v] != null) {\n    return evaluateCache[v];\n  }\n  score = 0;\n  ref2 = lines(v);\n  for (j = 0, len = ref2.length; j < len; j++) {\n    l = ref2[j];\n    ref3 = [0, 0], x = ref3[0], o = ref3[1];\n    for (k = 0, len1 = l.length; k < len1; k++) {\n      w = l[k];\n      if (w === X) {\n        ++x;\n      }\n      if (w === O) {\n        ++o;\n      }\n    }\n    if (x === 0 || o === 0) {\n      score += Math.pow(10, x) - Math.pow(10, o);\n    }\n  }\n  return evaluateCache[v] = score;\n};\n\nBinTicTacToe = (function() {\n  BinTicTacToe.create = function() {\n    var a, args;\n    a = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    if (a == null) {\n      a = [_, _, _, _, _, _, _, _, _];\n    }\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(BinTicTacToe, [bin(a)].concat(slice.call(args)), function(){});\n  };\n\n  function BinTicTacToe(value1, nextPlayer, depth1) {\n    this.value = value1 != null ? value1 : empty;\n    this.nextPlayer = nextPlayer != null ? nextPlayer : X;\n    this.depth = depth1 != null ? depth1 : 0;\n  }\n\n  BinTicTacToe.prototype.at = function(i) {\n    return at(this.value, i);\n  };\n\n  BinTicTacToe.prototype.rows = function() {\n    return rows(this.value);\n  };\n\n  BinTicTacToe.prototype.columns = function() {\n    return columns(this.value);\n  };\n\n  BinTicTacToe.prototype.diagonals = function() {\n    return diagonals(this.value);\n  };\n\n  BinTicTacToe.prototype.lines = function() {\n    return lines(this.value);\n  };\n\n  BinTicTacToe.prototype.isFull = function() {\n    return isFull(this.value);\n  };\n\n  BinTicTacToe.prototype.isWin = function(W) {\n    return isWin(this.value, W);\n  };\n\n  BinTicTacToe.prototype.winOn = function() {\n    return winOn(this.value);\n  };\n\n  BinTicTacToe.prototype.isTerminal = function() {\n    return isTerminal(this.value);\n  };\n\n  BinTicTacToe.prototype.nextAgent = function() {\n    if (this.nextPlayer === X) {\n      return MAX;\n    } else {\n      return MIN;\n    }\n  };\n\n  BinTicTacToe.prototype.openPositions = function() {\n    return openPositions(this.value);\n  };\n\n  BinTicTacToe.prototype.possibleActions = function() {\n    return allPlays(this.value, this.nextPlayer);\n  };\n\n  BinTicTacToe.prototype.action = function(i) {\n    return this.nextPlayer << (i * 2) | this.value;\n  };\n\n  BinTicTacToe.prototype.positionForAction = function(action) {\n    return changedOn(this.value, action);\n  };\n\n  BinTicTacToe.prototype.play = function(value) {\n    return new this.constructor(value, this.opponent(), this.depth + 1);\n  };\n\n  BinTicTacToe.prototype.utility = function() {\n    return utility(this.value);\n  };\n\n  BinTicTacToe.prototype.opponent = function(W) {\n    if (W == null) {\n      W = this.nextPlayer;\n    }\n    return opponent(W);\n  };\n\n  BinTicTacToe.prototype.toString = function() {\n    var e, r;\n    return ((function() {\n      var j, len, ref2, results;\n      ref2 = this.rows();\n      results = [];\n      for (j = 0, len = ref2.length; j < len; j++) {\n        r = ref2[j];\n        results.push(\"|\" + (((function() {\n          var k, len1, results1;\n          results1 = [];\n          for (k = 0, len1 = r.length; k < len1; k++) {\n            e = r[k];\n            results1.push(decode(e));\n          }\n          return results1;\n        })()).join('|')) + \"|\");\n      }\n      return results;\n    }).call(this)).join(\"\\n\");\n  };\n\n  return BinTicTacToe;\n\n})();\n\nmodule.exports = {\n  _: _,\n  X: X,\n  O: O,\n  opponent: opponent,\n  decode: decode,\n  empty: empty,\n  bin: bin,\n  at: at,\n  rows: rows,\n  columns: columns,\n  diagonals: diagonals,\n  lines: lines,\n  isFull: isFull,\n  isWin: isWin,\n  isTerminal: isTerminal,\n  openPositions: openPositions,\n  allPlays: allPlays,\n  changedOn: changedOn,\n  winOn: winOn,\n  discountedUtility: discountedUtility,\n  utility: utility,\n  evaluate: evaluate,\n  BinTicTacToe: BinTicTacToe\n};\n","var BinTicTacToe, MAX, MIN, O, UltimateTicTacToe, X, _, at, bin, columns, columnsU, decode, diagonals, diagonalsU, e, empty, evaluate, isTerminal, isWin, isWinU, lines, linesU, ref, ref1, rows, rowsU, ultimateEmpty, winOn,\n  slice = [].slice;\n\nref = require('../minimax'), MAX = ref.MAX, MIN = ref.MIN;\n\nref1 = require('./bin-tic-tac-toe'), _ = ref1._, X = ref1.X, O = ref1.O, decode = ref1.decode, empty = ref1.empty, bin = ref1.bin, at = ref1.at, rows = ref1.rows, columns = ref1.columns, diagonals = ref1.diagonals, lines = ref1.lines, isWin = ref1.isWin, winOn = ref1.winOn, isTerminal = ref1.isTerminal, evaluate = ref1.evaluate, BinTicTacToe = ref1.BinTicTacToe;\n\ne = empty;\n\nultimateEmpty = [e, e, e, e, e, e, e, e, e];\n\nrowsU = function(a) {\n  var i, m, ref2, results;\n  results = [];\n  for (i = m = 0, ref2 = 3 * 3; m < ref2; i = m += 3) {\n    results.push(a.slice(i, i + 3));\n  }\n  return results;\n};\n\ncolumnsU = function(a) {\n  var i, m, results;\n  results = [];\n  for (i = m = 0; m < 3; i = ++m) {\n    results.push([a[i], a[i + 3], a[i + 6]]);\n  }\n  return results;\n};\n\ndiagonalsU = function(a) {\n  return [[a[0], a[4], a[8]], [a[2], a[4], a[6]]];\n};\n\nlinesU = function(a) {\n  return slice.call(rowsU(a)).concat(slice.call(columnsU(a)), slice.call(diagonalsU(a)));\n};\n\nisWinU = function(a, W) {\n  var l, len, m, ref2;\n  ref2 = linesU(a);\n  for (m = 0, len = ref2.length; m < len; m++) {\n    l = ref2[m];\n    if (l.every(function(v) {\n      return isWin(v, W);\n    })) {\n      return true;\n    }\n  }\n  return false;\n};\n\nUltimateTicTacToe = (function() {\n  function UltimateTicTacToe(a1, nextPlayer, lastPlayedPosition, depth) {\n    this.a = a1 != null ? a1 : ultimateEmpty;\n    this.nextPlayer = nextPlayer != null ? nextPlayer : X;\n    this.lastPlayedPosition = lastPlayedPosition != null ? lastPlayedPosition : 4;\n    this.depth = depth != null ? depth : 0;\n  }\n\n  UltimateTicTacToe.prototype.at = function(i, j) {\n    return at(this.a[i], j);\n  };\n\n  UltimateTicTacToe.prototype.rows = function() {\n    return rowsU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.columns = function() {\n    return columnsU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.diagonals = function() {\n    return diagonalsU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.lines = function() {\n    return linesU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.isTerminal = function() {\n    return (this.possibleActions().length === 0) || (this.isWin(X)) || (this.isWin(O));\n  };\n\n  UltimateTicTacToe.prototype.isWin = function(W) {\n    return isWinU(this.a, W);\n  };\n\n  UltimateTicTacToe.prototype.winOn = function(i) {\n    return winOn(this.a[i]);\n  };\n\n  UltimateTicTacToe.prototype.nextAgent = function() {\n    if (this.nextPlayer === X) {\n      return MAX;\n    } else {\n      return MIN;\n    }\n  };\n\n  UltimateTicTacToe.prototype.opponent = function(who) {\n    if (who == null) {\n      who = this.nextPlayer;\n    }\n    if (who === X) {\n      return O;\n    } else {\n      return X;\n    }\n  };\n\n  UltimateTicTacToe.prototype.boardsForNextPlay = function() {\n    var i, len, m, ref2, res, v;\n    v = this.lastPlayedPosition != null ? this.a[this.lastPlayedPosition] : null;\n    if ((v != null) && !(isTerminal(v))) {\n      return [this.lastPlayedPosition];\n    } else {\n      res = [];\n      ref2 = this.a;\n      for (i = m = 0, len = ref2.length; m < len; i = ++m) {\n        v = ref2[i];\n        if (!isTerminal(v)) {\n          res.push(i);\n        }\n      }\n      return res;\n    }\n  };\n\n  UltimateTicTacToe.prototype.openPositions = function() {\n    var i, j, js, len, m, n, ref2, res, v;\n    res = [];\n    ref2 = this.boardsForNextPlay();\n    for (m = 0, len = ref2.length; m < len; m++) {\n      i = ref2[m];\n      v = this.a[i];\n      js = [];\n      for (j = n = 0; n < 18; j = n += 2) {\n        if ((0x3 << j & v) === 0) {\n          js.push(j / 2);\n        }\n      }\n      res.push([i, js]);\n    }\n    return res;\n  };\n\n  UltimateTicTacToe.prototype.action = function(ij) {\n    return ij;\n  };\n\n  UltimateTicTacToe.prototype.possibleActions = function() {\n    var i, j, js, len, len1, m, n, ref2, ref3, res;\n    if (this.actions != null) {\n      return this.actions;\n    }\n    res = [];\n    ref2 = this.openPositions();\n    for (m = 0, len = ref2.length; m < len; m++) {\n      ref3 = ref2[m], i = ref3[0], js = ref3[1];\n      for (n = 0, len1 = js.length; n < len1; n++) {\n        j = js[n];\n        res.push([i, j]);\n      }\n    }\n    return this.actions = res;\n  };\n\n  UltimateTicTacToe.prototype.play = function(arg) {\n    var a, i, j;\n    i = arg[0], j = arg[1];\n    a = this.a.slice();\n    a[i] = this.nextPlayer << (j * 2) | a[i];\n    return new this.constructor(a, this.opponent(), j, this.depth + 1);\n  };\n\n  UltimateTicTacToe.prototype.positionForAction = function(action) {\n    return action;\n  };\n\n  UltimateTicTacToe.prototype.utility = function() {\n    var i, j, k, l, len, len1, m, n, ref2, ref3, score, v;\n    score = 0;\n    ref2 = linesU(this.a);\n    for (m = 0, len = ref2.length; m < len; m++) {\n      l = ref2[m];\n      ref3 = [0, 0, 0], i = ref3[0], j = ref3[1], k = ref3[2];\n      for (n = 0, len1 = l.length; n < len1; n++) {\n        v = l[n];\n        if (isWin(v, X)) {\n          ++i;\n        } else if (isWin(v, O)) {\n          ++j;\n        }\n        k += evaluate(v);\n      }\n      if (i === 0 || j === 0) {\n        score += Math.pow(1000, i) - Math.pow(1000, j);\n      }\n      score += k;\n    }\n    return score;\n  };\n\n  UltimateTicTacToe.prototype.toString = function() {\n    var bri, m, n, ri, s, strRows, v, vs;\n    s = '';\n    for (bri = m = 0; m <= 2; bri = ++m) {\n      vs = this.rows()[bri];\n      for (ri = n = 0; n <= 2; ri = ++n) {\n        strRows = (function() {\n          var len, o, results;\n          results = [];\n          for (o = 0, len = vs.length; o < len; o++) {\n            v = vs[o];\n            results.push(\"|\" + (((function() {\n              var len1, p, ref2, results1;\n              ref2 = (rows(v))[ri];\n              results1 = [];\n              for (p = 0, len1 = ref2.length; p < len1; p++) {\n                e = ref2[p];\n                results1.push(decode(e));\n              }\n              return results1;\n            })()).join('|')) + \"|\");\n          }\n          return results;\n        })();\n        s += strRows.join(' ║ ');\n        if (bri < 2 || ri < 2) {\n          s += '\\n';\n        }\n      }\n      if (bri < 2) {\n        s += '════════╬═════════╬════════\\n';\n      }\n    }\n    return s;\n  };\n\n  return UltimateTicTacToe;\n\n})();\n\nmodule.exports = {\n  _: _,\n  X: X,\n  O: O,\n  bin: bin,\n  UltimateTicTacToe: UltimateTicTacToe\n};\n","var MAX, MIN, MinimaxAgent, ref;\n\nref = ['MAX', 'MIN'], MAX = ref[0], MIN = ref[1];\n\nMinimaxAgent = (function() {\n  function MinimaxAgent(depth) {\n    this.depth = depth != null ? depth : Infinity;\n    this.rootAgent = MAX;\n  }\n\n  MinimaxAgent.prototype.nextAction = function(state) {\n    var _, bestAction, ref1;\n    this.rootAgent = state.nextAgent();\n    ref1 = this.minimax(state), _ = ref1[0], bestAction = ref1[1];\n    return bestAction;\n  };\n\n  MinimaxAgent.prototype.minimax = function(state, α, β, ply) {\n    var isTerminal;\n    if (α == null) {\n      α = -Infinity;\n    }\n    if (β == null) {\n      β = +Infinity;\n    }\n    if (ply == null) {\n      ply = 0;\n    }\n    isTerminal = state.isTerminal();\n    if (!isTerminal && state.nextAgent() === this.rootAgent) {\n      ++ply;\n    }\n    if (ply > this.depth || isTerminal) {\n      return [state.utility(), null];\n    } else if (state.nextAgent() === MAX) {\n      return this.maxi(state, α, β, ply);\n    } else {\n      return this.mini(state, α, β, ply);\n    }\n  };\n\n  MinimaxAgent.prototype.maxi = function(state, α, β, ply) {\n    var _, a, action, i, len, nextValue, ref1, ref2, ref3, ref4, successor, v;\n    ref1 = [-Infinity, null], v = ref1[0], a = ref1[1];\n    ref2 = state.possibleActions();\n    for (i = 0, len = ref2.length; i < len; i++) {\n      action = ref2[i];\n      successor = state.play(action);\n      ref3 = this.minimax(successor, α, β, ply), nextValue = ref3[0], _ = ref3[1];\n      if (nextValue > v) {\n        ref4 = [nextValue, action], v = ref4[0], a = ref4[1];\n      }\n      if (v >= β) {\n        return [v, a];\n      }\n      α = Math.max(α, v);\n    }\n    return [v, a];\n  };\n\n  MinimaxAgent.prototype.mini = function(state, α, β, ply) {\n    var _, a, action, i, len, nextValue, ref1, ref2, ref3, ref4, successor, v;\n    ref1 = [+Infinity, null], v = ref1[0], a = ref1[1];\n    ref2 = state.possibleActions();\n    for (i = 0, len = ref2.length; i < len; i++) {\n      action = ref2[i];\n      successor = state.play(action);\n      ref3 = this.minimax(successor, α, β, ply), nextValue = ref3[0], _ = ref3[1];\n      if (nextValue < v) {\n        ref4 = [nextValue, action], v = ref4[0], a = ref4[1];\n      }\n      if (v <= α) {\n        return [v, a];\n      }\n      β = Math.min(β, v);\n    }\n    return [v, a];\n  };\n\n  return MinimaxAgent;\n\n})();\n\nmodule.exports = {\n  MAX: MAX,\n  MIN: MIN,\n  MinimaxAgent: MinimaxAgent\n};\n"],"sourceRoot":"/source/"}