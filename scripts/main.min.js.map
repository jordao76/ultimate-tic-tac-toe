{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","app/scripts/highlight.coffee","main.min.js","app/scripts/index.coffee","app/scripts/spinner.coffee","node_modules/aye-aye/lib/games/bin-tic-tac-toe.js","node_modules/aye-aye/lib/games/ultimate-tic-tac-toe.js","node_modules/aye-aye/lib/minimax.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","$","jQuery","fn","highlight","this","each","el","width","outerWidth","height","outerHeight","css","position","left","offset","top","background-color","opacity","z-index","appendTo","fadeOut","queue","remove",2,"O","UltimateTicTacToe","X","decode","hideSpinner","ref","ref1","showSpinner","prototype","state","nextPlayer","lastPlayedPosition","depth","checkGameOver","computerPlayer","createPlayerO","createPlayerX","game","humanPlayer","markWins","messagingPlayer","next","playable","playerO","playerText","playerX","setup","teardown","unplayable","player","play","className","j","k","len","ref2","ref3","possibleActions","addClass","removeClass","off","results","wonBy","wonClass","winOn","at","push","isTerminal","text","isWin","toLowerCase","bus","done","open","onmessage","data","action","postMessage","command","args","end","close","toString","worker","Worker","m","terminate","int","parseId","parseInt","match","playableClassName","on","$tile","get","id","./highlight","./spinner","aye-aye/lib/games/bin-tic-tac-toe","aye-aye/lib/games/ultimate-tic-tac-toe",3,"spinner","spinnerThresholdMs","spinnerTimeout","Spinner","lines","radius","target","setTimeout","spin","clearTimeout","stop",4,"BinTicTacToe","MAX","MIN","_","allPlays","bin","changedOn","columns","diagonals","discountedUtility","empty","evaluate","evaluateCache","isFull","masks","openPositions","opponent","positions","rows","utility","γ","slice","W","res","v","concat","ms","w","v1","v2","Math","pow","len1","score","x","value1","depth1","value","create","arguments","func","ctor","child","result","apply","Object","nextAgent","positionForAction","constructor","results1","join","../minimax",5,"columnsU","diagonalsU","isWinU","linesU","rowsU","ultimateEmpty","every","a1","who","boardsForNextPlay","js","ij","actions","arg","bri","ri","strRows","vs","p","./bin-tic-tac-toe",6,"MinimaxAgent","Infinity","rootAgent","nextAction","bestAction","minimax","α","β","ply","maxi","mini","nextValue","ref4","successor","max","min"],"mappings":"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","file":"main.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","$ = jQuery\r\n\r\n$.fn.highlight = ->\r\n  ($ this).each ->\r\n    el = $ this\r\n    $ '<div/>'\r\n      .width el.outerWidth()\r\n      .height el.outerHeight()\r\n      .css\r\n        'position': 'absolute'\r\n        'left': el.offset().left\r\n        'top': el.offset().top\r\n        'background-color': '#ffff77'\r\n        'opacity': .7\r\n        'z-index': 10\r\n      .appendTo 'body'\r\n      .fadeOut 1000\r\n      .queue -> ($ this).remove()\r\n",null,"$ = jQuery\n\n{X, O, decode} = require 'aye-aye/lib/games/bin-tic-tac-toe'\n{UltimateTicTacToe} = require 'aye-aye/lib/games/ultimate-tic-tac-toe'\n\n{showSpinner, hideSpinner} = require './spinner'\nrequire './highlight'\n\nUltimateTicTacToe::state = ->\n  {@a, @nextPlayer, @lastPlayedPosition, @depth}\n\n$ ->\n\n  game = null\n  playerX = null\n  playerO = null\n  createPlayerX = -> humanPlayer()\n  createPlayerO = -> computerPlayer()\n\n  # player :: {\n  #   setup : (done: None -> None) -> None\n  #   play : None -> None\n  #   end? : None -> None\n  #   toString : None -> Str\n  # }\n\n  next = ->\n    player = if game.nextPlayer is X then playerX else playerO\n    player.play()\n\n  playable = ->\n    className =\n      if game.nextPlayer is X then 'x-playable-tile' else 'o-playable-tile'\n    for [i, j] in game.possibleActions()\n      $ \"##{i}\\\\,#{j}\"\n        .addClass className\n    className\n\n  unplayable = ->\n    $ '.tile'\n      .removeClass 'x-playable-tile'\n      .removeClass 'o-playable-tile'\n      .removeClass 'human-playable-tile'\n      .off 'click'\n\n  markWins = ->\n    for i in [0...9]\n      wonBy = null\n      for j in game.winOn i\n        wonBy = game.at i, j\n        wonClass = if wonBy is X then 'x-won-tile' else 'o-won-tile'\n        ($ \"##{i}\\\\,#{j}\").addClass wonClass\n      if wonBy?\n        wonClass = if wonBy is X then 'x-won-board' else 'o-won-board'\n        ($ '#' + i).addClass wonClass\n\n  checkGameOver = ->\n    return no unless game.isTerminal()\n    $ '#info'\n      .text switch\n        when game.isWin(X) then 'X Wins!'\n        when game.isWin(O) then 'O Wins!'\n        else 'Draw!'\n    yes\n\n  playerText = -> (decode game.nextPlayer).toLowerCase()\n\n  # bus :: {\n  #   open?\n  #   postMessage : (message : Any) -> None\n  #   onmessage\n  #   close?\n  #   toString\n  # }\n  messagingPlayer = (bus) ->\n    setup: (done) ->\n      bus.open?()\n      bus.onmessage (e) ->\n        hideSpinner()\n        [i, j] = e.data.action\n        $ \"##{i}\\\\,#{j}\"\n          .text playerText()\n          .highlight()\n        game = game.play [i, j]\n        next()\n      done()\n    play: ->\n      unplayable()\n      markWins()\n      return if checkGameOver()\n      playable()\n      showSpinner()\n      bus.postMessage command: 'play', args: game.state()\n    end: -> bus.close?()\n    toString: -> bus.toString()\n\n  computerPlayer = (depth = 3) ->\n    worker = new Worker 'scripts/minimax-worker.min.js'\n    bus =\n      open: -> worker.postMessage command: 'setup', args: depth\n      postMessage: (m) -> worker.postMessage m\n      onmessage: (f) -> worker.onmessage = f\n      close: -> worker.terminate()\n      toString: -> 'computer'\n    messagingPlayer bus\n\n  humanPlayer = ->\n    int = (s) -> parseInt s, 10\n    parseId = (text) ->\n      match = text.match /(\\d),(\\d)/\n      [(int match[1]), (int match[2])]\n    setup: (done) -> done()\n    play: ->\n      unplayable()\n      markWins()\n      return if checkGameOver()\n      playableClassName = playable()\n      $ \".#{playableClassName}\"\n        .addClass 'human-playable-tile'\n        .on 'click', ->\n          $tile = $ this\n          $tile.text playerText()\n          game = game.play parseId $tile.get(0).id\n          next()\n    toString: -> \"human\"\n\n  setup = ->\n    teardown()\n    game = new UltimateTicTacToe\n    [playerX, playerO] = [createPlayerX(), createPlayerO()]\n    # swap for next time\n    [createPlayerX, createPlayerO] = [createPlayerO, createPlayerX]\n    $ '#info'\n      .text playerX + \" vs \" + playerO\n    playerX.setup -> playerO.setup -> next()\n\n  teardown = ->\n    playerX?.end?()\n    playerO?.end?()\n    hideSpinner()\n    $ '.tic-tac-toe'\n      .removeClass 'x-won-board'\n      .removeClass 'o-won-board'\n    $ '.tile'\n      .removeClass 'x-won-tile'\n      .removeClass 'o-won-tile'\n      .text ''\n\n  $ '#btn-new-game'\n    .on 'click', setup\n\n  setup()\n","$ = jQuery\r\n\r\nspinner = new Spinner lines: 9, radius: 7, length: 7\r\nspinnerTimeout = null\r\nspinnerThresholdMs = 100\r\nshowSpinner = ->\r\n  unless spinnerTimeout?\r\n    target = ($ '#spinner').get 0\r\n    spinnerTimeout =\r\n      setTimeout (-> spinner.spin target), spinnerThresholdMs\r\nhideSpinner = ->\r\n  clearTimeout spinnerTimeout if spinnerTimeout?\r\n  spinner.stop()\r\n  spinnerTimeout = null\r\n\r\nmodule.exports = {showSpinner, hideSpinner}\r\n","var BinTicTacToe, MAX, MIN, O, X, _, allPlays, at, bin, changedOn, columns, decode, diagonals, discountedUtility, empty, evaluate, evaluateCache, isFull, isTerminal, isWin, lines, masks, openPositions, opponent, positions, ref, ref1, rows, utility, winOn, γ,\n  slice = [].slice;\n\nref = require('../minimax'), MAX = ref.MAX, MIN = ref.MIN;\n\nref1 = [0x0, 0x1, 0x2], _ = ref1[0], X = ref1[1], O = ref1[2];\n\nopponent = function(W) {\n  return ~W & 0x3;\n};\n\ndecode = function(W) {\n  return {\n    0x0: ' ',\n    0x1: 'X',\n    0x2: 'O'\n  }[W] || (function() {\n    throw new Error(W);\n  })();\n};\n\nempty = 0x0;\n\nbin = function(a) {\n  var e, i, j, len, res;\n  res = 0;\n  for (i = j = 0, len = a.length; j < len; i = ++j) {\n    e = a[i];\n    res |= e << (i * 2);\n  }\n  return res;\n};\n\nat = function(v, i) {\n  return v >> (i * 2) & 0x3;\n};\n\nrows = function(v) {\n  return [[at(v, 0), at(v, 1), at(v, 2)], [at(v, 3), at(v, 4), at(v, 5)], [at(v, 6), at(v, 7), at(v, 8)]];\n};\n\ncolumns = function(v) {\n  return [[at(v, 0), at(v, 3), at(v, 6)], [at(v, 1), at(v, 4), at(v, 7)], [at(v, 2), at(v, 5), at(v, 8)]];\n};\n\ndiagonals = function(v) {\n  return [[at(v, 0), at(v, 4), at(v, 8)], [at(v, 2), at(v, 4), at(v, 6)]];\n};\n\nlines = function(v) {\n  return slice.call(rows(v)).concat(slice.call(columns(v)), slice.call(diagonals(v)));\n};\n\nisFull = function(v) {\n  var i, j;\n  for (i = j = 0; j < 18; i = j += 2) {\n    if ((0x3 << i & v) === 0) {\n      return false;\n    }\n  }\n  return true;\n};\n\nmasks = {\n  0x1: [0x15, 0x540, 0x15000, 0x1041, 0x4104, 0x10410, 0x10101, 0x1110],\n  0x2: [0x2a, 0xa80, 0x2a000, 0x2082, 0x8208, 0x20820, 0x20202, 0x2220]\n};\n\npositions = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\nisWin = function(v, W) {\n  var j, len, m, ms;\n  ms = masks[W] || (function() {\n    throw new Error(W);\n  })();\n  for (j = 0, len = ms.length; j < len; j++) {\n    m = ms[j];\n    if ((m & v) === m) {\n      return true;\n    }\n  }\n  return false;\n};\n\nwinOn = function(v) {\n  var w;\n  w = function(W) {\n    var i, j, len, m, ms;\n    ms = masks[W];\n    for (i = j = 0, len = ms.length; j < len; i = ++j) {\n      m = ms[i];\n      if ((m & v) === m) {\n        return positions[i];\n      }\n    }\n    return null;\n  };\n  return (w(X)) || (w(O)) || [];\n};\n\nisTerminal = function(v) {\n  return (isFull(v)) || (isWin(v, X)) || (isWin(v, O));\n};\n\nopenPositions = function(v) {\n  var i, j, results;\n  results = [];\n  for (i = j = 0; j < 9; i = ++j) {\n    if ((0x3 << (i * 2) & v) === 0) {\n      results.push(i);\n    }\n  }\n  return results;\n};\n\nallPlays = function(v, W) {\n  var i, j, res;\n  res = [];\n  for (i = j = 0; j < 18; i = j += 2) {\n    if ((0x3 << i & v) === 0) {\n      res.push(W << i | v);\n    }\n  }\n  return res;\n};\n\nchangedOn = function(v1, v2) {\n  var i, j;\n  for (i = j = 0; j < 18; i = ++j) {\n    if ((0x3 << (i * 2) & v1) !== (0x3 << (i * 2) & v2)) {\n      return i;\n    }\n  }\n  return null;\n};\n\nγ = 0.1;\n\ndiscountedUtility = function(v, depth) {\n  if (depth == null) {\n    depth = 0;\n  }\n  return Math.pow(γ, depth) * utility(v);\n};\n\nutility = function(v) {\n  if (isWin(v, X)) {\n    return 2000;\n  } else if (isWin(v, O)) {\n    return -2000;\n  } else if (isFull(v)) {\n    return 0;\n  } else {\n    return evaluate(v);\n  }\n};\n\nevaluateCache = {};\n\nevaluate = function(v) {\n  var j, k, l, len, len1, o, ref2, ref3, score, w, x;\n  if (evaluateCache[v] != null) {\n    return evaluateCache[v];\n  }\n  score = 0;\n  ref2 = lines(v);\n  for (j = 0, len = ref2.length; j < len; j++) {\n    l = ref2[j];\n    ref3 = [0, 0], x = ref3[0], o = ref3[1];\n    for (k = 0, len1 = l.length; k < len1; k++) {\n      w = l[k];\n      if (w === X) {\n        ++x;\n      }\n      if (w === O) {\n        ++o;\n      }\n    }\n    if (x === 0 || o === 0) {\n      score += Math.pow(10, x) - Math.pow(10, o);\n    }\n  }\n  return evaluateCache[v] = score;\n};\n\nBinTicTacToe = (function() {\n  BinTicTacToe.create = function() {\n    var a, args;\n    a = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    if (a == null) {\n      a = [_, _, _, _, _, _, _, _, _];\n    }\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(BinTicTacToe, [bin(a)].concat(slice.call(args)), function(){});\n  };\n\n  function BinTicTacToe(value1, nextPlayer, depth1) {\n    this.value = value1 != null ? value1 : empty;\n    this.nextPlayer = nextPlayer != null ? nextPlayer : X;\n    this.depth = depth1 != null ? depth1 : 0;\n  }\n\n  BinTicTacToe.prototype.at = function(i) {\n    return at(this.value, i);\n  };\n\n  BinTicTacToe.prototype.rows = function() {\n    return rows(this.value);\n  };\n\n  BinTicTacToe.prototype.columns = function() {\n    return columns(this.value);\n  };\n\n  BinTicTacToe.prototype.diagonals = function() {\n    return diagonals(this.value);\n  };\n\n  BinTicTacToe.prototype.lines = function() {\n    return lines(this.value);\n  };\n\n  BinTicTacToe.prototype.isFull = function() {\n    return isFull(this.value);\n  };\n\n  BinTicTacToe.prototype.isWin = function(W) {\n    return isWin(this.value, W);\n  };\n\n  BinTicTacToe.prototype.winOn = function() {\n    return winOn(this.value);\n  };\n\n  BinTicTacToe.prototype.isTerminal = function() {\n    return isTerminal(this.value);\n  };\n\n  BinTicTacToe.prototype.nextAgent = function() {\n    if (this.nextPlayer === X) {\n      return MAX;\n    } else {\n      return MIN;\n    }\n  };\n\n  BinTicTacToe.prototype.openPositions = function() {\n    return openPositions(this.value);\n  };\n\n  BinTicTacToe.prototype.possibleActions = function() {\n    return allPlays(this.value, this.nextPlayer);\n  };\n\n  BinTicTacToe.prototype.action = function(i) {\n    return this.nextPlayer << (i * 2) | this.value;\n  };\n\n  BinTicTacToe.prototype.positionForAction = function(action) {\n    return changedOn(this.value, action);\n  };\n\n  BinTicTacToe.prototype.play = function(value) {\n    return new this.constructor(value, this.opponent(), this.depth + 1);\n  };\n\n  BinTicTacToe.prototype.utility = function() {\n    return utility(this.value);\n  };\n\n  BinTicTacToe.prototype.opponent = function(W) {\n    if (W == null) {\n      W = this.nextPlayer;\n    }\n    return opponent(W);\n  };\n\n  BinTicTacToe.prototype.toString = function() {\n    var e, r;\n    return ((function() {\n      var j, len, ref2, results;\n      ref2 = this.rows();\n      results = [];\n      for (j = 0, len = ref2.length; j < len; j++) {\n        r = ref2[j];\n        results.push(\"|\" + (((function() {\n          var k, len1, results1;\n          results1 = [];\n          for (k = 0, len1 = r.length; k < len1; k++) {\n            e = r[k];\n            results1.push(decode(e));\n          }\n          return results1;\n        })()).join('|')) + \"|\");\n      }\n      return results;\n    }).call(this)).join(\"\\n\");\n  };\n\n  return BinTicTacToe;\n\n})();\n\nmodule.exports = {\n  _: _,\n  X: X,\n  O: O,\n  opponent: opponent,\n  decode: decode,\n  empty: empty,\n  bin: bin,\n  at: at,\n  rows: rows,\n  columns: columns,\n  diagonals: diagonals,\n  lines: lines,\n  isFull: isFull,\n  isWin: isWin,\n  isTerminal: isTerminal,\n  openPositions: openPositions,\n  allPlays: allPlays,\n  changedOn: changedOn,\n  winOn: winOn,\n  discountedUtility: discountedUtility,\n  utility: utility,\n  evaluate: evaluate,\n  BinTicTacToe: BinTicTacToe\n};\n","var BinTicTacToe, MAX, MIN, O, UltimateTicTacToe, X, _, at, bin, columns, columnsU, decode, diagonals, diagonalsU, e, empty, evaluate, isTerminal, isWin, isWinU, lines, linesU, ref, ref1, rows, rowsU, ultimateEmpty, winOn,\n  slice = [].slice;\n\nref = require('../minimax'), MAX = ref.MAX, MIN = ref.MIN;\n\nref1 = require('./bin-tic-tac-toe'), _ = ref1._, X = ref1.X, O = ref1.O, decode = ref1.decode, empty = ref1.empty, bin = ref1.bin, at = ref1.at, rows = ref1.rows, columns = ref1.columns, diagonals = ref1.diagonals, lines = ref1.lines, isWin = ref1.isWin, winOn = ref1.winOn, isTerminal = ref1.isTerminal, evaluate = ref1.evaluate, BinTicTacToe = ref1.BinTicTacToe;\n\ne = empty;\n\nultimateEmpty = [e, e, e, e, e, e, e, e, e];\n\nrowsU = function(a) {\n  var i, m, ref2, results;\n  results = [];\n  for (i = m = 0, ref2 = 3 * 3; m < ref2; i = m += 3) {\n    results.push(a.slice(i, i + 3));\n  }\n  return results;\n};\n\ncolumnsU = function(a) {\n  var i, m, results;\n  results = [];\n  for (i = m = 0; m < 3; i = ++m) {\n    results.push([a[i], a[i + 3], a[i + 6]]);\n  }\n  return results;\n};\n\ndiagonalsU = function(a) {\n  return [[a[0], a[4], a[8]], [a[2], a[4], a[6]]];\n};\n\nlinesU = function(a) {\n  return slice.call(rowsU(a)).concat(slice.call(columnsU(a)), slice.call(diagonalsU(a)));\n};\n\nisWinU = function(a, W) {\n  var l, len, m, ref2;\n  ref2 = linesU(a);\n  for (m = 0, len = ref2.length; m < len; m++) {\n    l = ref2[m];\n    if (l.every(function(v) {\n      return isWin(v, W);\n    })) {\n      return true;\n    }\n  }\n  return false;\n};\n\nUltimateTicTacToe = (function() {\n  function UltimateTicTacToe(a1, nextPlayer, lastPlayedPosition, depth) {\n    this.a = a1 != null ? a1 : ultimateEmpty;\n    this.nextPlayer = nextPlayer != null ? nextPlayer : X;\n    this.lastPlayedPosition = lastPlayedPosition != null ? lastPlayedPosition : 4;\n    this.depth = depth != null ? depth : 0;\n  }\n\n  UltimateTicTacToe.prototype.at = function(i, j) {\n    return at(this.a[i], j);\n  };\n\n  UltimateTicTacToe.prototype.rows = function() {\n    return rowsU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.columns = function() {\n    return columnsU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.diagonals = function() {\n    return diagonalsU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.lines = function() {\n    return linesU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.isTerminal = function() {\n    return (this.possibleActions().length === 0) || (this.isWin(X)) || (this.isWin(O));\n  };\n\n  UltimateTicTacToe.prototype.isWin = function(W) {\n    return isWinU(this.a, W);\n  };\n\n  UltimateTicTacToe.prototype.winOn = function(i) {\n    return winOn(this.a[i]);\n  };\n\n  UltimateTicTacToe.prototype.nextAgent = function() {\n    if (this.nextPlayer === X) {\n      return MAX;\n    } else {\n      return MIN;\n    }\n  };\n\n  UltimateTicTacToe.prototype.opponent = function(who) {\n    if (who == null) {\n      who = this.nextPlayer;\n    }\n    if (who === X) {\n      return O;\n    } else {\n      return X;\n    }\n  };\n\n  UltimateTicTacToe.prototype.boardsForNextPlay = function() {\n    var i, len, m, ref2, res, v;\n    v = this.lastPlayedPosition != null ? this.a[this.lastPlayedPosition] : null;\n    if ((v != null) && !(isTerminal(v))) {\n      return [this.lastPlayedPosition];\n    } else {\n      res = [];\n      ref2 = this.a;\n      for (i = m = 0, len = ref2.length; m < len; i = ++m) {\n        v = ref2[i];\n        if (!isTerminal(v)) {\n          res.push(i);\n        }\n      }\n      return res;\n    }\n  };\n\n  UltimateTicTacToe.prototype.openPositions = function() {\n    var i, j, js, len, m, n, ref2, res, v;\n    res = [];\n    ref2 = this.boardsForNextPlay();\n    for (m = 0, len = ref2.length; m < len; m++) {\n      i = ref2[m];\n      v = this.a[i];\n      js = [];\n      for (j = n = 0; n < 18; j = n += 2) {\n        if ((0x3 << j & v) === 0) {\n          js.push(j / 2);\n        }\n      }\n      res.push([i, js]);\n    }\n    return res;\n  };\n\n  UltimateTicTacToe.prototype.action = function(ij) {\n    return ij;\n  };\n\n  UltimateTicTacToe.prototype.possibleActions = function() {\n    var i, j, js, len, len1, m, n, ref2, ref3, res;\n    if (this.actions != null) {\n      return this.actions;\n    }\n    res = [];\n    ref2 = this.openPositions();\n    for (m = 0, len = ref2.length; m < len; m++) {\n      ref3 = ref2[m], i = ref3[0], js = ref3[1];\n      for (n = 0, len1 = js.length; n < len1; n++) {\n        j = js[n];\n        res.push([i, j]);\n      }\n    }\n    return this.actions = res;\n  };\n\n  UltimateTicTacToe.prototype.play = function(arg) {\n    var a, i, j;\n    i = arg[0], j = arg[1];\n    a = this.a.slice();\n    a[i] = this.nextPlayer << (j * 2) | a[i];\n    return new this.constructor(a, this.opponent(), j, this.depth + 1);\n  };\n\n  UltimateTicTacToe.prototype.positionForAction = function(action) {\n    return action;\n  };\n\n  UltimateTicTacToe.prototype.utility = function() {\n    var i, j, k, l, len, len1, m, n, ref2, ref3, score, v;\n    score = 0;\n    ref2 = linesU(this.a);\n    for (m = 0, len = ref2.length; m < len; m++) {\n      l = ref2[m];\n      ref3 = [0, 0, 0], i = ref3[0], j = ref3[1], k = ref3[2];\n      for (n = 0, len1 = l.length; n < len1; n++) {\n        v = l[n];\n        if (isWin(v, X)) {\n          ++i;\n        } else if (isWin(v, O)) {\n          ++j;\n        }\n        k += evaluate(v);\n      }\n      if (i === 0 || j === 0) {\n        score += Math.pow(1000, i) - Math.pow(1000, j);\n      }\n      score += k;\n    }\n    return score;\n  };\n\n  UltimateTicTacToe.prototype.toString = function() {\n    var bri, m, n, ri, s, strRows, v, vs;\n    s = '';\n    for (bri = m = 0; m <= 2; bri = ++m) {\n      vs = this.rows()[bri];\n      for (ri = n = 0; n <= 2; ri = ++n) {\n        strRows = (function() {\n          var len, o, results;\n          results = [];\n          for (o = 0, len = vs.length; o < len; o++) {\n            v = vs[o];\n            results.push(\"|\" + (((function() {\n              var len1, p, ref2, results1;\n              ref2 = (rows(v))[ri];\n              results1 = [];\n              for (p = 0, len1 = ref2.length; p < len1; p++) {\n                e = ref2[p];\n                results1.push(decode(e));\n              }\n              return results1;\n            })()).join('|')) + \"|\");\n          }\n          return results;\n        })();\n        s += strRows.join(' ║ ');\n        if (bri < 2 || ri < 2) {\n          s += '\\n';\n        }\n      }\n      if (bri < 2) {\n        s += '════════╬═════════╬════════\\n';\n      }\n    }\n    return s;\n  };\n\n  return UltimateTicTacToe;\n\n})();\n\nmodule.exports = {\n  _: _,\n  X: X,\n  O: O,\n  bin: bin,\n  UltimateTicTacToe: UltimateTicTacToe\n};\n","var MAX, MIN, MinimaxAgent, ref;\n\nref = ['MAX', 'MIN'], MAX = ref[0], MIN = ref[1];\n\nMinimaxAgent = (function() {\n  function MinimaxAgent(depth) {\n    this.depth = depth != null ? depth : Infinity;\n    this.rootAgent = MAX;\n  }\n\n  MinimaxAgent.prototype.nextAction = function(state) {\n    var _, bestAction, ref1;\n    this.rootAgent = state.nextAgent();\n    ref1 = this.minimax(state), _ = ref1[0], bestAction = ref1[1];\n    return bestAction;\n  };\n\n  MinimaxAgent.prototype.minimax = function(state, α, β, ply) {\n    var isTerminal;\n    if (α == null) {\n      α = -Infinity;\n    }\n    if (β == null) {\n      β = +Infinity;\n    }\n    if (ply == null) {\n      ply = 0;\n    }\n    isTerminal = state.isTerminal();\n    if (!isTerminal && state.nextAgent() === this.rootAgent) {\n      ++ply;\n    }\n    if (ply > this.depth || isTerminal) {\n      return [state.utility(), null];\n    } else if (state.nextAgent() === MAX) {\n      return this.maxi(state, α, β, ply);\n    } else {\n      return this.mini(state, α, β, ply);\n    }\n  };\n\n  MinimaxAgent.prototype.maxi = function(state, α, β, ply) {\n    var _, a, action, i, len, nextValue, ref1, ref2, ref3, ref4, successor, v;\n    ref1 = [-Infinity, null], v = ref1[0], a = ref1[1];\n    ref2 = state.possibleActions();\n    for (i = 0, len = ref2.length; i < len; i++) {\n      action = ref2[i];\n      successor = state.play(action);\n      ref3 = this.minimax(successor, α, β, ply), nextValue = ref3[0], _ = ref3[1];\n      if (nextValue > v) {\n        ref4 = [nextValue, action], v = ref4[0], a = ref4[1];\n      }\n      if (v >= β) {\n        return [v, a];\n      }\n      α = Math.max(α, v);\n    }\n    return [v, a];\n  };\n\n  MinimaxAgent.prototype.mini = function(state, α, β, ply) {\n    var _, a, action, i, len, nextValue, ref1, ref2, ref3, ref4, successor, v;\n    ref1 = [+Infinity, null], v = ref1[0], a = ref1[1];\n    ref2 = state.possibleActions();\n    for (i = 0, len = ref2.length; i < len; i++) {\n      action = ref2[i];\n      successor = state.play(action);\n      ref3 = this.minimax(successor, α, β, ply), nextValue = ref3[0], _ = ref3[1];\n      if (nextValue < v) {\n        ref4 = [nextValue, action], v = ref4[0], a = ref4[1];\n      }\n      if (v <= α) {\n        return [v, a];\n      }\n      β = Math.min(β, v);\n    }\n    return [v, a];\n  };\n\n  return MinimaxAgent;\n\n})();\n\nmodule.exports = {\n  MAX: MAX,\n  MIN: MIN,\n  MinimaxAgent: MinimaxAgent\n};\n"],"sourceRoot":"/source/"}