{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","app/scripts/index.coffee","main.min.js","node_modules/aye-aye/lib/games/bin-tic-tac-toe.js","node_modules/aye-aye/lib/games/ultimate-tic-tac-toe.js","node_modules/aye-aye/lib/minimax.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","$","O","UltimateTicTacToe","X","decode","ref","jQuery","prototype","state","this","nextPlayer","lastPlayedPosition","depth","checkGameOver","computerPlayer","createPlayerO","createPlayerX","game","hideSpinner","humanPlayer","markWins","next","playable","playerO","playerText","playerX","setup","showSpinner","spinner","spinnerThresholdMs","spinnerTimeout","unplayable","player","play","className","j","k","len","ref1","ref2","possibleActions","addClass","removeClass","off","results","wonClass","push","results1","winOn","at","isTerminal","text","isWin","toLowerCase","worker","Worker","postMessage","command","onmessage","data","action","highlight","gameState","end","terminate","toString","int","parseId","parseInt","match","playableClassName","on","$tile","get","id","Spinner","lines","radius","target","setTimeout","spin","clearTimeout","stop","fn","each","el","width","outerWidth","height","outerHeight","css","position","left","offset","top","background-color","opacity","z-index","appendTo","fadeOut","queue","remove","aye-aye/lib/games/bin-tic-tac-toe","aye-aye/lib/games/ultimate-tic-tac-toe",2,"BinTicTacToe","MAX","MIN","_","allPlays","bin","changedOn","columns","diagonals","discountedUtility","empty","evaluate","evaluateCache","isFull","masks","openPositions","opponent","positions","rows","utility","γ","slice","W","res","v","concat","m","ms","w","v1","v2","Math","pow","len1","ref3","score","x","value1","depth1","value","create","args","arguments","func","ctor","child","result","apply","Object","nextAgent","positionForAction","constructor","join","../minimax",3,"columnsU","diagonalsU","isWinU","linesU","rowsU","ultimateEmpty","every","a1","who","boardsForNextPlay","js","ij","actions","arg","bri","ri","strRows","vs","p","./bin-tic-tac-toe",4,"MinimaxAgent","Infinity","rootAgent","nextAction","bestAction","minimax","α","β","ply","maxi","mini","nextValue","ref4","successor","max","min"],"mappings":"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","file":"main.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","$ = jQuery\n\n{X, O, decode} = require 'aye-aye/lib/games/bin-tic-tac-toe'\n{UltimateTicTacToe} = require 'aye-aye/lib/games/ultimate-tic-tac-toe'\n\nUltimateTicTacToe::state = ->\n  {@a, @nextPlayer, @lastPlayedPosition, @depth}\n\n$ ->\n\n  game = null\n  playerX = null\n  playerO = null\n\n  createPlayerX = -> humanPlayer()\n  createPlayerO = -> computerPlayer()\n\n  next = ->\n    player = if game.nextPlayer is X then playerX else playerO\n    player.play()\n\n  playable = ->\n    className =\n      if game.nextPlayer is X then 'x-playable-tile' else 'o-playable-tile'\n    for [i, j] in game.possibleActions()\n      $ \"##{i}\\\\,#{j}\"\n        .addClass className\n    className\n\n  unplayable = ->\n    $ '.tile'\n      .removeClass 'x-playable-tile'\n      .removeClass 'o-playable-tile'\n      .removeClass 'human-playable-tile'\n      .off 'click'\n\n  markWins = ->\n    for i in [0...9]\n      for j in game.winOn i\n        wonClass = if (game.at i, j) is X then 'x-won-tile' else 'o-won-tile'\n        $ \"##{i}\\\\,#{j}\"\n          .addClass wonClass\n\n  checkGameOver = ->\n    return no unless game.isTerminal()\n    $ '#info'\n      .text switch\n        when game.isWin(X) then 'X Wins!'\n        when game.isWin(O) then 'O Wins!'\n        else 'Draw!'\n    yes\n\n  playerText = -> (decode game.nextPlayer).toLowerCase()\n\n  computerPlayer = (depth = 3) ->\n    worker = new Worker 'scripts/minimax-worker.min.js'\n    worker.postMessage command: 'setup', depth: depth\n    worker.onmessage = (e) ->\n      hideSpinner()\n      [i, j] = e.data.action\n      $ \"##{i}\\\\,#{j}\"\n        .text playerText()\n        .highlight()\n      game = game.play [i, j]\n      next()\n    play: ->\n      unplayable()\n      markWins()\n      return if checkGameOver()\n      playable()\n      showSpinner()\n      worker.postMessage command: 'play', gameState: game.state()\n    end: ->\n      worker.terminate()\n    toString: -> \"computer\"\n\n  humanPlayer = ->\n    int = (s) -> parseInt s, 10\n    parseId = (text) ->\n      match = text.match /(\\d),(\\d)/\n      [(int match[1]), (int match[2])]\n    play: ->\n      unplayable()\n      markWins()\n      return if checkGameOver()\n      playableClassName = playable()\n      $ \".#{playableClassName}\"\n        .addClass 'human-playable-tile'\n        .on 'click', ->\n          $tile = $ this\n          $tile.text playerText()\n          game = game.play parseId $tile.get(0).id\n          next()\n    toString: -> \"human\"\n\n  setup = ->\n    game = new UltimateTicTacToe\n    playerX?.end?()\n    playerO?.end?()\n    hideSpinner()\n    playerX = createPlayerX()\n    playerO = createPlayerO()\n    $ '#info'\n      .text playerX + \" vs \" + playerO\n    $ '.tile'\n      .removeClass 'x-won-tile'\n      .removeClass 'o-won-tile'\n      .text ''\n    next()\n\n  spinner = new Spinner lines: 9, radius: 7, length: 7\n  spinnerTimeout = null\n  spinnerThresholdMs = 100\n  showSpinner = ->\n    unless spinnerTimeout?\n      target = ($ '#spinner').get 0\n      spinnerTimeout =\n        setTimeout (-> spinner.spin target), spinnerThresholdMs\n  hideSpinner = ->\n    clearTimeout spinnerTimeout if spinnerTimeout?\n    spinner.stop()\n    spinnerTimeout = null\n\n  $ '#btn-new-game'\n    .on 'click', setup\n  setup()\n\n$.fn.highlight = ->\n  ($ this).each ->\n    el = $ this\n    $ '<div/>'\n      .width el.outerWidth()\n      .height el.outerHeight()\n      .css\n        'position': 'absolute'\n        'left': el.offset().left\n        'top': el.offset().top\n        'background-color': '#ffff77'\n        'opacity': .7\n        'z-index': 10\n      .appendTo 'body'\n      .fadeOut 1000\n      .queue -> ($ this).remove()\n",null,"var BinTicTacToe, MAX, MIN, O, X, _, allPlays, at, bin, changedOn, columns, decode, diagonals, discountedUtility, empty, evaluate, evaluateCache, isFull, isTerminal, isWin, lines, masks, openPositions, opponent, positions, ref, ref1, rows, utility, winOn, γ,\n  slice = [].slice;\n\nref = require('../minimax'), MAX = ref.MAX, MIN = ref.MIN;\n\nref1 = [0x0, 0x1, 0x2], _ = ref1[0], X = ref1[1], O = ref1[2];\n\nopponent = function(W) {\n  return ~W & 0x3;\n};\n\ndecode = function(W) {\n  return {\n    0x0: ' ',\n    0x1: 'X',\n    0x2: 'O'\n  }[W] || (function() {\n    throw new Error(W);\n  })();\n};\n\nempty = 0x0;\n\nbin = function(a) {\n  var e, i, j, len, res;\n  res = 0;\n  for (i = j = 0, len = a.length; j < len; i = ++j) {\n    e = a[i];\n    res |= e << (i * 2);\n  }\n  return res;\n};\n\nat = function(v, i) {\n  return v >> (i * 2) & 0x3;\n};\n\nrows = function(v) {\n  return [[at(v, 0), at(v, 1), at(v, 2)], [at(v, 3), at(v, 4), at(v, 5)], [at(v, 6), at(v, 7), at(v, 8)]];\n};\n\ncolumns = function(v) {\n  return [[at(v, 0), at(v, 3), at(v, 6)], [at(v, 1), at(v, 4), at(v, 7)], [at(v, 2), at(v, 5), at(v, 8)]];\n};\n\ndiagonals = function(v) {\n  return [[at(v, 0), at(v, 4), at(v, 8)], [at(v, 2), at(v, 4), at(v, 6)]];\n};\n\nlines = function(v) {\n  return slice.call(rows(v)).concat(slice.call(columns(v)), slice.call(diagonals(v)));\n};\n\nisFull = function(v) {\n  var i, j;\n  for (i = j = 0; j < 18; i = j += 2) {\n    if ((0x3 << i & v) === 0) {\n      return false;\n    }\n  }\n  return true;\n};\n\nmasks = {\n  0x1: [0x15, 0x540, 0x15000, 0x1041, 0x4104, 0x10410, 0x10101, 0x1110],\n  0x2: [0x2a, 0xa80, 0x2a000, 0x2082, 0x8208, 0x20820, 0x20202, 0x2220]\n};\n\npositions = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\nisWin = function(v, W) {\n  var j, len, m, ms;\n  ms = masks[W] || (function() {\n    throw new Error(W);\n  })();\n  for (j = 0, len = ms.length; j < len; j++) {\n    m = ms[j];\n    if ((m & v) === m) {\n      return true;\n    }\n  }\n  return false;\n};\n\nwinOn = function(v) {\n  var w;\n  w = function(W) {\n    var i, j, len, m, ms;\n    ms = masks[W];\n    for (i = j = 0, len = ms.length; j < len; i = ++j) {\n      m = ms[i];\n      if ((m & v) === m) {\n        return positions[i];\n      }\n    }\n    return null;\n  };\n  return (w(X)) || (w(O)) || [];\n};\n\nisTerminal = function(v) {\n  return (isFull(v)) || (isWin(v, X)) || (isWin(v, O));\n};\n\nopenPositions = function(v) {\n  var i, j, results;\n  results = [];\n  for (i = j = 0; j < 9; i = ++j) {\n    if ((0x3 << (i * 2) & v) === 0) {\n      results.push(i);\n    }\n  }\n  return results;\n};\n\nallPlays = function(v, W) {\n  var i, j, res;\n  res = [];\n  for (i = j = 0; j < 18; i = j += 2) {\n    if ((0x3 << i & v) === 0) {\n      res.push(W << i | v);\n    }\n  }\n  return res;\n};\n\nchangedOn = function(v1, v2) {\n  var i, j;\n  for (i = j = 0; j < 18; i = ++j) {\n    if ((0x3 << (i * 2) & v1) !== (0x3 << (i * 2) & v2)) {\n      return i;\n    }\n  }\n  return null;\n};\n\nγ = 0.1;\n\ndiscountedUtility = function(v, depth) {\n  if (depth == null) {\n    depth = 0;\n  }\n  return Math.pow(γ, depth) * utility(v);\n};\n\nutility = function(v) {\n  if (isWin(v, X)) {\n    return 2000;\n  } else if (isWin(v, O)) {\n    return -2000;\n  } else if (isFull(v)) {\n    return 0;\n  } else {\n    return evaluate(v);\n  }\n};\n\nevaluateCache = {};\n\nevaluate = function(v) {\n  var j, k, l, len, len1, o, ref2, ref3, score, w, x;\n  if (evaluateCache[v] != null) {\n    return evaluateCache[v];\n  }\n  score = 0;\n  ref2 = lines(v);\n  for (j = 0, len = ref2.length; j < len; j++) {\n    l = ref2[j];\n    ref3 = [0, 0], x = ref3[0], o = ref3[1];\n    for (k = 0, len1 = l.length; k < len1; k++) {\n      w = l[k];\n      if (w === X) {\n        ++x;\n      }\n      if (w === O) {\n        ++o;\n      }\n    }\n    if (x === 0 || o === 0) {\n      score += Math.pow(10, x) - Math.pow(10, o);\n    }\n  }\n  return evaluateCache[v] = score;\n};\n\nBinTicTacToe = (function() {\n  BinTicTacToe.create = function() {\n    var a, args;\n    a = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    if (a == null) {\n      a = [_, _, _, _, _, _, _, _, _];\n    }\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(BinTicTacToe, [bin(a)].concat(slice.call(args)), function(){});\n  };\n\n  function BinTicTacToe(value1, nextPlayer, depth1) {\n    this.value = value1 != null ? value1 : empty;\n    this.nextPlayer = nextPlayer != null ? nextPlayer : X;\n    this.depth = depth1 != null ? depth1 : 0;\n  }\n\n  BinTicTacToe.prototype.at = function(i) {\n    return at(this.value, i);\n  };\n\n  BinTicTacToe.prototype.rows = function() {\n    return rows(this.value);\n  };\n\n  BinTicTacToe.prototype.columns = function() {\n    return columns(this.value);\n  };\n\n  BinTicTacToe.prototype.diagonals = function() {\n    return diagonals(this.value);\n  };\n\n  BinTicTacToe.prototype.lines = function() {\n    return lines(this.value);\n  };\n\n  BinTicTacToe.prototype.isFull = function() {\n    return isFull(this.value);\n  };\n\n  BinTicTacToe.prototype.isWin = function(W) {\n    return isWin(this.value, W);\n  };\n\n  BinTicTacToe.prototype.winOn = function() {\n    return winOn(this.value);\n  };\n\n  BinTicTacToe.prototype.isTerminal = function() {\n    return isTerminal(this.value);\n  };\n\n  BinTicTacToe.prototype.nextAgent = function() {\n    if (this.nextPlayer === X) {\n      return MAX;\n    } else {\n      return MIN;\n    }\n  };\n\n  BinTicTacToe.prototype.openPositions = function() {\n    return openPositions(this.value);\n  };\n\n  BinTicTacToe.prototype.possibleActions = function() {\n    return allPlays(this.value, this.nextPlayer);\n  };\n\n  BinTicTacToe.prototype.action = function(i) {\n    return this.nextPlayer << (i * 2) | this.value;\n  };\n\n  BinTicTacToe.prototype.positionForAction = function(action) {\n    return changedOn(this.value, action);\n  };\n\n  BinTicTacToe.prototype.play = function(value) {\n    return new this.constructor(value, this.opponent(), this.depth + 1);\n  };\n\n  BinTicTacToe.prototype.utility = function() {\n    return utility(this.value);\n  };\n\n  BinTicTacToe.prototype.opponent = function(W) {\n    if (W == null) {\n      W = this.nextPlayer;\n    }\n    return opponent(W);\n  };\n\n  BinTicTacToe.prototype.toString = function() {\n    var e, r;\n    return ((function() {\n      var j, len, ref2, results;\n      ref2 = this.rows();\n      results = [];\n      for (j = 0, len = ref2.length; j < len; j++) {\n        r = ref2[j];\n        results.push(\"|\" + (((function() {\n          var k, len1, results1;\n          results1 = [];\n          for (k = 0, len1 = r.length; k < len1; k++) {\n            e = r[k];\n            results1.push(decode(e));\n          }\n          return results1;\n        })()).join('|')) + \"|\");\n      }\n      return results;\n    }).call(this)).join(\"\\n\");\n  };\n\n  return BinTicTacToe;\n\n})();\n\nmodule.exports = {\n  _: _,\n  X: X,\n  O: O,\n  opponent: opponent,\n  decode: decode,\n  empty: empty,\n  bin: bin,\n  at: at,\n  rows: rows,\n  columns: columns,\n  diagonals: diagonals,\n  lines: lines,\n  isFull: isFull,\n  isWin: isWin,\n  isTerminal: isTerminal,\n  openPositions: openPositions,\n  allPlays: allPlays,\n  changedOn: changedOn,\n  winOn: winOn,\n  discountedUtility: discountedUtility,\n  utility: utility,\n  evaluate: evaluate,\n  BinTicTacToe: BinTicTacToe\n};\n","var BinTicTacToe, MAX, MIN, O, UltimateTicTacToe, X, _, at, bin, columns, columnsU, decode, diagonals, diagonalsU, e, empty, evaluate, isTerminal, isWin, isWinU, lines, linesU, ref, ref1, rows, rowsU, ultimateEmpty, winOn,\n  slice = [].slice;\n\nref = require('../minimax'), MAX = ref.MAX, MIN = ref.MIN;\n\nref1 = require('./bin-tic-tac-toe'), _ = ref1._, X = ref1.X, O = ref1.O, decode = ref1.decode, empty = ref1.empty, bin = ref1.bin, at = ref1.at, rows = ref1.rows, columns = ref1.columns, diagonals = ref1.diagonals, lines = ref1.lines, isWin = ref1.isWin, winOn = ref1.winOn, isTerminal = ref1.isTerminal, evaluate = ref1.evaluate, BinTicTacToe = ref1.BinTicTacToe;\n\ne = empty;\n\nultimateEmpty = [e, e, e, e, e, e, e, e, e];\n\nrowsU = function(a) {\n  var i, m, ref2, results;\n  results = [];\n  for (i = m = 0, ref2 = 3 * 3; m < ref2; i = m += 3) {\n    results.push(a.slice(i, i + 3));\n  }\n  return results;\n};\n\ncolumnsU = function(a) {\n  var i, m, results;\n  results = [];\n  for (i = m = 0; m < 3; i = ++m) {\n    results.push([a[i], a[i + 3], a[i + 6]]);\n  }\n  return results;\n};\n\ndiagonalsU = function(a) {\n  return [[a[0], a[4], a[8]], [a[2], a[4], a[6]]];\n};\n\nlinesU = function(a) {\n  return slice.call(rowsU(a)).concat(slice.call(columnsU(a)), slice.call(diagonalsU(a)));\n};\n\nisWinU = function(a, W) {\n  var l, len, m, ref2;\n  ref2 = linesU(a);\n  for (m = 0, len = ref2.length; m < len; m++) {\n    l = ref2[m];\n    if (l.every(function(v) {\n      return isWin(v, W);\n    })) {\n      return true;\n    }\n  }\n  return false;\n};\n\nUltimateTicTacToe = (function() {\n  function UltimateTicTacToe(a1, nextPlayer, lastPlayedPosition, depth) {\n    this.a = a1 != null ? a1 : ultimateEmpty;\n    this.nextPlayer = nextPlayer != null ? nextPlayer : X;\n    this.lastPlayedPosition = lastPlayedPosition != null ? lastPlayedPosition : 4;\n    this.depth = depth != null ? depth : 0;\n  }\n\n  UltimateTicTacToe.prototype.at = function(i, j) {\n    return at(this.a[i], j);\n  };\n\n  UltimateTicTacToe.prototype.rows = function() {\n    return rowsU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.columns = function() {\n    return columnsU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.diagonals = function() {\n    return diagonalsU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.lines = function() {\n    return linesU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.isTerminal = function() {\n    return (this.possibleActions().length === 0) || (this.isWin(X)) || (this.isWin(O));\n  };\n\n  UltimateTicTacToe.prototype.isWin = function(W) {\n    return isWinU(this.a, W);\n  };\n\n  UltimateTicTacToe.prototype.winOn = function(i) {\n    return winOn(this.a[i]);\n  };\n\n  UltimateTicTacToe.prototype.nextAgent = function() {\n    if (this.nextPlayer === X) {\n      return MAX;\n    } else {\n      return MIN;\n    }\n  };\n\n  UltimateTicTacToe.prototype.opponent = function(who) {\n    if (who == null) {\n      who = this.nextPlayer;\n    }\n    if (who === X) {\n      return O;\n    } else {\n      return X;\n    }\n  };\n\n  UltimateTicTacToe.prototype.boardsForNextPlay = function() {\n    var i, len, m, ref2, res, v;\n    v = this.lastPlayedPosition != null ? this.a[this.lastPlayedPosition] : null;\n    if ((v != null) && !(isTerminal(v))) {\n      return [this.lastPlayedPosition];\n    } else {\n      res = [];\n      ref2 = this.a;\n      for (i = m = 0, len = ref2.length; m < len; i = ++m) {\n        v = ref2[i];\n        if (!isTerminal(v)) {\n          res.push(i);\n        }\n      }\n      return res;\n    }\n  };\n\n  UltimateTicTacToe.prototype.openPositions = function() {\n    var i, j, js, len, m, n, ref2, res, v;\n    res = [];\n    ref2 = this.boardsForNextPlay();\n    for (m = 0, len = ref2.length; m < len; m++) {\n      i = ref2[m];\n      v = this.a[i];\n      js = [];\n      for (j = n = 0; n < 18; j = n += 2) {\n        if ((0x3 << j & v) === 0) {\n          js.push(j / 2);\n        }\n      }\n      res.push([i, js]);\n    }\n    return res;\n  };\n\n  UltimateTicTacToe.prototype.action = function(ij) {\n    return ij;\n  };\n\n  UltimateTicTacToe.prototype.possibleActions = function() {\n    var i, j, js, len, len1, m, n, ref2, ref3, res;\n    if (this.actions != null) {\n      return this.actions;\n    }\n    res = [];\n    ref2 = this.openPositions();\n    for (m = 0, len = ref2.length; m < len; m++) {\n      ref3 = ref2[m], i = ref3[0], js = ref3[1];\n      for (n = 0, len1 = js.length; n < len1; n++) {\n        j = js[n];\n        res.push([i, j]);\n      }\n    }\n    return this.actions = res;\n  };\n\n  UltimateTicTacToe.prototype.play = function(arg) {\n    var a, i, j;\n    i = arg[0], j = arg[1];\n    a = this.a.slice();\n    a[i] = this.nextPlayer << (j * 2) | a[i];\n    return new this.constructor(a, this.opponent(), j, this.depth + 1);\n  };\n\n  UltimateTicTacToe.prototype.positionForAction = function(action) {\n    return action;\n  };\n\n  UltimateTicTacToe.prototype.utility = function() {\n    var i, j, k, l, len, len1, m, n, ref2, ref3, score, v;\n    score = 0;\n    ref2 = linesU(this.a);\n    for (m = 0, len = ref2.length; m < len; m++) {\n      l = ref2[m];\n      ref3 = [0, 0, 0], i = ref3[0], j = ref3[1], k = ref3[2];\n      for (n = 0, len1 = l.length; n < len1; n++) {\n        v = l[n];\n        if (isWin(v, X)) {\n          ++i;\n        } else if (isWin(v, O)) {\n          ++j;\n        }\n        k += evaluate(v);\n      }\n      if (i === 0 || j === 0) {\n        score += Math.pow(1000, i) - Math.pow(1000, j);\n      }\n      score += k;\n    }\n    return score;\n  };\n\n  UltimateTicTacToe.prototype.toString = function() {\n    var bri, m, n, ri, s, strRows, v, vs;\n    s = '';\n    for (bri = m = 0; m <= 2; bri = ++m) {\n      vs = this.rows()[bri];\n      for (ri = n = 0; n <= 2; ri = ++n) {\n        strRows = (function() {\n          var len, o, results;\n          results = [];\n          for (o = 0, len = vs.length; o < len; o++) {\n            v = vs[o];\n            results.push(\"|\" + (((function() {\n              var len1, p, ref2, results1;\n              ref2 = (rows(v))[ri];\n              results1 = [];\n              for (p = 0, len1 = ref2.length; p < len1; p++) {\n                e = ref2[p];\n                results1.push(decode(e));\n              }\n              return results1;\n            })()).join('|')) + \"|\");\n          }\n          return results;\n        })();\n        s += strRows.join(' ║ ');\n        if (bri < 2 || ri < 2) {\n          s += '\\n';\n        }\n      }\n      if (bri < 2) {\n        s += '════════╬═════════╬════════\\n';\n      }\n    }\n    return s;\n  };\n\n  return UltimateTicTacToe;\n\n})();\n\nmodule.exports = {\n  _: _,\n  X: X,\n  O: O,\n  bin: bin,\n  UltimateTicTacToe: UltimateTicTacToe\n};\n","var MAX, MIN, MinimaxAgent, ref;\n\nref = ['MAX', 'MIN'], MAX = ref[0], MIN = ref[1];\n\nMinimaxAgent = (function() {\n  function MinimaxAgent(depth) {\n    this.depth = depth != null ? depth : Infinity;\n    this.rootAgent = MAX;\n  }\n\n  MinimaxAgent.prototype.nextAction = function(state) {\n    var _, bestAction, ref1;\n    this.rootAgent = state.nextAgent();\n    ref1 = this.minimax(state), _ = ref1[0], bestAction = ref1[1];\n    return bestAction;\n  };\n\n  MinimaxAgent.prototype.minimax = function(state, α, β, ply) {\n    var isTerminal;\n    if (α == null) {\n      α = -Infinity;\n    }\n    if (β == null) {\n      β = +Infinity;\n    }\n    if (ply == null) {\n      ply = 0;\n    }\n    isTerminal = state.isTerminal();\n    if (!isTerminal && state.nextAgent() === this.rootAgent) {\n      ++ply;\n    }\n    if (ply > this.depth || isTerminal) {\n      return [state.utility(), null];\n    } else if (state.nextAgent() === MAX) {\n      return this.maxi(state, α, β, ply);\n    } else {\n      return this.mini(state, α, β, ply);\n    }\n  };\n\n  MinimaxAgent.prototype.maxi = function(state, α, β, ply) {\n    var _, a, action, i, len, nextValue, ref1, ref2, ref3, ref4, successor, v;\n    ref1 = [-Infinity, null], v = ref1[0], a = ref1[1];\n    ref2 = state.possibleActions();\n    for (i = 0, len = ref2.length; i < len; i++) {\n      action = ref2[i];\n      successor = state.play(action);\n      ref3 = this.minimax(successor, α, β, ply), nextValue = ref3[0], _ = ref3[1];\n      if (nextValue > v) {\n        ref4 = [nextValue, action], v = ref4[0], a = ref4[1];\n      }\n      if (v >= β) {\n        return [v, a];\n      }\n      α = Math.max(α, v);\n    }\n    return [v, a];\n  };\n\n  MinimaxAgent.prototype.mini = function(state, α, β, ply) {\n    var _, a, action, i, len, nextValue, ref1, ref2, ref3, ref4, successor, v;\n    ref1 = [+Infinity, null], v = ref1[0], a = ref1[1];\n    ref2 = state.possibleActions();\n    for (i = 0, len = ref2.length; i < len; i++) {\n      action = ref2[i];\n      successor = state.play(action);\n      ref3 = this.minimax(successor, α, β, ply), nextValue = ref3[0], _ = ref3[1];\n      if (nextValue < v) {\n        ref4 = [nextValue, action], v = ref4[0], a = ref4[1];\n      }\n      if (v <= α) {\n        return [v, a];\n      }\n      β = Math.min(β, v);\n    }\n    return [v, a];\n  };\n\n  return MinimaxAgent;\n\n})();\n\nmodule.exports = {\n  MAX: MAX,\n  MIN: MIN,\n  MinimaxAgent: MinimaxAgent\n};\n"],"sourceRoot":"/source/"}