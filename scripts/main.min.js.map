{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","app/scripts/index.coffee","main.min.js","node_modules/aye-aye/lib/games/bin-tic-tac-toe.js","node_modules/aye-aye/lib/games/ultimate-tic-tac-toe.js","node_modules/aye-aye/lib/minimax.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","$","O","UltimateTicTacToe","X","decode","ref","jQuery","prototype","state","this","nextPlayer","lastPlayedPosition","depth","checkGameOver","computerPlayer","createPlayerO","createPlayerX","game","humanPlayer","markWins","next","playable","playerO","playerX","setup","unplayable","player","play","className","j","k","len","ref1","ref2","possibleActions","addClass","removeClass","off","results","wonClass","push","results1","winOn","at","isTerminal","end","text","isWin","on","modal","worker","Worker","postMessage","command","onmessage","data","action","toLowerCase","highlight","gameState","terminate","int","parseId","parseInt","match","playableClassName","tile","get","id","fn","each","el","width","outerWidth","height","outerHeight","css","position","left","offset","top","background-color","opacity","z-index","appendTo","fadeOut","queue","remove","aye-aye/lib/games/bin-tic-tac-toe","aye-aye/lib/games/ultimate-tic-tac-toe",2,"BinTicTacToe","MAX","MIN","_","allPlays","bin","changedOn","columns","diagonals","discountedUtility","empty","evaluate","evaluateCache","isFull","lines","masks","openPositions","opponent","positions","rows","utility","γ","slice","W","res","v","concat","m","ms","w","v1","v2","Math","pow","len1","ref3","score","x","value1","depth1","value","create","args","arguments","func","ctor","child","result","apply","Object","nextAgent","positionForAction","constructor","toString","join","../minimax",3,"columnsU","diagonalsU","isWinU","linesU","rowsU","ultimateEmpty","every","a1","who","boardsForNextPlay","js","ij","actions","arg","bri","ri","strRows","vs","p","./bin-tic-tac-toe",4,"MinimaxAgent","Infinity","rootAgent","nextAction","bestAction","minimax","α","β","ply","maxi","mini","nextValue","ref4","successor","max","min"],"mappings":"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","file":"main.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","$ = jQuery\n\n{X, O, decode} = require 'aye-aye/lib/games/bin-tic-tac-toe'\n{UltimateTicTacToe} = require 'aye-aye/lib/games/ultimate-tic-tac-toe'\n\nUltimateTicTacToe::state = ->\n  {@a, @nextPlayer, @lastPlayedPosition, @depth}\n\n$ ->\n\n  game = null\n  playerX = null\n  playerO = null\n\n  createPlayerX = -> humanPlayer()\n  createPlayerO = -> computerPlayer()\n\n  next = ->\n    player = if game.nextPlayer is X then playerX else playerO\n    player.play()\n\n  playable = ->\n    className =\n      if game.nextPlayer is X then 'x-playable-tile' else 'o-playable-tile'\n    for [i,j] in game.possibleActions()\n      $ \"##{i}\\\\,#{j}\"\n        .addClass className\n    className\n\n  unplayable = ->\n    $ '.tile'\n      .removeClass 'x-playable-tile'\n      .removeClass 'o-playable-tile'\n      .removeClass 'human-playable-tile'\n      .off 'click'\n\n  markWins = ->\n    for i in [0...9]\n      for j in game.winOn i\n        wonClass = if (game.at i, j) is X then 'x-won-tile' else 'o-won-tile'\n        $ \"##{i}\\\\,#{j}\"\n          .addClass wonClass\n\n  checkGameOver = ->\n    return no unless game.isTerminal()\n    playerX.end?()\n    playerO.end?()\n    $ '#game-over-text'\n      .text switch\n        when game.isWin(X) then 'X Wins!'\n        when game.isWin(O) then 'O Wins!'\n        else 'Draw!'\n    $ '#game-over'\n      .off 'hidden.bs.modal'\n      .on 'hidden.bs.modal', setup\n      .modal 'show'\n    yes\n\n  computerPlayer = (depth = 3) ->\n    worker = new Worker 'scripts/minimax-worker.min.js'\n    worker.postMessage command: 'setup', depth: depth\n    worker.onmessage = (e) ->\n      [i, j] = e.data.action\n      $ \"##{i}\\\\,#{j}\"\n        .text (decode game.nextPlayer).toLowerCase()\n        .highlight()\n      game = game.play [i, j]\n      next()\n    play: ->\n      unplayable()\n      markWins()\n      return if checkGameOver()\n      playable()\n      worker.postMessage command: 'play', gameState: game.state()\n    end: ->\n      worker.terminate()\n\n  humanPlayer = ->\n    int = (s) -> parseInt s, 10\n    parseId = (text) ->\n      match = text.match /(\\d),(\\d)/\n      [(int match[1]), (int match[2])]\n    play: ->\n      unplayable()\n      markWins()\n      return if checkGameOver()\n      playableClassName = playable()\n      $ \".#{playableClassName}\"\n        .addClass 'human-playable-tile'\n        .on 'click', ->\n          tile = ($ this)\n          tile.text (decode game.nextPlayer).toLowerCase()\n          game = game.play parseId tile.get(0).id\n          next()\n\n  setup = ->\n    game = new UltimateTicTacToe\n    playerX = createPlayerX()\n    playerO = createPlayerO()\n    $ '.tile'\n      .removeClass 'x-won-tile'\n      .removeClass 'o-won-tile'\n      .text ''\n    next()\n\n  setup()\n\n$.fn.highlight = ->\n  ($ this).each ->\n    el = $ this\n    $ '<div/>'\n      .width el.outerWidth()\n      .height el.outerHeight()\n      .css\n        'position': 'absolute'\n        'left': el.offset().left\n        'top': el.offset().top\n        'background-color': '#ffff77'\n        'opacity': .7\n        'z-index': 10\n      .appendTo 'body'\n      .fadeOut 1000\n      .queue -> ($ this).remove()\n",null,"var BinTicTacToe, MAX, MIN, O, X, _, allPlays, at, bin, changedOn, columns, decode, diagonals, discountedUtility, empty, evaluate, evaluateCache, isFull, isTerminal, isWin, lines, masks, openPositions, opponent, positions, ref, ref1, rows, utility, winOn, γ,\n  slice = [].slice;\n\nref = require('../minimax'), MAX = ref.MAX, MIN = ref.MIN;\n\nref1 = [0x0, 0x1, 0x2], _ = ref1[0], X = ref1[1], O = ref1[2];\n\nopponent = function(W) {\n  return ~W & 0x3;\n};\n\ndecode = function(W) {\n  return {\n    0x0: ' ',\n    0x1: 'X',\n    0x2: 'O'\n  }[W] || (function() {\n    throw new Error(W);\n  })();\n};\n\nempty = 0x0;\n\nbin = function(a) {\n  var e, i, j, len, res;\n  res = 0;\n  for (i = j = 0, len = a.length; j < len; i = ++j) {\n    e = a[i];\n    res |= e << (i * 2);\n  }\n  return res;\n};\n\nat = function(v, i) {\n  return v >> (i * 2) & 0x3;\n};\n\nrows = function(v) {\n  return [[at(v, 0), at(v, 1), at(v, 2)], [at(v, 3), at(v, 4), at(v, 5)], [at(v, 6), at(v, 7), at(v, 8)]];\n};\n\ncolumns = function(v) {\n  return [[at(v, 0), at(v, 3), at(v, 6)], [at(v, 1), at(v, 4), at(v, 7)], [at(v, 2), at(v, 5), at(v, 8)]];\n};\n\ndiagonals = function(v) {\n  return [[at(v, 0), at(v, 4), at(v, 8)], [at(v, 2), at(v, 4), at(v, 6)]];\n};\n\nlines = function(v) {\n  return slice.call(rows(v)).concat(slice.call(columns(v)), slice.call(diagonals(v)));\n};\n\nisFull = function(v) {\n  var i, j;\n  for (i = j = 0; j < 18; i = j += 2) {\n    if ((0x3 << i & v) === 0) {\n      return false;\n    }\n  }\n  return true;\n};\n\nmasks = {\n  0x1: [0x15, 0x540, 0x15000, 0x1041, 0x4104, 0x10410, 0x10101, 0x1110],\n  0x2: [0x2a, 0xa80, 0x2a000, 0x2082, 0x8208, 0x20820, 0x20202, 0x2220]\n};\n\npositions = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\nisWin = function(v, W) {\n  var j, len, m, ms;\n  ms = masks[W] || (function() {\n    throw new Error(W);\n  })();\n  for (j = 0, len = ms.length; j < len; j++) {\n    m = ms[j];\n    if ((m & v) === m) {\n      return true;\n    }\n  }\n  return false;\n};\n\nwinOn = function(v) {\n  var w;\n  w = function(W) {\n    var i, j, len, m, ms;\n    ms = masks[W];\n    for (i = j = 0, len = ms.length; j < len; i = ++j) {\n      m = ms[i];\n      if ((m & v) === m) {\n        return positions[i];\n      }\n    }\n    return null;\n  };\n  return (w(X)) || (w(O)) || [];\n};\n\nisTerminal = function(v) {\n  return (isFull(v)) || (isWin(v, X)) || (isWin(v, O));\n};\n\nopenPositions = function(v) {\n  var i, j, results;\n  results = [];\n  for (i = j = 0; j < 9; i = ++j) {\n    if ((0x3 << (i * 2) & v) === 0) {\n      results.push(i);\n    }\n  }\n  return results;\n};\n\nallPlays = function(v, W) {\n  var i, j, res;\n  res = [];\n  for (i = j = 0; j < 18; i = j += 2) {\n    if ((0x3 << i & v) === 0) {\n      res.push(W << i | v);\n    }\n  }\n  return res;\n};\n\nchangedOn = function(v1, v2) {\n  var i, j;\n  for (i = j = 0; j < 18; i = ++j) {\n    if ((0x3 << (i * 2) & v1) !== (0x3 << (i * 2) & v2)) {\n      return i;\n    }\n  }\n  return null;\n};\n\nγ = 0.1;\n\ndiscountedUtility = function(v, depth) {\n  if (depth == null) {\n    depth = 0;\n  }\n  return Math.pow(γ, depth) * utility(v);\n};\n\nutility = function(v) {\n  if (isWin(v, X)) {\n    return 2000;\n  } else if (isWin(v, O)) {\n    return -2000;\n  } else if (isFull(v)) {\n    return 0;\n  } else {\n    return evaluate(v);\n  }\n};\n\nevaluateCache = {};\n\nevaluate = function(v) {\n  var j, k, l, len, len1, o, ref2, ref3, score, w, x;\n  if (evaluateCache[v] != null) {\n    return evaluateCache[v];\n  }\n  score = 0;\n  ref2 = lines(v);\n  for (j = 0, len = ref2.length; j < len; j++) {\n    l = ref2[j];\n    ref3 = [0, 0], x = ref3[0], o = ref3[1];\n    for (k = 0, len1 = l.length; k < len1; k++) {\n      w = l[k];\n      if (w === X) {\n        ++x;\n      }\n      if (w === O) {\n        ++o;\n      }\n    }\n    if (x === 0 || o === 0) {\n      score += Math.pow(10, x) - Math.pow(10, o);\n    }\n  }\n  return evaluateCache[v] = score;\n};\n\nBinTicTacToe = (function() {\n  BinTicTacToe.create = function() {\n    var a, args;\n    a = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    if (a == null) {\n      a = [_, _, _, _, _, _, _, _, _];\n    }\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(BinTicTacToe, [bin(a)].concat(slice.call(args)), function(){});\n  };\n\n  function BinTicTacToe(value1, nextPlayer, depth1) {\n    this.value = value1 != null ? value1 : empty;\n    this.nextPlayer = nextPlayer != null ? nextPlayer : X;\n    this.depth = depth1 != null ? depth1 : 0;\n  }\n\n  BinTicTacToe.prototype.at = function(i) {\n    return at(this.value, i);\n  };\n\n  BinTicTacToe.prototype.rows = function() {\n    return rows(this.value);\n  };\n\n  BinTicTacToe.prototype.columns = function() {\n    return columns(this.value);\n  };\n\n  BinTicTacToe.prototype.diagonals = function() {\n    return diagonals(this.value);\n  };\n\n  BinTicTacToe.prototype.lines = function() {\n    return lines(this.value);\n  };\n\n  BinTicTacToe.prototype.isFull = function() {\n    return isFull(this.value);\n  };\n\n  BinTicTacToe.prototype.isWin = function(W) {\n    return isWin(this.value, W);\n  };\n\n  BinTicTacToe.prototype.winOn = function() {\n    return winOn(this.value);\n  };\n\n  BinTicTacToe.prototype.isTerminal = function() {\n    return isTerminal(this.value);\n  };\n\n  BinTicTacToe.prototype.nextAgent = function() {\n    if (this.nextPlayer === X) {\n      return MAX;\n    } else {\n      return MIN;\n    }\n  };\n\n  BinTicTacToe.prototype.openPositions = function() {\n    return openPositions(this.value);\n  };\n\n  BinTicTacToe.prototype.possibleActions = function() {\n    return allPlays(this.value, this.nextPlayer);\n  };\n\n  BinTicTacToe.prototype.action = function(i) {\n    return this.nextPlayer << (i * 2) | this.value;\n  };\n\n  BinTicTacToe.prototype.positionForAction = function(action) {\n    return changedOn(this.value, action);\n  };\n\n  BinTicTacToe.prototype.play = function(value) {\n    return new this.constructor(value, this.opponent(), this.depth + 1);\n  };\n\n  BinTicTacToe.prototype.utility = function() {\n    return utility(this.value);\n  };\n\n  BinTicTacToe.prototype.opponent = function(W) {\n    if (W == null) {\n      W = this.nextPlayer;\n    }\n    return opponent(W);\n  };\n\n  BinTicTacToe.prototype.toString = function() {\n    var e, r;\n    return ((function() {\n      var j, len, ref2, results;\n      ref2 = this.rows();\n      results = [];\n      for (j = 0, len = ref2.length; j < len; j++) {\n        r = ref2[j];\n        results.push(\"|\" + (((function() {\n          var k, len1, results1;\n          results1 = [];\n          for (k = 0, len1 = r.length; k < len1; k++) {\n            e = r[k];\n            results1.push(decode(e));\n          }\n          return results1;\n        })()).join('|')) + \"|\");\n      }\n      return results;\n    }).call(this)).join(\"\\n\");\n  };\n\n  return BinTicTacToe;\n\n})();\n\nmodule.exports = {\n  _: _,\n  X: X,\n  O: O,\n  opponent: opponent,\n  decode: decode,\n  empty: empty,\n  bin: bin,\n  at: at,\n  rows: rows,\n  columns: columns,\n  diagonals: diagonals,\n  lines: lines,\n  isFull: isFull,\n  isWin: isWin,\n  isTerminal: isTerminal,\n  openPositions: openPositions,\n  allPlays: allPlays,\n  changedOn: changedOn,\n  winOn: winOn,\n  discountedUtility: discountedUtility,\n  utility: utility,\n  evaluate: evaluate,\n  BinTicTacToe: BinTicTacToe\n};\n","var BinTicTacToe, MAX, MIN, O, UltimateTicTacToe, X, _, at, bin, columns, columnsU, decode, diagonals, diagonalsU, e, empty, evaluate, isTerminal, isWin, isWinU, lines, linesU, ref, ref1, rows, rowsU, ultimateEmpty, winOn,\n  slice = [].slice;\n\nref = require('../minimax'), MAX = ref.MAX, MIN = ref.MIN;\n\nref1 = require('./bin-tic-tac-toe'), _ = ref1._, X = ref1.X, O = ref1.O, decode = ref1.decode, empty = ref1.empty, bin = ref1.bin, at = ref1.at, rows = ref1.rows, columns = ref1.columns, diagonals = ref1.diagonals, lines = ref1.lines, isWin = ref1.isWin, winOn = ref1.winOn, isTerminal = ref1.isTerminal, evaluate = ref1.evaluate, BinTicTacToe = ref1.BinTicTacToe;\n\ne = empty;\n\nultimateEmpty = [e, e, e, e, e, e, e, e, e];\n\nrowsU = function(a) {\n  var i, m, ref2, results;\n  results = [];\n  for (i = m = 0, ref2 = 3 * 3; m < ref2; i = m += 3) {\n    results.push(a.slice(i, i + 3));\n  }\n  return results;\n};\n\ncolumnsU = function(a) {\n  var i, m, results;\n  results = [];\n  for (i = m = 0; m < 3; i = ++m) {\n    results.push([a[i], a[i + 3], a[i + 6]]);\n  }\n  return results;\n};\n\ndiagonalsU = function(a) {\n  return [[a[0], a[4], a[8]], [a[2], a[4], a[6]]];\n};\n\nlinesU = function(a) {\n  return slice.call(rowsU(a)).concat(slice.call(columnsU(a)), slice.call(diagonalsU(a)));\n};\n\nisWinU = function(a, W) {\n  var l, len, m, ref2;\n  ref2 = linesU(a);\n  for (m = 0, len = ref2.length; m < len; m++) {\n    l = ref2[m];\n    if (l.every(function(v) {\n      return isWin(v, W);\n    })) {\n      return true;\n    }\n  }\n  return false;\n};\n\nUltimateTicTacToe = (function() {\n  function UltimateTicTacToe(a1, nextPlayer, lastPlayedPosition, depth) {\n    this.a = a1 != null ? a1 : ultimateEmpty;\n    this.nextPlayer = nextPlayer != null ? nextPlayer : X;\n    this.lastPlayedPosition = lastPlayedPosition != null ? lastPlayedPosition : 4;\n    this.depth = depth != null ? depth : 0;\n  }\n\n  UltimateTicTacToe.prototype.at = function(i, j) {\n    return at(this.a[i], j);\n  };\n\n  UltimateTicTacToe.prototype.rows = function() {\n    return rowsU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.columns = function() {\n    return columnsU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.diagonals = function() {\n    return diagonalsU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.lines = function() {\n    return linesU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.isTerminal = function() {\n    return (this.possibleActions().length === 0) || (this.isWin(X)) || (this.isWin(O));\n  };\n\n  UltimateTicTacToe.prototype.isWin = function(W) {\n    return isWinU(this.a, W);\n  };\n\n  UltimateTicTacToe.prototype.winOn = function(i) {\n    return winOn(this.a[i]);\n  };\n\n  UltimateTicTacToe.prototype.nextAgent = function() {\n    if (this.nextPlayer === X) {\n      return MAX;\n    } else {\n      return MIN;\n    }\n  };\n\n  UltimateTicTacToe.prototype.opponent = function(who) {\n    if (who == null) {\n      who = this.nextPlayer;\n    }\n    if (who === X) {\n      return O;\n    } else {\n      return X;\n    }\n  };\n\n  UltimateTicTacToe.prototype.boardsForNextPlay = function() {\n    var i, len, m, ref2, res, v;\n    v = this.lastPlayedPosition != null ? this.a[this.lastPlayedPosition] : null;\n    if ((v != null) && !(isTerminal(v))) {\n      return [this.lastPlayedPosition];\n    } else {\n      res = [];\n      ref2 = this.a;\n      for (i = m = 0, len = ref2.length; m < len; i = ++m) {\n        v = ref2[i];\n        if (!isTerminal(v)) {\n          res.push(i);\n        }\n      }\n      return res;\n    }\n  };\n\n  UltimateTicTacToe.prototype.openPositions = function() {\n    var i, j, js, len, m, n, ref2, res, v;\n    res = [];\n    ref2 = this.boardsForNextPlay();\n    for (m = 0, len = ref2.length; m < len; m++) {\n      i = ref2[m];\n      v = this.a[i];\n      js = [];\n      for (j = n = 0; n < 18; j = n += 2) {\n        if ((0x3 << j & v) === 0) {\n          js.push(j / 2);\n        }\n      }\n      res.push([i, js]);\n    }\n    return res;\n  };\n\n  UltimateTicTacToe.prototype.action = function(ij) {\n    return ij;\n  };\n\n  UltimateTicTacToe.prototype.possibleActions = function() {\n    var i, j, js, len, len1, m, n, ref2, ref3, res;\n    if (this.actions != null) {\n      return this.actions;\n    }\n    res = [];\n    ref2 = this.openPositions();\n    for (m = 0, len = ref2.length; m < len; m++) {\n      ref3 = ref2[m], i = ref3[0], js = ref3[1];\n      for (n = 0, len1 = js.length; n < len1; n++) {\n        j = js[n];\n        res.push([i, j]);\n      }\n    }\n    return this.actions = res;\n  };\n\n  UltimateTicTacToe.prototype.play = function(arg) {\n    var a, i, j;\n    i = arg[0], j = arg[1];\n    a = this.a.slice();\n    a[i] = this.nextPlayer << (j * 2) | a[i];\n    return new this.constructor(a, this.opponent(), j, this.depth + 1);\n  };\n\n  UltimateTicTacToe.prototype.positionForAction = function(action) {\n    return action;\n  };\n\n  UltimateTicTacToe.prototype.utility = function() {\n    var i, j, k, l, len, len1, m, n, ref2, ref3, score, v;\n    score = 0;\n    ref2 = linesU(this.a);\n    for (m = 0, len = ref2.length; m < len; m++) {\n      l = ref2[m];\n      ref3 = [0, 0, 0], i = ref3[0], j = ref3[1], k = ref3[2];\n      for (n = 0, len1 = l.length; n < len1; n++) {\n        v = l[n];\n        if (isWin(v, X)) {\n          ++i;\n        } else if (isWin(v, O)) {\n          ++j;\n        }\n        k += evaluate(v);\n      }\n      if (i === 0 || j === 0) {\n        score += Math.pow(1000, i) - Math.pow(1000, j);\n      }\n      score += k;\n    }\n    return score;\n  };\n\n  UltimateTicTacToe.prototype.toString = function() {\n    var bri, m, n, ri, s, strRows, v, vs;\n    s = '';\n    for (bri = m = 0; m <= 2; bri = ++m) {\n      vs = this.rows()[bri];\n      for (ri = n = 0; n <= 2; ri = ++n) {\n        strRows = (function() {\n          var len, o, results;\n          results = [];\n          for (o = 0, len = vs.length; o < len; o++) {\n            v = vs[o];\n            results.push(\"|\" + (((function() {\n              var len1, p, ref2, results1;\n              ref2 = (rows(v))[ri];\n              results1 = [];\n              for (p = 0, len1 = ref2.length; p < len1; p++) {\n                e = ref2[p];\n                results1.push(decode(e));\n              }\n              return results1;\n            })()).join('|')) + \"|\");\n          }\n          return results;\n        })();\n        s += strRows.join(' ║ ');\n        if (bri < 2 || ri < 2) {\n          s += '\\n';\n        }\n      }\n      if (bri < 2) {\n        s += '════════╬═════════╬════════\\n';\n      }\n    }\n    return s;\n  };\n\n  return UltimateTicTacToe;\n\n})();\n\nmodule.exports = {\n  _: _,\n  X: X,\n  O: O,\n  bin: bin,\n  UltimateTicTacToe: UltimateTicTacToe\n};\n","var MAX, MIN, MinimaxAgent, ref;\n\nref = ['MAX', 'MIN'], MAX = ref[0], MIN = ref[1];\n\nMinimaxAgent = (function() {\n  function MinimaxAgent(depth) {\n    this.depth = depth != null ? depth : Infinity;\n    this.rootAgent = MAX;\n  }\n\n  MinimaxAgent.prototype.nextAction = function(state) {\n    var _, bestAction, ref1;\n    this.rootAgent = state.nextAgent();\n    ref1 = this.minimax(state), _ = ref1[0], bestAction = ref1[1];\n    return bestAction;\n  };\n\n  MinimaxAgent.prototype.minimax = function(state, α, β, ply) {\n    var isTerminal;\n    if (α == null) {\n      α = -Infinity;\n    }\n    if (β == null) {\n      β = +Infinity;\n    }\n    if (ply == null) {\n      ply = 0;\n    }\n    isTerminal = state.isTerminal();\n    if (!isTerminal && state.nextAgent() === this.rootAgent) {\n      ++ply;\n    }\n    if (ply > this.depth || isTerminal) {\n      return [state.utility(), null];\n    } else if (state.nextAgent() === MAX) {\n      return this.maxi(state, α, β, ply);\n    } else {\n      return this.mini(state, α, β, ply);\n    }\n  };\n\n  MinimaxAgent.prototype.maxi = function(state, α, β, ply) {\n    var _, a, action, i, len, nextValue, ref1, ref2, ref3, ref4, successor, v;\n    ref1 = [-Infinity, null], v = ref1[0], a = ref1[1];\n    ref2 = state.possibleActions();\n    for (i = 0, len = ref2.length; i < len; i++) {\n      action = ref2[i];\n      successor = state.play(action);\n      ref3 = this.minimax(successor, α, β, ply), nextValue = ref3[0], _ = ref3[1];\n      if (nextValue > v) {\n        ref4 = [nextValue, action], v = ref4[0], a = ref4[1];\n      }\n      if (v >= β) {\n        return [v, a];\n      }\n      α = Math.max(α, v);\n    }\n    return [v, a];\n  };\n\n  MinimaxAgent.prototype.mini = function(state, α, β, ply) {\n    var _, a, action, i, len, nextValue, ref1, ref2, ref3, ref4, successor, v;\n    ref1 = [+Infinity, null], v = ref1[0], a = ref1[1];\n    ref2 = state.possibleActions();\n    for (i = 0, len = ref2.length; i < len; i++) {\n      action = ref2[i];\n      successor = state.play(action);\n      ref3 = this.minimax(successor, α, β, ply), nextValue = ref3[0], _ = ref3[1];\n      if (nextValue < v) {\n        ref4 = [nextValue, action], v = ref4[0], a = ref4[1];\n      }\n      if (v <= α) {\n        return [v, a];\n      }\n      β = Math.min(β, v);\n    }\n    return [v, a];\n  };\n\n  return MinimaxAgent;\n\n})();\n\nmodule.exports = {\n  MAX: MAX,\n  MIN: MIN,\n  MinimaxAgent: MinimaxAgent\n};\n"],"sourceRoot":"/source/"}