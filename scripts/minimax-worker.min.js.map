{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","app/scripts/minimax-worker.coffee","minimax-worker.min.js","node_modules/aye-aye/lib/games/bin-tic-tac-toe.js","node_modules/aye-aye/lib/games/ultimate-tic-tac-toe.js","node_modules/aye-aye/lib/minimax.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","MinimaxAgent","UltimateTicTacToe","computerPlayer","player","fromState","arg","depth","lastPlayedPosition","nextPlayer","self","onmessage","action","game","gameState","data","command","play","postMessage","agent","isTerminal","nextAction","aye-aye","aye-aye/lib/games/ultimate-tic-tac-toe",2,"BinTicTacToe","MAX","MIN","O","X","_","allPlays","at","bin","changedOn","columns","decode","diagonals","discountedUtility","empty","evaluate","evaluateCache","isFull","isWin","lines","masks","openPositions","opponent","positions","ref","ref1","rows","utility","winOn","γ","slice","W","j","len","res","v","concat","m","ms","w","results","push","v1","v2","Math","pow","k","len1","ref2","ref3","score","x","value1","depth1","this","value","create","args","arguments","func","ctor","prototype","child","result","apply","Object","nextAgent","possibleActions","positionForAction","constructor","toString","results1","join","../minimax",3,"columnsU","diagonalsU","isWinU","linesU","rowsU","ultimateEmpty","every","a1","who","boardsForNextPlay","js","ij","actions","bri","ri","strRows","vs","p","./bin-tic-tac-toe",4,"Infinity","rootAgent","state","bestAction","minimax","α","β","ply","maxi","mini","nextValue","ref4","successor","max","min"],"mappings":"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","file":"minimax-worker.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","{MinimaxAgent} = require 'aye-aye'\n{UltimateTicTacToe} = require 'aye-aye/lib/games/ultimate-tic-tac-toe'\n\nUltimateTicTacToe.fromState = ({a, nextPlayer, lastPlayedPosition, depth}) ->\n  new UltimateTicTacToe a, nextPlayer, lastPlayedPosition, depth\n\nplayer = null\n\nself.onmessage = (e) ->\n  switch e.data.command\n    when 'setup'\n      depth = e.data.depth\n      player = computerPlayer depth\n    when 'play'\n      gameState = e.data.gameState\n      game = UltimateTicTacToe.fromState gameState\n      action = player.play game\n      self.postMessage {action}\n\ncomputerPlayer = (depth = 3) ->\n  agent = new MinimaxAgent depth\n  play: (game) ->\n    return if game.isTerminal()\n    agent.nextAction game\n",null,"var BinTicTacToe, MAX, MIN, O, X, _, allPlays, at, bin, changedOn, columns, decode, diagonals, discountedUtility, empty, evaluate, evaluateCache, isFull, isTerminal, isWin, lines, masks, openPositions, opponent, positions, ref, ref1, rows, utility, winOn, γ,\n  slice = [].slice;\n\nref = require('../minimax'), MAX = ref.MAX, MIN = ref.MIN;\n\nref1 = [0x0, 0x1, 0x2], _ = ref1[0], X = ref1[1], O = ref1[2];\n\nopponent = function(W) {\n  return ~W & 0x3;\n};\n\ndecode = function(W) {\n  return {\n    0x0: ' ',\n    0x1: 'X',\n    0x2: 'O'\n  }[W] || (function() {\n    throw new Error(W);\n  })();\n};\n\nempty = 0x0;\n\nbin = function(a) {\n  var e, i, j, len, res;\n  res = 0;\n  for (i = j = 0, len = a.length; j < len; i = ++j) {\n    e = a[i];\n    res |= e << (i * 2);\n  }\n  return res;\n};\n\nat = function(v, i) {\n  return v >> (i * 2) & 0x3;\n};\n\nrows = function(v) {\n  return [[at(v, 0), at(v, 1), at(v, 2)], [at(v, 3), at(v, 4), at(v, 5)], [at(v, 6), at(v, 7), at(v, 8)]];\n};\n\ncolumns = function(v) {\n  return [[at(v, 0), at(v, 3), at(v, 6)], [at(v, 1), at(v, 4), at(v, 7)], [at(v, 2), at(v, 5), at(v, 8)]];\n};\n\ndiagonals = function(v) {\n  return [[at(v, 0), at(v, 4), at(v, 8)], [at(v, 2), at(v, 4), at(v, 6)]];\n};\n\nlines = function(v) {\n  return slice.call(rows(v)).concat(slice.call(columns(v)), slice.call(diagonals(v)));\n};\n\nisFull = function(v) {\n  var i, j;\n  for (i = j = 0; j < 18; i = j += 2) {\n    if ((0x3 << i & v) === 0) {\n      return false;\n    }\n  }\n  return true;\n};\n\nmasks = {\n  0x1: [0x15, 0x540, 0x15000, 0x1041, 0x4104, 0x10410, 0x10101, 0x1110],\n  0x2: [0x2a, 0xa80, 0x2a000, 0x2082, 0x8208, 0x20820, 0x20202, 0x2220]\n};\n\npositions = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\nisWin = function(v, W) {\n  var j, len, m, ms;\n  ms = masks[W] || (function() {\n    throw new Error(W);\n  })();\n  for (j = 0, len = ms.length; j < len; j++) {\n    m = ms[j];\n    if ((m & v) === m) {\n      return true;\n    }\n  }\n  return false;\n};\n\nwinOn = function(v) {\n  var w;\n  w = function(W) {\n    var i, j, len, m, ms;\n    ms = masks[W];\n    for (i = j = 0, len = ms.length; j < len; i = ++j) {\n      m = ms[i];\n      if ((m & v) === m) {\n        return positions[i];\n      }\n    }\n    return null;\n  };\n  return (w(X)) || (w(O)) || [];\n};\n\nisTerminal = function(v) {\n  return (isFull(v)) || (isWin(v, X)) || (isWin(v, O));\n};\n\nopenPositions = function(v) {\n  var i, j, results;\n  results = [];\n  for (i = j = 0; j < 9; i = ++j) {\n    if ((0x3 << (i * 2) & v) === 0) {\n      results.push(i);\n    }\n  }\n  return results;\n};\n\nallPlays = function(v, W) {\n  var i, j, res;\n  res = [];\n  for (i = j = 0; j < 18; i = j += 2) {\n    if ((0x3 << i & v) === 0) {\n      res.push(W << i | v);\n    }\n  }\n  return res;\n};\n\nchangedOn = function(v1, v2) {\n  var i, j;\n  for (i = j = 0; j < 18; i = ++j) {\n    if ((0x3 << (i * 2) & v1) !== (0x3 << (i * 2) & v2)) {\n      return i;\n    }\n  }\n  return null;\n};\n\nγ = 0.1;\n\ndiscountedUtility = function(v, depth) {\n  if (depth == null) {\n    depth = 0;\n  }\n  return Math.pow(γ, depth) * utility(v);\n};\n\nutility = function(v) {\n  if (isWin(v, X)) {\n    return 2000;\n  } else if (isWin(v, O)) {\n    return -2000;\n  } else if (isFull(v)) {\n    return 0;\n  } else {\n    return evaluate(v);\n  }\n};\n\nevaluateCache = {};\n\nevaluate = function(v) {\n  var j, k, l, len, len1, o, ref2, ref3, score, w, x;\n  if (evaluateCache[v] != null) {\n    return evaluateCache[v];\n  }\n  score = 0;\n  ref2 = lines(v);\n  for (j = 0, len = ref2.length; j < len; j++) {\n    l = ref2[j];\n    ref3 = [0, 0], x = ref3[0], o = ref3[1];\n    for (k = 0, len1 = l.length; k < len1; k++) {\n      w = l[k];\n      if (w === X) {\n        ++x;\n      }\n      if (w === O) {\n        ++o;\n      }\n    }\n    if (x === 0 || o === 0) {\n      score += Math.pow(10, x) - Math.pow(10, o);\n    }\n  }\n  return evaluateCache[v] = score;\n};\n\nBinTicTacToe = (function() {\n  BinTicTacToe.create = function() {\n    var a, args;\n    a = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    if (a == null) {\n      a = [_, _, _, _, _, _, _, _, _];\n    }\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(BinTicTacToe, [bin(a)].concat(slice.call(args)), function(){});\n  };\n\n  function BinTicTacToe(value1, nextPlayer, depth1) {\n    this.value = value1 != null ? value1 : empty;\n    this.nextPlayer = nextPlayer != null ? nextPlayer : X;\n    this.depth = depth1 != null ? depth1 : 0;\n  }\n\n  BinTicTacToe.prototype.at = function(i) {\n    return at(this.value, i);\n  };\n\n  BinTicTacToe.prototype.rows = function() {\n    return rows(this.value);\n  };\n\n  BinTicTacToe.prototype.columns = function() {\n    return columns(this.value);\n  };\n\n  BinTicTacToe.prototype.diagonals = function() {\n    return diagonals(this.value);\n  };\n\n  BinTicTacToe.prototype.lines = function() {\n    return lines(this.value);\n  };\n\n  BinTicTacToe.prototype.isFull = function() {\n    return isFull(this.value);\n  };\n\n  BinTicTacToe.prototype.isWin = function(W) {\n    return isWin(this.value, W);\n  };\n\n  BinTicTacToe.prototype.winOn = function() {\n    return winOn(this.value);\n  };\n\n  BinTicTacToe.prototype.isTerminal = function() {\n    return isTerminal(this.value);\n  };\n\n  BinTicTacToe.prototype.nextAgent = function() {\n    if (this.nextPlayer === X) {\n      return MAX;\n    } else {\n      return MIN;\n    }\n  };\n\n  BinTicTacToe.prototype.openPositions = function() {\n    return openPositions(this.value);\n  };\n\n  BinTicTacToe.prototype.possibleActions = function() {\n    return allPlays(this.value, this.nextPlayer);\n  };\n\n  BinTicTacToe.prototype.action = function(i) {\n    return this.nextPlayer << (i * 2) | this.value;\n  };\n\n  BinTicTacToe.prototype.positionForAction = function(action) {\n    return changedOn(this.value, action);\n  };\n\n  BinTicTacToe.prototype.play = function(value) {\n    return new this.constructor(value, this.opponent(), this.depth + 1);\n  };\n\n  BinTicTacToe.prototype.utility = function() {\n    return utility(this.value);\n  };\n\n  BinTicTacToe.prototype.opponent = function(W) {\n    if (W == null) {\n      W = this.nextPlayer;\n    }\n    return opponent(W);\n  };\n\n  BinTicTacToe.prototype.toString = function() {\n    var e, r;\n    return ((function() {\n      var j, len, ref2, results;\n      ref2 = this.rows();\n      results = [];\n      for (j = 0, len = ref2.length; j < len; j++) {\n        r = ref2[j];\n        results.push(\"|\" + (((function() {\n          var k, len1, results1;\n          results1 = [];\n          for (k = 0, len1 = r.length; k < len1; k++) {\n            e = r[k];\n            results1.push(decode(e));\n          }\n          return results1;\n        })()).join('|')) + \"|\");\n      }\n      return results;\n    }).call(this)).join(\"\\n\");\n  };\n\n  return BinTicTacToe;\n\n})();\n\nmodule.exports = {\n  _: _,\n  X: X,\n  O: O,\n  opponent: opponent,\n  decode: decode,\n  empty: empty,\n  bin: bin,\n  at: at,\n  rows: rows,\n  columns: columns,\n  diagonals: diagonals,\n  lines: lines,\n  isFull: isFull,\n  isWin: isWin,\n  isTerminal: isTerminal,\n  openPositions: openPositions,\n  allPlays: allPlays,\n  changedOn: changedOn,\n  winOn: winOn,\n  discountedUtility: discountedUtility,\n  utility: utility,\n  evaluate: evaluate,\n  BinTicTacToe: BinTicTacToe\n};\n","var BinTicTacToe, MAX, MIN, O, UltimateTicTacToe, X, _, at, bin, columns, columnsU, decode, diagonals, diagonalsU, e, empty, evaluate, isTerminal, isWin, isWinU, lines, linesU, ref, ref1, rows, rowsU, ultimateEmpty, winOn,\n  slice = [].slice;\n\nref = require('../minimax'), MAX = ref.MAX, MIN = ref.MIN;\n\nref1 = require('./bin-tic-tac-toe'), _ = ref1._, X = ref1.X, O = ref1.O, decode = ref1.decode, empty = ref1.empty, bin = ref1.bin, at = ref1.at, rows = ref1.rows, columns = ref1.columns, diagonals = ref1.diagonals, lines = ref1.lines, isWin = ref1.isWin, winOn = ref1.winOn, isTerminal = ref1.isTerminal, evaluate = ref1.evaluate, BinTicTacToe = ref1.BinTicTacToe;\n\ne = empty;\n\nultimateEmpty = [e, e, e, e, e, e, e, e, e];\n\nrowsU = function(a) {\n  var i, m, ref2, results;\n  results = [];\n  for (i = m = 0, ref2 = 3 * 3; m < ref2; i = m += 3) {\n    results.push(a.slice(i, i + 3));\n  }\n  return results;\n};\n\ncolumnsU = function(a) {\n  var i, m, results;\n  results = [];\n  for (i = m = 0; m < 3; i = ++m) {\n    results.push([a[i], a[i + 3], a[i + 6]]);\n  }\n  return results;\n};\n\ndiagonalsU = function(a) {\n  return [[a[0], a[4], a[8]], [a[2], a[4], a[6]]];\n};\n\nlinesU = function(a) {\n  return slice.call(rowsU(a)).concat(slice.call(columnsU(a)), slice.call(diagonalsU(a)));\n};\n\nisWinU = function(a, W) {\n  var l, len, m, ref2;\n  ref2 = linesU(a);\n  for (m = 0, len = ref2.length; m < len; m++) {\n    l = ref2[m];\n    if (l.every(function(v) {\n      return isWin(v, W);\n    })) {\n      return true;\n    }\n  }\n  return false;\n};\n\nUltimateTicTacToe = (function() {\n  function UltimateTicTacToe(a1, nextPlayer, lastPlayedPosition, depth) {\n    this.a = a1 != null ? a1 : ultimateEmpty;\n    this.nextPlayer = nextPlayer != null ? nextPlayer : X;\n    this.lastPlayedPosition = lastPlayedPosition != null ? lastPlayedPosition : 4;\n    this.depth = depth != null ? depth : 0;\n  }\n\n  UltimateTicTacToe.prototype.at = function(i, j) {\n    return at(this.a[i], j);\n  };\n\n  UltimateTicTacToe.prototype.rows = function() {\n    return rowsU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.columns = function() {\n    return columnsU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.diagonals = function() {\n    return diagonalsU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.lines = function() {\n    return linesU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.isTerminal = function() {\n    return (this.possibleActions().length === 0) || (this.isWin(X)) || (this.isWin(O));\n  };\n\n  UltimateTicTacToe.prototype.isWin = function(W) {\n    return isWinU(this.a, W);\n  };\n\n  UltimateTicTacToe.prototype.winOn = function(i) {\n    return winOn(this.a[i]);\n  };\n\n  UltimateTicTacToe.prototype.nextAgent = function() {\n    if (this.nextPlayer === X) {\n      return MAX;\n    } else {\n      return MIN;\n    }\n  };\n\n  UltimateTicTacToe.prototype.opponent = function(who) {\n    if (who == null) {\n      who = this.nextPlayer;\n    }\n    if (who === X) {\n      return O;\n    } else {\n      return X;\n    }\n  };\n\n  UltimateTicTacToe.prototype.boardsForNextPlay = function() {\n    var i, len, m, ref2, res, v;\n    v = this.lastPlayedPosition != null ? this.a[this.lastPlayedPosition] : null;\n    if ((v != null) && !(isTerminal(v))) {\n      return [this.lastPlayedPosition];\n    } else {\n      res = [];\n      ref2 = this.a;\n      for (i = m = 0, len = ref2.length; m < len; i = ++m) {\n        v = ref2[i];\n        if (!isTerminal(v)) {\n          res.push(i);\n        }\n      }\n      return res;\n    }\n  };\n\n  UltimateTicTacToe.prototype.openPositions = function() {\n    var i, j, js, len, m, n, ref2, res, v;\n    res = [];\n    ref2 = this.boardsForNextPlay();\n    for (m = 0, len = ref2.length; m < len; m++) {\n      i = ref2[m];\n      v = this.a[i];\n      js = [];\n      for (j = n = 0; n < 18; j = n += 2) {\n        if ((0x3 << j & v) === 0) {\n          js.push(j / 2);\n        }\n      }\n      res.push([i, js]);\n    }\n    return res;\n  };\n\n  UltimateTicTacToe.prototype.action = function(ij) {\n    return ij;\n  };\n\n  UltimateTicTacToe.prototype.possibleActions = function() {\n    var i, j, js, len, len1, m, n, ref2, ref3, res;\n    if (this.actions != null) {\n      return this.actions;\n    }\n    res = [];\n    ref2 = this.openPositions();\n    for (m = 0, len = ref2.length; m < len; m++) {\n      ref3 = ref2[m], i = ref3[0], js = ref3[1];\n      for (n = 0, len1 = js.length; n < len1; n++) {\n        j = js[n];\n        res.push([i, j]);\n      }\n    }\n    return this.actions = res;\n  };\n\n  UltimateTicTacToe.prototype.play = function(arg) {\n    var a, i, j;\n    i = arg[0], j = arg[1];\n    a = this.a.slice();\n    a[i] = this.nextPlayer << (j * 2) | a[i];\n    return new this.constructor(a, this.opponent(), j, this.depth + 1);\n  };\n\n  UltimateTicTacToe.prototype.positionForAction = function(action) {\n    return action;\n  };\n\n  UltimateTicTacToe.prototype.utility = function() {\n    var i, j, k, l, len, len1, m, n, ref2, ref3, score, v;\n    score = 0;\n    ref2 = linesU(this.a);\n    for (m = 0, len = ref2.length; m < len; m++) {\n      l = ref2[m];\n      ref3 = [0, 0, 0], i = ref3[0], j = ref3[1], k = ref3[2];\n      for (n = 0, len1 = l.length; n < len1; n++) {\n        v = l[n];\n        if (isWin(v, X)) {\n          ++i;\n        } else if (isWin(v, O)) {\n          ++j;\n        }\n        k += evaluate(v);\n      }\n      if (i === 0 || j === 0) {\n        score += Math.pow(1000, i) - Math.pow(1000, j);\n      }\n      score += k;\n    }\n    return score;\n  };\n\n  UltimateTicTacToe.prototype.toString = function() {\n    var bri, m, n, ri, s, strRows, v, vs;\n    s = '';\n    for (bri = m = 0; m <= 2; bri = ++m) {\n      vs = this.rows()[bri];\n      for (ri = n = 0; n <= 2; ri = ++n) {\n        strRows = (function() {\n          var len, o, results;\n          results = [];\n          for (o = 0, len = vs.length; o < len; o++) {\n            v = vs[o];\n            results.push(\"|\" + (((function() {\n              var len1, p, ref2, results1;\n              ref2 = (rows(v))[ri];\n              results1 = [];\n              for (p = 0, len1 = ref2.length; p < len1; p++) {\n                e = ref2[p];\n                results1.push(decode(e));\n              }\n              return results1;\n            })()).join('|')) + \"|\");\n          }\n          return results;\n        })();\n        s += strRows.join(' ║ ');\n        if (bri < 2 || ri < 2) {\n          s += '\\n';\n        }\n      }\n      if (bri < 2) {\n        s += '════════╬═════════╬════════\\n';\n      }\n    }\n    return s;\n  };\n\n  return UltimateTicTacToe;\n\n})();\n\nmodule.exports = {\n  _: _,\n  X: X,\n  O: O,\n  bin: bin,\n  UltimateTicTacToe: UltimateTicTacToe\n};\n","var MAX, MIN, MinimaxAgent, ref;\n\nref = ['MAX', 'MIN'], MAX = ref[0], MIN = ref[1];\n\nMinimaxAgent = (function() {\n  function MinimaxAgent(depth) {\n    this.depth = depth != null ? depth : Infinity;\n    this.rootAgent = MAX;\n  }\n\n  MinimaxAgent.prototype.nextAction = function(state) {\n    var _, bestAction, ref1;\n    this.rootAgent = state.nextAgent();\n    ref1 = this.minimax(state), _ = ref1[0], bestAction = ref1[1];\n    return bestAction;\n  };\n\n  MinimaxAgent.prototype.minimax = function(state, α, β, ply) {\n    var isTerminal;\n    if (α == null) {\n      α = -Infinity;\n    }\n    if (β == null) {\n      β = +Infinity;\n    }\n    if (ply == null) {\n      ply = 0;\n    }\n    isTerminal = state.isTerminal();\n    if (!isTerminal && state.nextAgent() === this.rootAgent) {\n      ++ply;\n    }\n    if (ply > this.depth || isTerminal) {\n      return [state.utility(), null];\n    } else if (state.nextAgent() === MAX) {\n      return this.maxi(state, α, β, ply);\n    } else {\n      return this.mini(state, α, β, ply);\n    }\n  };\n\n  MinimaxAgent.prototype.maxi = function(state, α, β, ply) {\n    var _, a, action, i, len, nextValue, ref1, ref2, ref3, ref4, successor, v;\n    ref1 = [-Infinity, null], v = ref1[0], a = ref1[1];\n    ref2 = state.possibleActions();\n    for (i = 0, len = ref2.length; i < len; i++) {\n      action = ref2[i];\n      successor = state.play(action);\n      ref3 = this.minimax(successor, α, β, ply), nextValue = ref3[0], _ = ref3[1];\n      if (nextValue > v) {\n        ref4 = [nextValue, action], v = ref4[0], a = ref4[1];\n      }\n      if (v >= β) {\n        return [v, a];\n      }\n      α = Math.max(α, v);\n    }\n    return [v, a];\n  };\n\n  MinimaxAgent.prototype.mini = function(state, α, β, ply) {\n    var _, a, action, i, len, nextValue, ref1, ref2, ref3, ref4, successor, v;\n    ref1 = [+Infinity, null], v = ref1[0], a = ref1[1];\n    ref2 = state.possibleActions();\n    for (i = 0, len = ref2.length; i < len; i++) {\n      action = ref2[i];\n      successor = state.play(action);\n      ref3 = this.minimax(successor, α, β, ply), nextValue = ref3[0], _ = ref3[1];\n      if (nextValue < v) {\n        ref4 = [nextValue, action], v = ref4[0], a = ref4[1];\n      }\n      if (v <= α) {\n        return [v, a];\n      }\n      β = Math.min(β, v);\n    }\n    return [v, a];\n  };\n\n  return MinimaxAgent;\n\n})();\n\nmodule.exports = {\n  MAX: MAX,\n  MIN: MIN,\n  MinimaxAgent: MinimaxAgent\n};\n"],"sourceRoot":"/source/"}