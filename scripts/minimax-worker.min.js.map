{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","app/scripts/minimax-worker.coffee","minimax-worker.min.js","node_modules/aye-aye/lib/games/bin-tic-tac-toe.js","node_modules/aye-aye/lib/games/ultimate-tic-tac-toe.js","node_modules/aye-aye/lib/minimax.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","MinimaxAgent","UltimateTicTacToe","computerPlayer","game","player","random","shuffle","Math","floor","j","k","ref","ref1","prototype","possibleActions","js","len","len1","res","this","actions","openPositions","push","self","onmessage","action","depth","lastAction","data","command","args","play","postMessage","agent","isTerminal","nextAction","aye-aye","aye-aye/lib/games/ultimate-tic-tac-toe",2,"BinTicTacToe","MAX","MIN","O","X","_","allPlays","at","bin","changedOn","columns","decode","diagonals","discountedUtility","empty","evaluate","evaluateCache","isFull","isWin","lines","masks","opponent","positions","rows","utility","winOn","γ","slice","W",0,"v","concat","m","ms","w","results","v1","v2","pow","ref2","ref3","score","x","value1","nextPlayer","depth1","value","create","arguments","func","ctor","child","result","apply","Object","nextAgent","positionForAction","constructor","toString","results1","join","../minimax",3,"columnsU","diagonalsU","isWinU","linesU","rowsU","ultimateEmpty","every","a1","lastPlayedPosition","who","boardsForNextPlay","ij","arg","bri","ri","strRows","vs","p","./bin-tic-tac-toe",4,"Infinity","rootAgent","state","bestAction","minimax","α","β","ply","maxi","mini","nextValue","ref4","successor","max","min"],"mappings":"CAAA,QAAAA,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAK,GAAA,GAAAC,OAAA,uBAAAN,EAAA,IAAA,MAAAK,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAX,EAAAG,IAAAS,WAAAb,GAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAS,QAAA,IAAA,GAAAL,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAa,GAAA,SAAAT,EAAAU,EAAAJ,GCAA,GAAAK,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,CAACN,GAAgBX,EAAQ,WAAxBW,aACAC,EAAqBZ,EAAQ,0CAA7BY,kBAEDG,EAAS,KACTD,EAAO,KAGPE,EAAS,SAACf,EAAGP,GCKX,MDLiBwB,MAAKC,MAAMD,KAAKF,UAAUtB,EAAEO,GAAGA,IAGlDgB,EAAU,SAAClB,GACT,GAAAE,GAAAmB,EAAAC,EAAA3B,EAAA4B,EAAAC,CACA,IADA7B,EAAIK,EAAES,OACW,IAALd,EAAZ,MAAOK,EACP,KAASE,EAAAoB,EAAA,EAAAC,EAAA5B,EAAA,EAAA4B,GAAA,EAAAA,EAAAD,EAAAA,EAAAC,EAAArB,EAAAqB,GAAA,IAAAD,IAAAA,EACPD,EAAIJ,EAAOf,EAAGP,GACd6B,GAAexB,EAAEqB,GAAGrB,EAAEE,IAArBF,EAAEE,GAAAsB,EAAA,GAAGxB,EAAEqB,GAAAG,EAAA,ECUV,ODTAxB,IAEFa,EAAiBY,UAAEC,gBAAkB,WACnC,GAAAxB,GAAAmB,EAAAM,EAAAL,EAAAhB,EAAAsB,EAAAC,EAAAN,EAAAC,EAAAM,CAAA,IAAmB,MAAAC,KAAAC,QAAnB,MAAOD,MAACC,OAER,KADAF,KACAP,EAAAQ,KAAAE,gBAAAX,EAAA,EAAAM,EAAAL,EAAAd,OAAAmB,EAAAN,EAAAA,IACE,ICcAE,EAAOD,EAAID,GDfRpB,EAAAsB,EAAA,GAAGG,EAAAH,EAAA,GACNlB,EAAA,EAAAuB,EAAAF,EAAAlB,OAAAoB,EAAAvB,EAAAA,ICgBEe,EAAIM,EAAGrB,GDfPwB,EAAII,MAAMhC,EAAGmB,GCmBjB,ODlBAU,MAACC,QAAUd,EAAQY,IAErBK,KAAKC,UAAY,SAAC3C,GAChB,GAAA4C,GAAAC,EAAAC,CAAA,QAAO9C,EAAE+C,KAAKC,SAAd,IACO,QCuBH,MDtBA1B,GAAO,GAAIF,GACXyB,EAAQ7C,EAAE+C,KAAKE,KAAKJ,MACpBtB,EAASF,EAAewB,EAJ5B,KAKO,OC2BH,MD1BAC,GAAa9C,EAAE+C,KAAKE,KAAKH,WACM,MAAAA,IAA/BxB,EAAOA,EAAK4B,KAAKJ,IACjBF,EAASrB,EAAO2B,KAAK5B,GACrBA,EAAOA,EAAK4B,KAAKN,GACjBF,KAAKS,aAAaP,OAAAA,MAExBvB,EAAiB,SAACwB,GAChB,GAAAO,EC+BA,OAJa,OAATP,ID5BYA,EAAQ,GACxBO,EAAY,GAAAjC,GAAa0B,IACzBK,KAAM,SAAC5B,GACL,MAAUA,GAAK+B,aAAf,OACAD,EAAME,WAAWhC,QCuClBiC,UAAU,EAAEC,yCAAyC,IAAIC,GAAG,SAASjD,EAAQU,EAAOJ,GClFvF,GAAA4C,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAtB,EAAAuB,EAAAC,EAAAC,EAAAtC,EAAAuC,EAAAC,EAAAlD,EAAAC,EAAAkD,EAAAC,EAAAC,EAAAC,EACAC,KAAAA,KAEAvD,GAAAtB,EAAA,cAAAmD,EAAA7B,EAAA6B,IAAAC,EAAA9B,EAAA8B,IAEA7B,GAAA,EAAA,EAAA,GAAAgC,EAAAhC,EAAA,GAAA+B,EAAA/B,EAAA,GAAA8B,EAAA9B,EAAA,GAEAgD,EAAA,SAAAO,GACA,MAAA,IAAAA,GAGAjB,EAAA,SAAAiB,GACA,OACAC,EAAA,IACAtE,EAAA,IACAwC,EAAA,KACA6B,IAAA,WACA,KAAA,IAAA3E,OAAA2E,OAIAd,EAAA,EAEAN,EAAA,SAAA3D,GACA,GAAAP,GAAAS,EAAAmB,EAAAO,EAAAE,CAEA,KADAA,EAAA,EACA5B,EAAAmB,EAAA,EAAAO,EAAA5B,EAAAS,OAAAmB,EAAAP,EAAAnB,IAAAmB,EACA5B,EAAAO,EAAAE,GACA4B,GAAArC,GAAA,EAAAS,CAEA,OAAA4B,IAGA4B,EAAA,SAAAuB,EAAA/E,GACA,MAAA+E,IAAA,EAAA/E,EAAA,GAGAwE,EAAA,SAAAO,GACA,QAAAvB,EAAAuB,EAAA,GAAAvB,EAAAuB,EAAA,GAAAvB,EAAAuB,EAAA,KAAAvB,EAAAuB,EAAA,GAAAvB,EAAAuB,EAAA,GAAAvB,EAAAuB,EAAA,KAAAvB,EAAAuB,EAAA,GAAAvB,EAAAuB,EAAA,GAAAvB,EAAAuB,EAAA,MAGApB,EAAA,SAAAoB,GACA,QAAAvB,EAAAuB,EAAA,GAAAvB,EAAAuB,EAAA,GAAAvB,EAAAuB,EAAA,KAAAvB,EAAAuB,EAAA,GAAAvB,EAAAuB,EAAA,GAAAvB,EAAAuB,EAAA,KAAAvB,EAAAuB,EAAA,GAAAvB,EAAAuB,EAAA,GAAAvB,EAAAuB,EAAA,MAGAlB,EAAA,SAAAkB,GACA,QAAAvB,EAAAuB,EAAA,GAAAvB,EAAAuB,EAAA,GAAAvB,EAAAuB,EAAA,KAAAvB,EAAAuB,EAAA,GAAAvB,EAAAuB,EAAA,GAAAvB,EAAAuB,EAAA,MAGAX,EAAA,SAAAW,GACA,MAAAH,GAAAtE,KAAAkE,EAAAO,IAAAC,OAAAJ,EAAAtE,KAAAqD,EAAAoB,IAAAH,EAAAtE,KAAAuD,EAAAkB,MAGAb,EAAA,SAAAa,GACA,GAAA/E,GAAAmB,CACA,KAAAnB,EAAAmB,EAAA,EAAA,GAAAA,EAAAnB,EAAAmB,GAAA,EACA,GAAA,KAAA,GAAAnB,EAAA+E,GACA,OAAA,CAGA,QAAA,GAGAV,GACA7D,GAAA,GAAA,KAAA,MAAA,KAAA,MAAA,MAAA,MAAA,MACAwC,GAAA,GAAA,KAAA,OAAA,KAAA,MAAA,OAAA,OAAA,OAGAuB,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAEAJ,EAAA,SAAAY,EAAAF,GACA,GAAA1D,GAAAO,EAAAuD,EAAAC,CAIA,KAHAA,EAAAb,EAAAQ,IAAA,WACA,KAAA,IAAA3E,OAAA2E,MAEA1D,EAAA,EAAAO,EAAAwD,EAAA3E,OAAAmB,EAAAP,EAAAA,IAEA,GADA8D,EAAAC,EAAA/D,IACA8D,EAAAF,KAAAE,EACA,OAAA,CAGA,QAAA,GAGAP,EAAA,SAAAK,GACA,GAAAI,EAYA,OAXAA,GAAA,SAAAN,GACA,GAAA7E,GAAAmB,EAAAO,EAAAuD,EAAAC,CAEA,KADAA,EAAAb,EAAAQ,GACA7E,EAAAmB,EAAA,EAAAO,EAAAwD,EAAA3E,OAAAmB,EAAAP,EAAAnB,IAAAmB,EAEA,GADA8D,EAAAC,EAAAlF,IACAiF,EAAAF,KAAAE,EACA,MAAAV,GAAAvE,EAGA,OAAA,OAEAmF,EAAA9B,IAAA8B,EAAA/B,QAGAR,EAAA,SAAAmC,GACA,MAAAb,GAAAa,IAAAZ,EAAAY,EAAA1B,IAAAc,EAAAY,EAAA3B,IAGArB,EAAA,SAAAgD,GACA,GAAA/E,GAAAmB,EAAAiE,CAEA,KADAA,KACApF,EAAAmB,EAAA,EAAA,EAAAA,EAAAnB,IAAAmB,EACA,KAAA,GAAA,EAAAnB,EAAA+E,IACAK,EAAApD,KAAAhC,EAGA,OAAAoF,IAGA7B,EAAA,SAAAwB,EAAAF,GACA,GAAA7E,GAAAmB,EAAAS,CAEA,KADAA,KACA5B,EAAAmB,EAAA,EAAA,GAAAA,EAAAnB,EAAAmB,GAAA,EACA,KAAA,GAAAnB,EAAA+E,IACAnD,EAAAI,KAAA6C,GAAA7E,EAAA+E,EAGA,OAAAnD,IAGA8B,EAAA,SAAA2B,EAAAC,GACA,GAAAtF,GAAAmB,CACA,KAAAnB,EAAAmB,EAAA,EAAA,GAAAA,EAAAnB,IAAAmB,EACA,IAAA,GAAA,EAAAnB,EAAAqF,MAAA,GAAA,EAAArF,EAAAsF,GACA,MAAAtF,EAGA,OAAA,OAGA2E,EAAA,GAEAb,EAAA,SAAAiB,EAAA3C,GAIA,MAHA,OAAAA,IACAA,EAAA,GAEAnB,KAAAsE,IAAAZ,EAAAvC,GAAAqC,EAAAM,IAGAN,EAAA,SAAAM,GACA,MAAAZ,GAAAY,EAAA1B,GACA,IACAc,EAAAY,EAAA3B,GACA,KACAc,EAAAa,GACA,EAEAf,EAAAe,IAIAd,KAEAD,EAAA,SAAAe,GACA,GAAA5D,GAAAC,EAAAhB,EAAAsB,EAAAC,EAAA/B,EAAA4F,EAAAC,EAAAC,EAAAP,EAAAQ,CACA,IAAA,MAAA1B,EAAAc,GACA,MAAAd,GAAAc,EAIA,KAFAW,EAAA,EACAF,EAAApB,EAAAW,GACA5D,EAAA,EAAAO,EAAA8D,EAAAjF,OAAAmB,EAAAP,EAAAA,IAAA,CAGA,IAFAf,EAAAoF,EAAArE,GACAsE,GAAA,EAAA,GAAAE,EAAAF,EAAA,GAAA7F,EAAA6F,EAAA,GACArE,EAAA,EAAAO,EAAAvB,EAAAG,OAAAoB,EAAAP,EAAAA,IACA+D,EAAA/E,EAAAgB,GACA+D,IAAA9B,KACAsC,EAEAR,IAAA/B,KACAxD,GAGA,IAAA+F,GAAA,IAAA/F,KACA8F,GAAAzE,KAAAsE,IAAA,GAAAI,GAAA1E,KAAAsE,IAAA,GAAA3F,IAGA,MAAAqE,GAAAc,GAAAW,GAGAzC,EAAA,WAcA,QAAAA,GAAA2C,EAAAC,EAAAC,GACAjE,KAAAkE,MAAA,MAAAH,EAAAA,EAAA7B,EACAlC,KAAAgE,WAAA,MAAAA,EAAAA,EAAAxC,EACAxB,KAAAO,MAAA,MAAA0D,EAAAA,EAAA,EAoGA,MApHA7C,GAAA+C,OAAA,WACA,GAAAlG,GAAA0C,CAKA,OAJA1C,GAAAmG,UAAA,GAAAzD,EAAA,GAAAyD,UAAA1F,OAAAqE,EAAAtE,KAAA2F,UAAA,MACA,MAAAnG,IACAA,GAAAwD,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAEA,SAAA4C,EAAA1D,EAAA2D,GACAA,EAAA5E,UAAA2E,EAAA3E,SACA,IAAA6E,GAAA,GAAAD,GAAAE,EAAAH,EAAAI,MAAAF,EAAA5D,EACA,OAAA+D,QAAAF,KAAAA,EAAAA,EAAAD,GACAnD,GAAAQ,EAAA3D,IAAAkF,OAAAJ,EAAAtE,KAAAkC,IAAA,eASAS,EAAA1B,UAAAiC,GAAA,SAAAxD,GACA,MAAAwD,GAAA3B,KAAAkE,MAAA/F,IAGAiD,EAAA1B,UAAAiD,KAAA,WACA,MAAAA,GAAA3C,KAAAkE,QAGA9C,EAAA1B,UAAAoC,QAAA,WACA,MAAAA,GAAA9B,KAAAkE,QAGA9C,EAAA1B,UAAAsC,UAAA,WACA,MAAAA,GAAAhC,KAAAkE,QAGA9C,EAAA1B,UAAA6C,MAAA,WACA,MAAAA,GAAAvC,KAAAkE,QAGA9C,EAAA1B,UAAA2C,OAAA,WACA,MAAAA,GAAArC,KAAAkE,QAGA9C,EAAA1B,UAAA4C,MAAA,SAAAU,GACA,MAAAV,GAAAtC,KAAAkE,MAAAlB,IAGA5B,EAAA1B,UAAAmD,MAAA,WACA,MAAAA,GAAA7C,KAAAkE,QAGA9C,EAAA1B,UAAAqB,WAAA,WACA,MAAAA,GAAAf,KAAAkE,QAGA9C,EAAA1B,UAAAiF,UAAA,WACA,MAAA3E,MAAAgE,aAAAxC,EACAH,EAEAC,GAIAF,EAAA1B,UAAAQ,cAAA,WACA,MAAAA,GAAAF,KAAAkE,QAGA9C,EAAA1B,UAAAC,gBAAA,WACA,MAAA+B,GAAA1B,KAAAkE,MAAAlE,KAAAgE,aAGA5C,EAAA1B,UAAAY,OAAA,SAAAnC,GACA,MAAA6B,MAAAgE,YAAA,EAAA7F,EAAA6B,KAAAkE,OAGA9C,EAAA1B,UAAAkF,kBAAA,SAAAtE,GACA,MAAAuB,GAAA7B,KAAAkE,MAAA5D,IAGAc,EAAA1B,UAAAkB,KAAA,SAAAsD,GACA,MAAA,IAAAlE,MAAA6E,YAAAX,EAAAlE,KAAAyC,WAAAzC,KAAAO,MAAA,IAGAa,EAAA1B,UAAAkD,QAAA,WACA,MAAAA,GAAA5C,KAAAkE,QAGA9C,EAAA1B,UAAA+C,SAAA,SAAAO,GAIA,MAHA,OAAAA,IACAA,EAAAhD,KAAAgE,YAEAvB,EAAAO,IAGA5B,EAAA1B,UAAAoF,SAAA,WACA,GAAApH,GAAAG,CACA,OAAA,YACA,GAAAyB,GAAAO,EAAA8D,EAAAJ,CAGA,KAFAI,EAAA3D,KAAA2C,OACAY,KACAjE,EAAA,EAAAO,EAAA8D,EAAAjF,OAAAmB,EAAAP,EAAAA,IACAzB,EAAA8F,EAAArE,GACAiE,EAAApD,KAAA,IAAA,WACA,GAAAZ,GAAAO,EAAAiF,CAEA,KADAA,KACAxF,EAAA,EAAAO,EAAAjC,EAAAa,OAAAoB,EAAAP,EAAAA,IACA7B,EAAAG,EAAA0B,GACAwF,EAAA5E,KAAA4B,EAAArE,GAEA,OAAAqH,MACAC,KAAA,KAAA,IAEA,OAAAzB,IACA9E,KAAAuB,MAAAgF,KAAA,OAGA5D,KAIAxC,EAAAJ,SACAiD,EAAAA,EACAD,EAAAA,EACAD,EAAAA,EACAkB,SAAAA,EACAV,OAAAA,EACAG,MAAAA,EACAN,IAAAA,EACAD,GAAAA,EACAgB,KAAAA,EACAb,QAAAA,EACAE,UAAAA,EACAO,MAAAA,EACAF,OAAAA,EACAC,MAAAA,EACAvB,WAAAA,EACAb,cAAAA,EACAwB,SAAAA,EACAG,UAAAA,EACAgB,MAAAA,EACAZ,kBAAAA,EACAW,QAAAA,EACAT,SAAAA,EACAf,aAAAA,KDsFG6D,aAAa,IAAIC,GAAG,SAAShH,EAAQU,EAAOJ,GE/Z/C,GAAA4C,GAAAC,EAAAC,EAAAC,EAAAzC,EAAA0C,EAAAC,EAAAE,EAAAC,EAAAE,EAAAqD,EAAApD,EAAAC,EAAAoD,EAAA1H,EAAAwE,EAAAC,EAAApB,EAAAuB,EAAA+C,EAAA9C,EAAA+C,EAAA9F,EAAAC,EAAAkD,EAAA4C,EAAAC,EAAA3C,EACAE,KAAAA,KAEAvD,GAAAtB,EAAA,cAAAmD,EAAA7B,EAAA6B,IAAAC,EAAA9B,EAAA8B,IAEA7B,EAAAvB,EAAA,qBAAAuD,EAAAhC,EAAAgC,EAAAD,EAAA/B,EAAA+B,EAAAD,EAAA9B,EAAA8B,EAAAQ,EAAAtC,EAAAsC,OAAAG,EAAAzC,EAAAyC,MAAAN,EAAAnC,EAAAmC,IAAAD,EAAAlC,EAAAkC,GAAAgB,EAAAlD,EAAAkD,KAAAb,EAAArC,EAAAqC,QAAAE,EAAAvC,EAAAuC,UAAAO,EAAA9C,EAAA8C,MAAAD,EAAA7C,EAAA6C,MAAAO,EAAApD,EAAAoD,MAAA9B,EAAAtB,EAAAsB,WAAAoB,EAAA1C,EAAA0C,SAAAf,EAAA3B,EAAA2B,aAEA1D,EAAAwE,EAEAsD,GAAA9H,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAEA6H,EAAA,SAAAtH,GACA,GAAAE,GAAAiF,EAAAO,EAAAJ,CAEA,KADAA,KACApF,EAAAiF,EAAA,EAAAO,EAAA,EAAAA,EAAAP,EAAAjF,EAAAiF,GAAA,EACAG,EAAApD,KAAAlC,EAAA8E,MAAA5E,EAAAA,EAAA,GAEA,OAAAoF,IAGA4B,EAAA,SAAAlH,GACA,GAAAE,GAAAiF,EAAAG,CAEA,KADAA,KACApF,EAAAiF,EAAA,EAAA,EAAAA,EAAAjF,IAAAiF,EACAG,EAAApD,MAAAlC,EAAAE,GAAAF,EAAAE,EAAA,GAAAF,EAAAE,EAAA,IAEA,OAAAoF,IAGA6B,EAAA,SAAAnH,GACA,QAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,MAGAqH,EAAA,SAAArH,GACA,MAAA8E,GAAAtE,KAAA8G,EAAAtH,IAAAkF,OAAAJ,EAAAtE,KAAA0G,EAAAlH,IAAA8E,EAAAtE,KAAA2G,EAAAnH,MAGAoH,EAAA,SAAApH,EAAA+E,GACA,GAAAzE,GAAAsB,EAAAuD,EAAAO,CAEA,KADAA,EAAA2B,EAAArH,GACAmF,EAAA,EAAAvD,EAAA8D,EAAAjF,OAAAmB,EAAAuD,EAAAA,IAEA,GADA7E,EAAAoF,EAAAP,GACA7E,EAAAkH,MAAA,SAAAvC,GACA,MAAAZ,GAAAY,EAAAF,KAEA,OAAA,CAGA,QAAA,GAGAlE,EAAA,WACA,QAAAA,GAAA4G,EAAA1B,EAAA2B,EAAApF,GACAP,KAAA/B,EAAA,MAAAyH,EAAAA,EAAAF,EACAxF,KAAAgE,WAAA,MAAAA,EAAAA,EAAAxC,EACAxB,KAAA2F,mBAAA,MAAAA,EAAAA,EAAA,EACA3F,KAAAO,MAAA,MAAAA,EAAAA,EAAA,EAuLA,MApLAzB,GAAAY,UAAAiC,GAAA,SAAAxD,EAAAmB,GACA,MAAAqC,GAAA3B,KAAA/B,EAAAE,GAAAmB,IAGAR,EAAAY,UAAAiD,KAAA,WACA,MAAA4C,GAAAvF,KAAA/B,IAGAa,EAAAY,UAAAoC,QAAA,WACA,MAAAqD,GAAAnF,KAAA/B,IAGAa,EAAAY,UAAAsC,UAAA,WACA,MAAAoD,GAAApF,KAAA/B,IAGAa,EAAAY,UAAA6C,MAAA,WACA,MAAA+C,GAAAtF,KAAA/B,IAGAa,EAAAY,UAAAqB,WAAA,WACA,MAAA,KAAAf,KAAAL,kBAAAjB,QAAAsB,KAAAsC,MAAAd,IAAAxB,KAAAsC,MAAAf,IAGAzC,EAAAY,UAAA4C,MAAA,SAAAU,GACA,MAAAqC,GAAArF,KAAA/B,EAAA+E,IAGAlE,EAAAY,UAAAmD,MAAA,SAAA1E,GACA,MAAA0E,GAAA7C,KAAA/B,EAAAE,KAGAW,EAAAY,UAAAiF,UAAA,WACA,MAAA3E,MAAAgE,aAAAxC,EACAH,EAEAC,GAIAxC,EAAAY,UAAA+C,SAAA,SAAAmD,GAIA,MAHA,OAAAA,IACAA,EAAA5F,KAAAgE,YAEA4B,IAAApE,EACAD,EAEAC,GAIA1C,EAAAY,UAAAmG,kBAAA,WACA,GAAA1H,GAAA0B,EAAAuD,EAAAO,EAAA5D,EAAAmD,CAEA,IADAA,EAAA,MAAAlD,KAAA2F,mBAAA3F,KAAA/B,EAAA+B,KAAA2F,oBAAA,KACA,MAAAzC,GAAAnC,EAAAmC,GAEA,CAGA,IAFAnD,KACA4D,EAAA3D,KAAA/B,EACAE,EAAAiF,EAAA,EAAAvD,EAAA8D,EAAAjF,OAAAmB,EAAAuD,EAAAjF,IAAAiF,EACAF,EAAAS,EAAAxF,GACA4C,EAAAmC,IACAnD,EAAAI,KAAAhC,EAGA,OAAA4B,GAVA,OAAAC,KAAA2F,qBAcA7G,EAAAY,UAAAQ,cAAA,WACA,GAAA/B,GAAAmB,EAAAM,EAAAC,EAAAuD,EAAAxF,EAAA+F,EAAA5D,EAAAmD,CAGA,KAFAnD,KACA4D,EAAA3D,KAAA6F,oBACAzC,EAAA,EAAAvD,EAAA8D,EAAAjF,OAAAmB,EAAAuD,EAAAA,IAAA,CAIA,IAHAjF,EAAAwF,EAAAP,GACAF,EAAAlD,KAAA/B,EAAAE,GACAyB,KACAN,EAAA1B,EAAA,EAAA,GAAAA,EAAA0B,EAAA1B,GAAA,EACA,KAAA,GAAA0B,EAAA4D,IACAtD,EAAAO,KAAAb,EAAA,EAGAS,GAAAI,MAAAhC,EAAAyB,IAEA,MAAAG,IAGAjB,EAAAY,UAAAY,OAAA,SAAAwF,GACA,MAAAA,IAGAhH,EAAAY,UAAAC,gBAAA,WACA,GAAAxB,GAAAmB,EAAAM,EAAAC,EAAAC,EAAAsD,EAAAxF,EAAA+F,EAAAC,EAAA7D,CACA,IAAA,MAAAC,KAAAC,QACA,MAAAD,MAAAC,OAIA,KAFAF,KACA4D,EAAA3D,KAAAE,gBACAkD,EAAA,EAAAvD,EAAA8D,EAAAjF,OAAAmB,EAAAuD,EAAAA,IAEA,IADAQ,EAAAD,EAAAP,GAAAjF,EAAAyF,EAAA,GAAAhE,EAAAgE,EAAA,GACAhG,EAAA,EAAAkC,EAAAF,EAAAlB,OAAAoB,EAAAlC,EAAAA,IACA0B,EAAAM,EAAAhC,GACAmC,EAAAI,MAAAhC,EAAAmB,GAGA,OAAAU,MAAAC,QAAAF,GAGAjB,EAAAY,UAAAkB,KAAA,SAAAmF,GACA,GAAA9H,GAAAE,EAAAmB,CAIA,OAHAnB,GAAA4H,EAAA,GAAAzG,EAAAyG,EAAA,GACA9H,EAAA+B,KAAA/B,EAAA8E,QACA9E,EAAAE,GAAA6B,KAAAgE,YAAA,EAAA1E,EAAArB,EAAAE,GACA,GAAA6B,MAAA6E,YAAA5G,EAAA+B,KAAAyC,WAAAnD,EAAAU,KAAAO,MAAA,IAGAzB,EAAAY,UAAAkF,kBAAA,SAAAtE,GACA,MAAAA,IAGAxB,EAAAY,UAAAkD,QAAA,WACA,GAAAzE,GAAAmB,EAAAC,EAAAhB,EAAAsB,EAAAC,EAAAsD,EAAAxF,EAAA+F,EAAAC,EAAAC,EAAAX,CAGA,KAFAW,EAAA,EACAF,EAAA2B,EAAAtF,KAAA/B,GACAmF,EAAA,EAAAvD,EAAA8D,EAAAjF,OAAAmB,EAAAuD,EAAAA,IAAA,CAGA,IAFA7E,EAAAoF,EAAAP,GACAQ,GAAA,EAAA,EAAA,GAAAzF,EAAAyF,EAAA,GAAAtE,EAAAsE,EAAA,GAAArE,EAAAqE,EAAA,GACAhG,EAAA,EAAAkC,EAAAvB,EAAAG,OAAAoB,EAAAlC,EAAAA,IACAsF,EAAA3E,EAAAX,GACA0E,EAAAY,EAAA1B,KACArD,EACAmE,EAAAY,EAAA3B,MACAjC,EAEAC,GAAA4C,EAAAe,IAEA,IAAA/E,GAAA,IAAAmB,KACAuE,GAAAzE,KAAAsE,IAAA,IAAAvF,GAAAiB,KAAAsE,IAAA,IAAApE,IAEAuE,GAAAtE,EAEA,MAAAsE,IAGA/E,EAAAY,UAAAoF,SAAA,WACA,GAAAkB,GAAA5C,EAAAxF,EAAAqI,EAAAnI,EAAAoI,EAAAhD,EAAAiD,CAEA,KADArI,EAAA,GACAkI,EAAA5C,EAAA,EAAA,GAAAA,EAAA4C,IAAA5C,EAAA,CAEA,IADA+C,EAAAnG,KAAA2C,OAAAqD,GACAC,EAAArI,EAAA,EAAA,GAAAA,EAAAqI,IAAArI,EACAsI,EAAA,WACA,GAAArG,GAAA9B,EAAAwF,CAEA,KADAA,KACAxF,EAAA,EAAA8B,EAAAsG,EAAAzH,OAAAmB,EAAA9B,EAAAA,IACAmF,EAAAiD,EAAApI,GACAwF,EAAApD,KAAA,IAAA,WACA,GAAAL,GAAAsG,EAAAzC,EAAAoB,CAGA,KAFApB,EAAAhB,EAAAO,GAAA+C,GACAlB,KACAqB,EAAA,EAAAtG,EAAA6D,EAAAjF,OAAAoB,EAAAsG,EAAAA,IACA1I,EAAAiG,EAAAyC,GACArB,EAAA5E,KAAA4B,EAAArE,GAEA,OAAAqH,MACAC,KAAA,KAAA,IAEA,OAAAzB,MAEAzF,GAAAoI,EAAAlB,KAAA,QACA,EAAAgB,GAAA,EAAAC,KACAnI,GAAA,KAGA,GAAAkI,IACAlI,GAAA,iCAGA,MAAAA,IAGAgB,KAIAF,EAAAJ,SACAiD,EAAAA,EACAD,EAAAA,EACAD,EAAAA,EACAK,IAAAA,EACA9C,kBAAAA,KFmaGmG,aAAa,EAAEoB,oBAAoB,IAAIC,GAAG,SAASpI,EAAQU,EAAOJ,GG3pBrE,GAAA6C,GAAAC,EAAAzC,EAAAW,CAEAA,IAAA,MAAA,OAAA6B,EAAA7B,EAAA,GAAA8B,EAAA9B,EAAA,GAEAX,EAAA,WACA,QAAAA,GAAA0B,GACAP,KAAAO,MAAA,MAAAA,EAAAA,EAAAgG,EAAAA,EACAvG,KAAAwG,UAAAnF,EAwEA,MArEAxC,GAAAa,UAAAsB,WAAA,SAAAyF,GACA,GAAAhF,GAAAiF,EAAAjH,CAGA,OAFAO,MAAAwG,UAAAC,EAAA9B,YACAlF,EAAAO,KAAA2G,QAAAF,GAAAhF,EAAAhC,EAAA,GAAAiH,EAAAjH,EAAA,GACAiH,GAGA7H,EAAAa,UAAAiH,QAAA,SAAAF,EAAAG,EAAAC,EAAAC,GACA,GAAA/F,EAcA,OAbA,OAAA6F,IACAA,IAAAL,EAAAA,IAEA,MAAAM,IACAA,IAAAN,EAAAA,IAEA,MAAAO,IACAA,EAAA,GAEA/F,EAAA0F,EAAA1F,aACAA,GAAA0F,EAAA9B,cAAA3E,KAAAwG,aACAM,EAEAA,EAAA9G,KAAAO,OAAAQ,GACA0F,EAAA7D,UAAA,MACA6D,EAAA9B,cAAAtD,EACArB,KAAA+G,KAAAN,EAAAG,EAAAC,EAAAC,GAEA9G,KAAAgH,KAAAP,EAAAG,EAAAC,EAAAC,IAIAjI,EAAAa,UAAAqH,KAAA,SAAAN,EAAAG,EAAAC,EAAAC,GACA,GAAArF,GAAAxD,EAAAqC,EAAAnC,EAAA0B,EAAAoH,EAAAxH,EAAAkE,EAAAC,EAAAsD,EAAAC,EAAAjE,CAGA,KAFAzD,KAAA8G,EAAAA,GAAA,MAAArD,EAAAzD,EAAA,GAAAxB,EAAAwB,EAAA,GACAkE,EAAA8C,EAAA9G,kBACAxB,EAAA,EAAA0B,EAAA8D,EAAAjF,OAAAmB,EAAA1B,EAAAA,IAAA,CAOA,GANAmC,EAAAqD,EAAAxF,GACAgJ,EAAAV,EAAA7F,KAAAN,GACAsD,EAAA5D,KAAA2G,QAAAQ,EAAAP,EAAAC,EAAAC,GAAAG,EAAArD,EAAA,GAAAnC,EAAAmC,EAAA,GACAqD,EAAA/D,IACAgE,GAAAD,EAAA3G,GAAA4C,EAAAgE,EAAA,GAAAjJ,EAAAiJ,EAAA,IAEAhE,GAAA2D,EACA,OAAA3D,EAAAjF,EAEA2I,GAAAxH,KAAAgI,IAAAR,EAAA1D,GAEA,OAAAA,EAAAjF,IAGAY,EAAAa,UAAAsH,KAAA,SAAAP,EAAAG,EAAAC,EAAAC,GACA,GAAArF,GAAAxD,EAAAqC,EAAAnC,EAAA0B,EAAAoH,EAAAxH,EAAAkE,EAAAC,EAAAsD,EAAAC,EAAAjE,CAGA,KAFAzD,KAAA8G,EAAAA,GAAA,MAAArD,EAAAzD,EAAA,GAAAxB,EAAAwB,EAAA,GACAkE,EAAA8C,EAAA9G,kBACAxB,EAAA,EAAA0B,EAAA8D,EAAAjF,OAAAmB,EAAA1B,EAAAA,IAAA,CAOA,GANAmC,EAAAqD,EAAAxF,GACAgJ,EAAAV,EAAA7F,KAAAN,GACAsD,EAAA5D,KAAA2G,QAAAQ,EAAAP,EAAAC,EAAAC,GAAAG,EAAArD,EAAA,GAAAnC,EAAAmC,EAAA,GACAV,EAAA+D,IACAC,GAAAD,EAAA3G,GAAA4C,EAAAgE,EAAA,GAAAjJ,EAAAiJ,EAAA,IAEAN,GAAA1D,EACA,OAAAA,EAAAjF,EAEA4I,GAAAzH,KAAAiI,IAAAR,EAAA3D,GAEA,OAAAA,EAAAjF,IAGAY,KAIAD,EAAAJ,SACA6C,IAAAA,EACAC,IAAAA,EACAzC,aAAAA,aH+pBW","file":"minimax-worker.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","{MinimaxAgent} = require 'aye-aye'\n{UltimateTicTacToe} = require 'aye-aye/lib/games/ultimate-tic-tac-toe'\n\nplayer = null\ngame = null\n\n# returns random j such that i ≤ j < n\nrandom = (i, n) -> Math.floor(Math.random()*(n-i)+i)\n\n# Fisher–Yates\nshuffle = (a) ->\n  n = a.length\n  return a if n is 0\n  for i in [0...n-1]\n    j = random i, n\n    [a[i],a[j]] = [a[j],a[i]]\n  a\n\nUltimateTicTacToe::possibleActions = ->\n  return @actions if @actions?\n  res = []\n  for [i, js] in @openPositions()\n    for j in js\n      res.push [i, j]\n  @actions = shuffle res\n\nself.onmessage = (e) ->\n  switch e.data.command\n    when 'setup'\n      game = new UltimateTicTacToe\n      depth = e.data.args.depth\n      player = computerPlayer depth\n    when 'play'\n      lastAction = e.data.args.lastAction\n      game = game.play lastAction if lastAction?\n      action = player.play game\n      game = game.play action\n      self.postMessage {action}\n\ncomputerPlayer = (depth = 3) ->\n  agent = new MinimaxAgent depth\n  play: (game) ->\n    return if game.isTerminal()\n    agent.nextAction game\n","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nvar MinimaxAgent, UltimateTicTacToe, computerPlayer, game, player, random, shuffle;\n\nMinimaxAgent = require('aye-aye').MinimaxAgent;\n\nUltimateTicTacToe = require('aye-aye/lib/games/ultimate-tic-tac-toe').UltimateTicTacToe;\n\nplayer = null;\n\ngame = null;\n\nrandom = function(i, n) {\n  return Math.floor(Math.random() * (n - i) + i);\n};\n\nshuffle = function(a) {\n  var i, j, k, n, ref, ref1;\n  n = a.length;\n  if (n === 0) {\n    return a;\n  }\n  for (i = k = 0, ref = n - 1; 0 <= ref ? k < ref : k > ref; i = 0 <= ref ? ++k : --k) {\n    j = random(i, n);\n    ref1 = [a[j], a[i]], a[i] = ref1[0], a[j] = ref1[1];\n  }\n  return a;\n};\n\nUltimateTicTacToe.prototype.possibleActions = function() {\n  var i, j, js, k, l, len, len1, ref, ref1, res;\n  if (this.actions != null) {\n    return this.actions;\n  }\n  res = [];\n  ref = this.openPositions();\n  for (k = 0, len = ref.length; k < len; k++) {\n    ref1 = ref[k], i = ref1[0], js = ref1[1];\n    for (l = 0, len1 = js.length; l < len1; l++) {\n      j = js[l];\n      res.push([i, j]);\n    }\n  }\n  return this.actions = shuffle(res);\n};\n\nself.onmessage = function(e) {\n  var action, depth, lastAction;\n  switch (e.data.command) {\n    case 'setup':\n      game = new UltimateTicTacToe;\n      depth = e.data.args.depth;\n      return player = computerPlayer(depth);\n    case 'play':\n      lastAction = e.data.args.lastAction;\n      if (lastAction != null) {\n        game = game.play(lastAction);\n      }\n      action = player.play(game);\n      game = game.play(action);\n      return self.postMessage({\n        action: action\n      });\n  }\n};\n\ncomputerPlayer = function(depth) {\n  var agent;\n  if (depth == null) {\n    depth = 3;\n  }\n  agent = new MinimaxAgent(depth);\n  return {\n    play: function(game) {\n      if (game.isTerminal()) {\n        return;\n      }\n      return agent.nextAction(game);\n    }\n  };\n};\n\n\n},{\"aye-aye\":4,\"aye-aye/lib/games/ultimate-tic-tac-toe\":3}],2:[function(require,module,exports){\nvar BinTicTacToe, MAX, MIN, O, X, _, allPlays, at, bin, changedOn, columns, decode, diagonals, discountedUtility, empty, evaluate, evaluateCache, isFull, isTerminal, isWin, lines, masks, openPositions, opponent, positions, ref, ref1, rows, utility, winOn, γ,\n  slice = [].slice;\n\nref = require('../minimax'), MAX = ref.MAX, MIN = ref.MIN;\n\nref1 = [0x0, 0x1, 0x2], _ = ref1[0], X = ref1[1], O = ref1[2];\n\nopponent = function(W) {\n  return ~W & 0x3;\n};\n\ndecode = function(W) {\n  return {\n    0x0: ' ',\n    0x1: 'X',\n    0x2: 'O'\n  }[W] || (function() {\n    throw new Error(W);\n  })();\n};\n\nempty = 0x0;\n\nbin = function(a) {\n  var e, i, j, len, res;\n  res = 0;\n  for (i = j = 0, len = a.length; j < len; i = ++j) {\n    e = a[i];\n    res |= e << (i * 2);\n  }\n  return res;\n};\n\nat = function(v, i) {\n  return v >> (i * 2) & 0x3;\n};\n\nrows = function(v) {\n  return [[at(v, 0), at(v, 1), at(v, 2)], [at(v, 3), at(v, 4), at(v, 5)], [at(v, 6), at(v, 7), at(v, 8)]];\n};\n\ncolumns = function(v) {\n  return [[at(v, 0), at(v, 3), at(v, 6)], [at(v, 1), at(v, 4), at(v, 7)], [at(v, 2), at(v, 5), at(v, 8)]];\n};\n\ndiagonals = function(v) {\n  return [[at(v, 0), at(v, 4), at(v, 8)], [at(v, 2), at(v, 4), at(v, 6)]];\n};\n\nlines = function(v) {\n  return slice.call(rows(v)).concat(slice.call(columns(v)), slice.call(diagonals(v)));\n};\n\nisFull = function(v) {\n  var i, j;\n  for (i = j = 0; j < 18; i = j += 2) {\n    if ((0x3 << i & v) === 0) {\n      return false;\n    }\n  }\n  return true;\n};\n\nmasks = {\n  0x1: [0x15, 0x540, 0x15000, 0x1041, 0x4104, 0x10410, 0x10101, 0x1110],\n  0x2: [0x2a, 0xa80, 0x2a000, 0x2082, 0x8208, 0x20820, 0x20202, 0x2220]\n};\n\npositions = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\nisWin = function(v, W) {\n  var j, len, m, ms;\n  ms = masks[W] || (function() {\n    throw new Error(W);\n  })();\n  for (j = 0, len = ms.length; j < len; j++) {\n    m = ms[j];\n    if ((m & v) === m) {\n      return true;\n    }\n  }\n  return false;\n};\n\nwinOn = function(v) {\n  var w;\n  w = function(W) {\n    var i, j, len, m, ms;\n    ms = masks[W];\n    for (i = j = 0, len = ms.length; j < len; i = ++j) {\n      m = ms[i];\n      if ((m & v) === m) {\n        return positions[i];\n      }\n    }\n    return null;\n  };\n  return (w(X)) || (w(O)) || [];\n};\n\nisTerminal = function(v) {\n  return (isFull(v)) || (isWin(v, X)) || (isWin(v, O));\n};\n\nopenPositions = function(v) {\n  var i, j, results;\n  results = [];\n  for (i = j = 0; j < 9; i = ++j) {\n    if ((0x3 << (i * 2) & v) === 0) {\n      results.push(i);\n    }\n  }\n  return results;\n};\n\nallPlays = function(v, W) {\n  var i, j, res;\n  res = [];\n  for (i = j = 0; j < 18; i = j += 2) {\n    if ((0x3 << i & v) === 0) {\n      res.push(W << i | v);\n    }\n  }\n  return res;\n};\n\nchangedOn = function(v1, v2) {\n  var i, j;\n  for (i = j = 0; j < 18; i = ++j) {\n    if ((0x3 << (i * 2) & v1) !== (0x3 << (i * 2) & v2)) {\n      return i;\n    }\n  }\n  return null;\n};\n\nγ = 0.1;\n\ndiscountedUtility = function(v, depth) {\n  if (depth == null) {\n    depth = 0;\n  }\n  return Math.pow(γ, depth) * utility(v);\n};\n\nutility = function(v) {\n  if (isWin(v, X)) {\n    return 2000;\n  } else if (isWin(v, O)) {\n    return -2000;\n  } else if (isFull(v)) {\n    return 0;\n  } else {\n    return evaluate(v);\n  }\n};\n\nevaluateCache = {};\n\nevaluate = function(v) {\n  var j, k, l, len, len1, o, ref2, ref3, score, w, x;\n  if (evaluateCache[v] != null) {\n    return evaluateCache[v];\n  }\n  score = 0;\n  ref2 = lines(v);\n  for (j = 0, len = ref2.length; j < len; j++) {\n    l = ref2[j];\n    ref3 = [0, 0], x = ref3[0], o = ref3[1];\n    for (k = 0, len1 = l.length; k < len1; k++) {\n      w = l[k];\n      if (w === X) {\n        ++x;\n      }\n      if (w === O) {\n        ++o;\n      }\n    }\n    if (x === 0 || o === 0) {\n      score += Math.pow(10, x) - Math.pow(10, o);\n    }\n  }\n  return evaluateCache[v] = score;\n};\n\nBinTicTacToe = (function() {\n  BinTicTacToe.create = function() {\n    var a, args;\n    a = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    if (a == null) {\n      a = [_, _, _, _, _, _, _, _, _];\n    }\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(BinTicTacToe, [bin(a)].concat(slice.call(args)), function(){});\n  };\n\n  function BinTicTacToe(value1, nextPlayer, depth1) {\n    this.value = value1 != null ? value1 : empty;\n    this.nextPlayer = nextPlayer != null ? nextPlayer : X;\n    this.depth = depth1 != null ? depth1 : 0;\n  }\n\n  BinTicTacToe.prototype.at = function(i) {\n    return at(this.value, i);\n  };\n\n  BinTicTacToe.prototype.rows = function() {\n    return rows(this.value);\n  };\n\n  BinTicTacToe.prototype.columns = function() {\n    return columns(this.value);\n  };\n\n  BinTicTacToe.prototype.diagonals = function() {\n    return diagonals(this.value);\n  };\n\n  BinTicTacToe.prototype.lines = function() {\n    return lines(this.value);\n  };\n\n  BinTicTacToe.prototype.isFull = function() {\n    return isFull(this.value);\n  };\n\n  BinTicTacToe.prototype.isWin = function(W) {\n    return isWin(this.value, W);\n  };\n\n  BinTicTacToe.prototype.winOn = function() {\n    return winOn(this.value);\n  };\n\n  BinTicTacToe.prototype.isTerminal = function() {\n    return isTerminal(this.value);\n  };\n\n  BinTicTacToe.prototype.nextAgent = function() {\n    if (this.nextPlayer === X) {\n      return MAX;\n    } else {\n      return MIN;\n    }\n  };\n\n  BinTicTacToe.prototype.openPositions = function() {\n    return openPositions(this.value);\n  };\n\n  BinTicTacToe.prototype.possibleActions = function() {\n    return allPlays(this.value, this.nextPlayer);\n  };\n\n  BinTicTacToe.prototype.action = function(i) {\n    return this.nextPlayer << (i * 2) | this.value;\n  };\n\n  BinTicTacToe.prototype.positionForAction = function(action) {\n    return changedOn(this.value, action);\n  };\n\n  BinTicTacToe.prototype.play = function(value) {\n    return new this.constructor(value, this.opponent(), this.depth + 1);\n  };\n\n  BinTicTacToe.prototype.utility = function() {\n    return utility(this.value);\n  };\n\n  BinTicTacToe.prototype.opponent = function(W) {\n    if (W == null) {\n      W = this.nextPlayer;\n    }\n    return opponent(W);\n  };\n\n  BinTicTacToe.prototype.toString = function() {\n    var e, r;\n    return ((function() {\n      var j, len, ref2, results;\n      ref2 = this.rows();\n      results = [];\n      for (j = 0, len = ref2.length; j < len; j++) {\n        r = ref2[j];\n        results.push(\"|\" + (((function() {\n          var k, len1, results1;\n          results1 = [];\n          for (k = 0, len1 = r.length; k < len1; k++) {\n            e = r[k];\n            results1.push(decode(e));\n          }\n          return results1;\n        })()).join('|')) + \"|\");\n      }\n      return results;\n    }).call(this)).join(\"\\n\");\n  };\n\n  return BinTicTacToe;\n\n})();\n\nmodule.exports = {\n  _: _,\n  X: X,\n  O: O,\n  opponent: opponent,\n  decode: decode,\n  empty: empty,\n  bin: bin,\n  at: at,\n  rows: rows,\n  columns: columns,\n  diagonals: diagonals,\n  lines: lines,\n  isFull: isFull,\n  isWin: isWin,\n  isTerminal: isTerminal,\n  openPositions: openPositions,\n  allPlays: allPlays,\n  changedOn: changedOn,\n  winOn: winOn,\n  discountedUtility: discountedUtility,\n  utility: utility,\n  evaluate: evaluate,\n  BinTicTacToe: BinTicTacToe\n};\n\n},{\"../minimax\":4}],3:[function(require,module,exports){\nvar BinTicTacToe, MAX, MIN, O, UltimateTicTacToe, X, _, at, bin, columns, columnsU, decode, diagonals, diagonalsU, e, empty, evaluate, isTerminal, isWin, isWinU, lines, linesU, ref, ref1, rows, rowsU, ultimateEmpty, winOn,\n  slice = [].slice;\n\nref = require('../minimax'), MAX = ref.MAX, MIN = ref.MIN;\n\nref1 = require('./bin-tic-tac-toe'), _ = ref1._, X = ref1.X, O = ref1.O, decode = ref1.decode, empty = ref1.empty, bin = ref1.bin, at = ref1.at, rows = ref1.rows, columns = ref1.columns, diagonals = ref1.diagonals, lines = ref1.lines, isWin = ref1.isWin, winOn = ref1.winOn, isTerminal = ref1.isTerminal, evaluate = ref1.evaluate, BinTicTacToe = ref1.BinTicTacToe;\n\ne = empty;\n\nultimateEmpty = [e, e, e, e, e, e, e, e, e];\n\nrowsU = function(a) {\n  var i, m, ref2, results;\n  results = [];\n  for (i = m = 0, ref2 = 3 * 3; m < ref2; i = m += 3) {\n    results.push(a.slice(i, i + 3));\n  }\n  return results;\n};\n\ncolumnsU = function(a) {\n  var i, m, results;\n  results = [];\n  for (i = m = 0; m < 3; i = ++m) {\n    results.push([a[i], a[i + 3], a[i + 6]]);\n  }\n  return results;\n};\n\ndiagonalsU = function(a) {\n  return [[a[0], a[4], a[8]], [a[2], a[4], a[6]]];\n};\n\nlinesU = function(a) {\n  return slice.call(rowsU(a)).concat(slice.call(columnsU(a)), slice.call(diagonalsU(a)));\n};\n\nisWinU = function(a, W) {\n  var l, len, m, ref2;\n  ref2 = linesU(a);\n  for (m = 0, len = ref2.length; m < len; m++) {\n    l = ref2[m];\n    if (l.every(function(v) {\n      return isWin(v, W);\n    })) {\n      return true;\n    }\n  }\n  return false;\n};\n\nUltimateTicTacToe = (function() {\n  function UltimateTicTacToe(a1, nextPlayer, lastPlayedPosition, depth) {\n    this.a = a1 != null ? a1 : ultimateEmpty;\n    this.nextPlayer = nextPlayer != null ? nextPlayer : X;\n    this.lastPlayedPosition = lastPlayedPosition != null ? lastPlayedPosition : 4;\n    this.depth = depth != null ? depth : 0;\n  }\n\n  UltimateTicTacToe.prototype.at = function(i, j) {\n    return at(this.a[i], j);\n  };\n\n  UltimateTicTacToe.prototype.rows = function() {\n    return rowsU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.columns = function() {\n    return columnsU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.diagonals = function() {\n    return diagonalsU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.lines = function() {\n    return linesU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.isTerminal = function() {\n    return (this.possibleActions().length === 0) || (this.isWin(X)) || (this.isWin(O));\n  };\n\n  UltimateTicTacToe.prototype.isWin = function(W) {\n    return isWinU(this.a, W);\n  };\n\n  UltimateTicTacToe.prototype.winOn = function(i) {\n    return winOn(this.a[i]);\n  };\n\n  UltimateTicTacToe.prototype.nextAgent = function() {\n    if (this.nextPlayer === X) {\n      return MAX;\n    } else {\n      return MIN;\n    }\n  };\n\n  UltimateTicTacToe.prototype.opponent = function(who) {\n    if (who == null) {\n      who = this.nextPlayer;\n    }\n    if (who === X) {\n      return O;\n    } else {\n      return X;\n    }\n  };\n\n  UltimateTicTacToe.prototype.boardsForNextPlay = function() {\n    var i, len, m, ref2, res, v;\n    v = this.lastPlayedPosition != null ? this.a[this.lastPlayedPosition] : null;\n    if ((v != null) && !(isTerminal(v))) {\n      return [this.lastPlayedPosition];\n    } else {\n      res = [];\n      ref2 = this.a;\n      for (i = m = 0, len = ref2.length; m < len; i = ++m) {\n        v = ref2[i];\n        if (!isTerminal(v)) {\n          res.push(i);\n        }\n      }\n      return res;\n    }\n  };\n\n  UltimateTicTacToe.prototype.openPositions = function() {\n    var i, j, js, len, m, n, ref2, res, v;\n    res = [];\n    ref2 = this.boardsForNextPlay();\n    for (m = 0, len = ref2.length; m < len; m++) {\n      i = ref2[m];\n      v = this.a[i];\n      js = [];\n      for (j = n = 0; n < 18; j = n += 2) {\n        if ((0x3 << j & v) === 0) {\n          js.push(j / 2);\n        }\n      }\n      res.push([i, js]);\n    }\n    return res;\n  };\n\n  UltimateTicTacToe.prototype.action = function(ij) {\n    return ij;\n  };\n\n  UltimateTicTacToe.prototype.possibleActions = function() {\n    var i, j, js, len, len1, m, n, ref2, ref3, res;\n    if (this.actions != null) {\n      return this.actions;\n    }\n    res = [];\n    ref2 = this.openPositions();\n    for (m = 0, len = ref2.length; m < len; m++) {\n      ref3 = ref2[m], i = ref3[0], js = ref3[1];\n      for (n = 0, len1 = js.length; n < len1; n++) {\n        j = js[n];\n        res.push([i, j]);\n      }\n    }\n    return this.actions = res;\n  };\n\n  UltimateTicTacToe.prototype.play = function(arg) {\n    var a, i, j;\n    i = arg[0], j = arg[1];\n    a = this.a.slice();\n    a[i] = this.nextPlayer << (j * 2) | a[i];\n    return new this.constructor(a, this.opponent(), j, this.depth + 1);\n  };\n\n  UltimateTicTacToe.prototype.positionForAction = function(action) {\n    return action;\n  };\n\n  UltimateTicTacToe.prototype.utility = function() {\n    var i, j, k, l, len, len1, m, n, ref2, ref3, score, v;\n    score = 0;\n    ref2 = linesU(this.a);\n    for (m = 0, len = ref2.length; m < len; m++) {\n      l = ref2[m];\n      ref3 = [0, 0, 0], i = ref3[0], j = ref3[1], k = ref3[2];\n      for (n = 0, len1 = l.length; n < len1; n++) {\n        v = l[n];\n        if (isWin(v, X)) {\n          ++i;\n        } else if (isWin(v, O)) {\n          ++j;\n        }\n        k += evaluate(v);\n      }\n      if (i === 0 || j === 0) {\n        score += Math.pow(1000, i) - Math.pow(1000, j);\n      }\n      score += k;\n    }\n    return score;\n  };\n\n  UltimateTicTacToe.prototype.toString = function() {\n    var bri, m, n, ri, s, strRows, v, vs;\n    s = '';\n    for (bri = m = 0; m <= 2; bri = ++m) {\n      vs = this.rows()[bri];\n      for (ri = n = 0; n <= 2; ri = ++n) {\n        strRows = (function() {\n          var len, o, results;\n          results = [];\n          for (o = 0, len = vs.length; o < len; o++) {\n            v = vs[o];\n            results.push(\"|\" + (((function() {\n              var len1, p, ref2, results1;\n              ref2 = (rows(v))[ri];\n              results1 = [];\n              for (p = 0, len1 = ref2.length; p < len1; p++) {\n                e = ref2[p];\n                results1.push(decode(e));\n              }\n              return results1;\n            })()).join('|')) + \"|\");\n          }\n          return results;\n        })();\n        s += strRows.join(' ║ ');\n        if (bri < 2 || ri < 2) {\n          s += '\\n';\n        }\n      }\n      if (bri < 2) {\n        s += '════════╬═════════╬════════\\n';\n      }\n    }\n    return s;\n  };\n\n  return UltimateTicTacToe;\n\n})();\n\nmodule.exports = {\n  _: _,\n  X: X,\n  O: O,\n  bin: bin,\n  UltimateTicTacToe: UltimateTicTacToe\n};\n\n},{\"../minimax\":4,\"./bin-tic-tac-toe\":2}],4:[function(require,module,exports){\nvar MAX, MIN, MinimaxAgent, ref;\n\nref = ['MAX', 'MIN'], MAX = ref[0], MIN = ref[1];\n\nMinimaxAgent = (function() {\n  function MinimaxAgent(depth) {\n    this.depth = depth != null ? depth : Infinity;\n    this.rootAgent = MAX;\n  }\n\n  MinimaxAgent.prototype.nextAction = function(state) {\n    var _, bestAction, ref1;\n    this.rootAgent = state.nextAgent();\n    ref1 = this.minimax(state), _ = ref1[0], bestAction = ref1[1];\n    return bestAction;\n  };\n\n  MinimaxAgent.prototype.minimax = function(state, α, β, ply) {\n    var isTerminal;\n    if (α == null) {\n      α = -Infinity;\n    }\n    if (β == null) {\n      β = +Infinity;\n    }\n    if (ply == null) {\n      ply = 0;\n    }\n    isTerminal = state.isTerminal();\n    if (!isTerminal && state.nextAgent() === this.rootAgent) {\n      ++ply;\n    }\n    if (ply > this.depth || isTerminal) {\n      return [state.utility(), null];\n    } else if (state.nextAgent() === MAX) {\n      return this.maxi(state, α, β, ply);\n    } else {\n      return this.mini(state, α, β, ply);\n    }\n  };\n\n  MinimaxAgent.prototype.maxi = function(state, α, β, ply) {\n    var _, a, action, i, len, nextValue, ref1, ref2, ref3, ref4, successor, v;\n    ref1 = [-Infinity, null], v = ref1[0], a = ref1[1];\n    ref2 = state.possibleActions();\n    for (i = 0, len = ref2.length; i < len; i++) {\n      action = ref2[i];\n      successor = state.play(action);\n      ref3 = this.minimax(successor, α, β, ply), nextValue = ref3[0], _ = ref3[1];\n      if (nextValue > v) {\n        ref4 = [nextValue, action], v = ref4[0], a = ref4[1];\n      }\n      if (v >= β) {\n        return [v, a];\n      }\n      α = Math.max(α, v);\n    }\n    return [v, a];\n  };\n\n  MinimaxAgent.prototype.mini = function(state, α, β, ply) {\n    var _, a, action, i, len, nextValue, ref1, ref2, ref3, ref4, successor, v;\n    ref1 = [+Infinity, null], v = ref1[0], a = ref1[1];\n    ref2 = state.possibleActions();\n    for (i = 0, len = ref2.length; i < len; i++) {\n      action = ref2[i];\n      successor = state.play(action);\n      ref3 = this.minimax(successor, α, β, ply), nextValue = ref3[0], _ = ref3[1];\n      if (nextValue < v) {\n        ref4 = [nextValue, action], v = ref4[0], a = ref4[1];\n      }\n      if (v <= α) {\n        return [v, a];\n      }\n      β = Math.min(β, v);\n    }\n    return [v, a];\n  };\n\n  return MinimaxAgent;\n\n})();\n\nmodule.exports = {\n  MAX: MAX,\n  MIN: MIN,\n  MinimaxAgent: MinimaxAgent\n};\n\n},{}]},{},[1])\n\n","var BinTicTacToe, MAX, MIN, O, X, _, allPlays, at, bin, changedOn, columns, decode, diagonals, discountedUtility, empty, evaluate, evaluateCache, isFull, isTerminal, isWin, lines, masks, openPositions, opponent, positions, ref, ref1, rows, utility, winOn, γ,\n  slice = [].slice;\n\nref = require('../minimax'), MAX = ref.MAX, MIN = ref.MIN;\n\nref1 = [0x0, 0x1, 0x2], _ = ref1[0], X = ref1[1], O = ref1[2];\n\nopponent = function(W) {\n  return ~W & 0x3;\n};\n\ndecode = function(W) {\n  return {\n    0x0: ' ',\n    0x1: 'X',\n    0x2: 'O'\n  }[W] || (function() {\n    throw new Error(W);\n  })();\n};\n\nempty = 0x0;\n\nbin = function(a) {\n  var e, i, j, len, res;\n  res = 0;\n  for (i = j = 0, len = a.length; j < len; i = ++j) {\n    e = a[i];\n    res |= e << (i * 2);\n  }\n  return res;\n};\n\nat = function(v, i) {\n  return v >> (i * 2) & 0x3;\n};\n\nrows = function(v) {\n  return [[at(v, 0), at(v, 1), at(v, 2)], [at(v, 3), at(v, 4), at(v, 5)], [at(v, 6), at(v, 7), at(v, 8)]];\n};\n\ncolumns = function(v) {\n  return [[at(v, 0), at(v, 3), at(v, 6)], [at(v, 1), at(v, 4), at(v, 7)], [at(v, 2), at(v, 5), at(v, 8)]];\n};\n\ndiagonals = function(v) {\n  return [[at(v, 0), at(v, 4), at(v, 8)], [at(v, 2), at(v, 4), at(v, 6)]];\n};\n\nlines = function(v) {\n  return slice.call(rows(v)).concat(slice.call(columns(v)), slice.call(diagonals(v)));\n};\n\nisFull = function(v) {\n  var i, j;\n  for (i = j = 0; j < 18; i = j += 2) {\n    if ((0x3 << i & v) === 0) {\n      return false;\n    }\n  }\n  return true;\n};\n\nmasks = {\n  0x1: [0x15, 0x540, 0x15000, 0x1041, 0x4104, 0x10410, 0x10101, 0x1110],\n  0x2: [0x2a, 0xa80, 0x2a000, 0x2082, 0x8208, 0x20820, 0x20202, 0x2220]\n};\n\npositions = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\nisWin = function(v, W) {\n  var j, len, m, ms;\n  ms = masks[W] || (function() {\n    throw new Error(W);\n  })();\n  for (j = 0, len = ms.length; j < len; j++) {\n    m = ms[j];\n    if ((m & v) === m) {\n      return true;\n    }\n  }\n  return false;\n};\n\nwinOn = function(v) {\n  var w;\n  w = function(W) {\n    var i, j, len, m, ms;\n    ms = masks[W];\n    for (i = j = 0, len = ms.length; j < len; i = ++j) {\n      m = ms[i];\n      if ((m & v) === m) {\n        return positions[i];\n      }\n    }\n    return null;\n  };\n  return (w(X)) || (w(O)) || [];\n};\n\nisTerminal = function(v) {\n  return (isFull(v)) || (isWin(v, X)) || (isWin(v, O));\n};\n\nopenPositions = function(v) {\n  var i, j, results;\n  results = [];\n  for (i = j = 0; j < 9; i = ++j) {\n    if ((0x3 << (i * 2) & v) === 0) {\n      results.push(i);\n    }\n  }\n  return results;\n};\n\nallPlays = function(v, W) {\n  var i, j, res;\n  res = [];\n  for (i = j = 0; j < 18; i = j += 2) {\n    if ((0x3 << i & v) === 0) {\n      res.push(W << i | v);\n    }\n  }\n  return res;\n};\n\nchangedOn = function(v1, v2) {\n  var i, j;\n  for (i = j = 0; j < 18; i = ++j) {\n    if ((0x3 << (i * 2) & v1) !== (0x3 << (i * 2) & v2)) {\n      return i;\n    }\n  }\n  return null;\n};\n\nγ = 0.1;\n\ndiscountedUtility = function(v, depth) {\n  if (depth == null) {\n    depth = 0;\n  }\n  return Math.pow(γ, depth) * utility(v);\n};\n\nutility = function(v) {\n  if (isWin(v, X)) {\n    return 2000;\n  } else if (isWin(v, O)) {\n    return -2000;\n  } else if (isFull(v)) {\n    return 0;\n  } else {\n    return evaluate(v);\n  }\n};\n\nevaluateCache = {};\n\nevaluate = function(v) {\n  var j, k, l, len, len1, o, ref2, ref3, score, w, x;\n  if (evaluateCache[v] != null) {\n    return evaluateCache[v];\n  }\n  score = 0;\n  ref2 = lines(v);\n  for (j = 0, len = ref2.length; j < len; j++) {\n    l = ref2[j];\n    ref3 = [0, 0], x = ref3[0], o = ref3[1];\n    for (k = 0, len1 = l.length; k < len1; k++) {\n      w = l[k];\n      if (w === X) {\n        ++x;\n      }\n      if (w === O) {\n        ++o;\n      }\n    }\n    if (x === 0 || o === 0) {\n      score += Math.pow(10, x) - Math.pow(10, o);\n    }\n  }\n  return evaluateCache[v] = score;\n};\n\nBinTicTacToe = (function() {\n  BinTicTacToe.create = function() {\n    var a, args;\n    a = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    if (a == null) {\n      a = [_, _, _, _, _, _, _, _, _];\n    }\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(BinTicTacToe, [bin(a)].concat(slice.call(args)), function(){});\n  };\n\n  function BinTicTacToe(value1, nextPlayer, depth1) {\n    this.value = value1 != null ? value1 : empty;\n    this.nextPlayer = nextPlayer != null ? nextPlayer : X;\n    this.depth = depth1 != null ? depth1 : 0;\n  }\n\n  BinTicTacToe.prototype.at = function(i) {\n    return at(this.value, i);\n  };\n\n  BinTicTacToe.prototype.rows = function() {\n    return rows(this.value);\n  };\n\n  BinTicTacToe.prototype.columns = function() {\n    return columns(this.value);\n  };\n\n  BinTicTacToe.prototype.diagonals = function() {\n    return diagonals(this.value);\n  };\n\n  BinTicTacToe.prototype.lines = function() {\n    return lines(this.value);\n  };\n\n  BinTicTacToe.prototype.isFull = function() {\n    return isFull(this.value);\n  };\n\n  BinTicTacToe.prototype.isWin = function(W) {\n    return isWin(this.value, W);\n  };\n\n  BinTicTacToe.prototype.winOn = function() {\n    return winOn(this.value);\n  };\n\n  BinTicTacToe.prototype.isTerminal = function() {\n    return isTerminal(this.value);\n  };\n\n  BinTicTacToe.prototype.nextAgent = function() {\n    if (this.nextPlayer === X) {\n      return MAX;\n    } else {\n      return MIN;\n    }\n  };\n\n  BinTicTacToe.prototype.openPositions = function() {\n    return openPositions(this.value);\n  };\n\n  BinTicTacToe.prototype.possibleActions = function() {\n    return allPlays(this.value, this.nextPlayer);\n  };\n\n  BinTicTacToe.prototype.action = function(i) {\n    return this.nextPlayer << (i * 2) | this.value;\n  };\n\n  BinTicTacToe.prototype.positionForAction = function(action) {\n    return changedOn(this.value, action);\n  };\n\n  BinTicTacToe.prototype.play = function(value) {\n    return new this.constructor(value, this.opponent(), this.depth + 1);\n  };\n\n  BinTicTacToe.prototype.utility = function() {\n    return utility(this.value);\n  };\n\n  BinTicTacToe.prototype.opponent = function(W) {\n    if (W == null) {\n      W = this.nextPlayer;\n    }\n    return opponent(W);\n  };\n\n  BinTicTacToe.prototype.toString = function() {\n    var e, r;\n    return ((function() {\n      var j, len, ref2, results;\n      ref2 = this.rows();\n      results = [];\n      for (j = 0, len = ref2.length; j < len; j++) {\n        r = ref2[j];\n        results.push(\"|\" + (((function() {\n          var k, len1, results1;\n          results1 = [];\n          for (k = 0, len1 = r.length; k < len1; k++) {\n            e = r[k];\n            results1.push(decode(e));\n          }\n          return results1;\n        })()).join('|')) + \"|\");\n      }\n      return results;\n    }).call(this)).join(\"\\n\");\n  };\n\n  return BinTicTacToe;\n\n})();\n\nmodule.exports = {\n  _: _,\n  X: X,\n  O: O,\n  opponent: opponent,\n  decode: decode,\n  empty: empty,\n  bin: bin,\n  at: at,\n  rows: rows,\n  columns: columns,\n  diagonals: diagonals,\n  lines: lines,\n  isFull: isFull,\n  isWin: isWin,\n  isTerminal: isTerminal,\n  openPositions: openPositions,\n  allPlays: allPlays,\n  changedOn: changedOn,\n  winOn: winOn,\n  discountedUtility: discountedUtility,\n  utility: utility,\n  evaluate: evaluate,\n  BinTicTacToe: BinTicTacToe\n};\n","var BinTicTacToe, MAX, MIN, O, UltimateTicTacToe, X, _, at, bin, columns, columnsU, decode, diagonals, diagonalsU, e, empty, evaluate, isTerminal, isWin, isWinU, lines, linesU, ref, ref1, rows, rowsU, ultimateEmpty, winOn,\n  slice = [].slice;\n\nref = require('../minimax'), MAX = ref.MAX, MIN = ref.MIN;\n\nref1 = require('./bin-tic-tac-toe'), _ = ref1._, X = ref1.X, O = ref1.O, decode = ref1.decode, empty = ref1.empty, bin = ref1.bin, at = ref1.at, rows = ref1.rows, columns = ref1.columns, diagonals = ref1.diagonals, lines = ref1.lines, isWin = ref1.isWin, winOn = ref1.winOn, isTerminal = ref1.isTerminal, evaluate = ref1.evaluate, BinTicTacToe = ref1.BinTicTacToe;\n\ne = empty;\n\nultimateEmpty = [e, e, e, e, e, e, e, e, e];\n\nrowsU = function(a) {\n  var i, m, ref2, results;\n  results = [];\n  for (i = m = 0, ref2 = 3 * 3; m < ref2; i = m += 3) {\n    results.push(a.slice(i, i + 3));\n  }\n  return results;\n};\n\ncolumnsU = function(a) {\n  var i, m, results;\n  results = [];\n  for (i = m = 0; m < 3; i = ++m) {\n    results.push([a[i], a[i + 3], a[i + 6]]);\n  }\n  return results;\n};\n\ndiagonalsU = function(a) {\n  return [[a[0], a[4], a[8]], [a[2], a[4], a[6]]];\n};\n\nlinesU = function(a) {\n  return slice.call(rowsU(a)).concat(slice.call(columnsU(a)), slice.call(diagonalsU(a)));\n};\n\nisWinU = function(a, W) {\n  var l, len, m, ref2;\n  ref2 = linesU(a);\n  for (m = 0, len = ref2.length; m < len; m++) {\n    l = ref2[m];\n    if (l.every(function(v) {\n      return isWin(v, W);\n    })) {\n      return true;\n    }\n  }\n  return false;\n};\n\nUltimateTicTacToe = (function() {\n  function UltimateTicTacToe(a1, nextPlayer, lastPlayedPosition, depth) {\n    this.a = a1 != null ? a1 : ultimateEmpty;\n    this.nextPlayer = nextPlayer != null ? nextPlayer : X;\n    this.lastPlayedPosition = lastPlayedPosition != null ? lastPlayedPosition : 4;\n    this.depth = depth != null ? depth : 0;\n  }\n\n  UltimateTicTacToe.prototype.at = function(i, j) {\n    return at(this.a[i], j);\n  };\n\n  UltimateTicTacToe.prototype.rows = function() {\n    return rowsU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.columns = function() {\n    return columnsU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.diagonals = function() {\n    return diagonalsU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.lines = function() {\n    return linesU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.isTerminal = function() {\n    return (this.possibleActions().length === 0) || (this.isWin(X)) || (this.isWin(O));\n  };\n\n  UltimateTicTacToe.prototype.isWin = function(W) {\n    return isWinU(this.a, W);\n  };\n\n  UltimateTicTacToe.prototype.winOn = function(i) {\n    return winOn(this.a[i]);\n  };\n\n  UltimateTicTacToe.prototype.nextAgent = function() {\n    if (this.nextPlayer === X) {\n      return MAX;\n    } else {\n      return MIN;\n    }\n  };\n\n  UltimateTicTacToe.prototype.opponent = function(who) {\n    if (who == null) {\n      who = this.nextPlayer;\n    }\n    if (who === X) {\n      return O;\n    } else {\n      return X;\n    }\n  };\n\n  UltimateTicTacToe.prototype.boardsForNextPlay = function() {\n    var i, len, m, ref2, res, v;\n    v = this.lastPlayedPosition != null ? this.a[this.lastPlayedPosition] : null;\n    if ((v != null) && !(isTerminal(v))) {\n      return [this.lastPlayedPosition];\n    } else {\n      res = [];\n      ref2 = this.a;\n      for (i = m = 0, len = ref2.length; m < len; i = ++m) {\n        v = ref2[i];\n        if (!isTerminal(v)) {\n          res.push(i);\n        }\n      }\n      return res;\n    }\n  };\n\n  UltimateTicTacToe.prototype.openPositions = function() {\n    var i, j, js, len, m, n, ref2, res, v;\n    res = [];\n    ref2 = this.boardsForNextPlay();\n    for (m = 0, len = ref2.length; m < len; m++) {\n      i = ref2[m];\n      v = this.a[i];\n      js = [];\n      for (j = n = 0; n < 18; j = n += 2) {\n        if ((0x3 << j & v) === 0) {\n          js.push(j / 2);\n        }\n      }\n      res.push([i, js]);\n    }\n    return res;\n  };\n\n  UltimateTicTacToe.prototype.action = function(ij) {\n    return ij;\n  };\n\n  UltimateTicTacToe.prototype.possibleActions = function() {\n    var i, j, js, len, len1, m, n, ref2, ref3, res;\n    if (this.actions != null) {\n      return this.actions;\n    }\n    res = [];\n    ref2 = this.openPositions();\n    for (m = 0, len = ref2.length; m < len; m++) {\n      ref3 = ref2[m], i = ref3[0], js = ref3[1];\n      for (n = 0, len1 = js.length; n < len1; n++) {\n        j = js[n];\n        res.push([i, j]);\n      }\n    }\n    return this.actions = res;\n  };\n\n  UltimateTicTacToe.prototype.play = function(arg) {\n    var a, i, j;\n    i = arg[0], j = arg[1];\n    a = this.a.slice();\n    a[i] = this.nextPlayer << (j * 2) | a[i];\n    return new this.constructor(a, this.opponent(), j, this.depth + 1);\n  };\n\n  UltimateTicTacToe.prototype.positionForAction = function(action) {\n    return action;\n  };\n\n  UltimateTicTacToe.prototype.utility = function() {\n    var i, j, k, l, len, len1, m, n, ref2, ref3, score, v;\n    score = 0;\n    ref2 = linesU(this.a);\n    for (m = 0, len = ref2.length; m < len; m++) {\n      l = ref2[m];\n      ref3 = [0, 0, 0], i = ref3[0], j = ref3[1], k = ref3[2];\n      for (n = 0, len1 = l.length; n < len1; n++) {\n        v = l[n];\n        if (isWin(v, X)) {\n          ++i;\n        } else if (isWin(v, O)) {\n          ++j;\n        }\n        k += evaluate(v);\n      }\n      if (i === 0 || j === 0) {\n        score += Math.pow(1000, i) - Math.pow(1000, j);\n      }\n      score += k;\n    }\n    return score;\n  };\n\n  UltimateTicTacToe.prototype.toString = function() {\n    var bri, m, n, ri, s, strRows, v, vs;\n    s = '';\n    for (bri = m = 0; m <= 2; bri = ++m) {\n      vs = this.rows()[bri];\n      for (ri = n = 0; n <= 2; ri = ++n) {\n        strRows = (function() {\n          var len, o, results;\n          results = [];\n          for (o = 0, len = vs.length; o < len; o++) {\n            v = vs[o];\n            results.push(\"|\" + (((function() {\n              var len1, p, ref2, results1;\n              ref2 = (rows(v))[ri];\n              results1 = [];\n              for (p = 0, len1 = ref2.length; p < len1; p++) {\n                e = ref2[p];\n                results1.push(decode(e));\n              }\n              return results1;\n            })()).join('|')) + \"|\");\n          }\n          return results;\n        })();\n        s += strRows.join(' ║ ');\n        if (bri < 2 || ri < 2) {\n          s += '\\n';\n        }\n      }\n      if (bri < 2) {\n        s += '════════╬═════════╬════════\\n';\n      }\n    }\n    return s;\n  };\n\n  return UltimateTicTacToe;\n\n})();\n\nmodule.exports = {\n  _: _,\n  X: X,\n  O: O,\n  bin: bin,\n  UltimateTicTacToe: UltimateTicTacToe\n};\n","var MAX, MIN, MinimaxAgent, ref;\n\nref = ['MAX', 'MIN'], MAX = ref[0], MIN = ref[1];\n\nMinimaxAgent = (function() {\n  function MinimaxAgent(depth) {\n    this.depth = depth != null ? depth : Infinity;\n    this.rootAgent = MAX;\n  }\n\n  MinimaxAgent.prototype.nextAction = function(state) {\n    var _, bestAction, ref1;\n    this.rootAgent = state.nextAgent();\n    ref1 = this.minimax(state), _ = ref1[0], bestAction = ref1[1];\n    return bestAction;\n  };\n\n  MinimaxAgent.prototype.minimax = function(state, α, β, ply) {\n    var isTerminal;\n    if (α == null) {\n      α = -Infinity;\n    }\n    if (β == null) {\n      β = +Infinity;\n    }\n    if (ply == null) {\n      ply = 0;\n    }\n    isTerminal = state.isTerminal();\n    if (!isTerminal && state.nextAgent() === this.rootAgent) {\n      ++ply;\n    }\n    if (ply > this.depth || isTerminal) {\n      return [state.utility(), null];\n    } else if (state.nextAgent() === MAX) {\n      return this.maxi(state, α, β, ply);\n    } else {\n      return this.mini(state, α, β, ply);\n    }\n  };\n\n  MinimaxAgent.prototype.maxi = function(state, α, β, ply) {\n    var _, a, action, i, len, nextValue, ref1, ref2, ref3, ref4, successor, v;\n    ref1 = [-Infinity, null], v = ref1[0], a = ref1[1];\n    ref2 = state.possibleActions();\n    for (i = 0, len = ref2.length; i < len; i++) {\n      action = ref2[i];\n      successor = state.play(action);\n      ref3 = this.minimax(successor, α, β, ply), nextValue = ref3[0], _ = ref3[1];\n      if (nextValue > v) {\n        ref4 = [nextValue, action], v = ref4[0], a = ref4[1];\n      }\n      if (v >= β) {\n        return [v, a];\n      }\n      α = Math.max(α, v);\n    }\n    return [v, a];\n  };\n\n  MinimaxAgent.prototype.mini = function(state, α, β, ply) {\n    var _, a, action, i, len, nextValue, ref1, ref2, ref3, ref4, successor, v;\n    ref1 = [+Infinity, null], v = ref1[0], a = ref1[1];\n    ref2 = state.possibleActions();\n    for (i = 0, len = ref2.length; i < len; i++) {\n      action = ref2[i];\n      successor = state.play(action);\n      ref3 = this.minimax(successor, α, β, ply), nextValue = ref3[0], _ = ref3[1];\n      if (nextValue < v) {\n        ref4 = [nextValue, action], v = ref4[0], a = ref4[1];\n      }\n      if (v <= α) {\n        return [v, a];\n      }\n      β = Math.min(β, v);\n    }\n    return [v, a];\n  };\n\n  return MinimaxAgent;\n\n})();\n\nmodule.exports = {\n  MAX: MAX,\n  MIN: MIN,\n  MinimaxAgent: MinimaxAgent\n};\n"],"sourceRoot":"/source/"}