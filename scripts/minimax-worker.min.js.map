{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","app/scripts/minimax-worker.coffee","minimax-worker.min.js","node_modules/aye-aye/lib/games/bin-tic-tac-toe.js","node_modules/aye-aye/lib/games/ultimate-tic-tac-toe.js","node_modules/aye-aye/lib/minimax.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","MinimaxAgent","UltimateTicTacToe","computerPlayer","game","player","self","onmessage","action","depth","lastAction","data","command","args","play","postMessage","agent","isTerminal","nextAction","aye-aye","aye-aye/lib/games/ultimate-tic-tac-toe",2,"BinTicTacToe","MAX","MIN","O","X","_","allPlays","at","bin","changedOn","columns","decode","diagonals","discountedUtility","empty","evaluate","evaluateCache","isFull","isWin","lines","masks","openPositions","opponent","positions","ref","ref1","rows","utility","winOn","γ","slice","W","j","len","res","v","concat","m","ms","w","results","push","v1","v2","Math","pow","k","len1","ref2","ref3","score","x","value1","nextPlayer","depth1","this","value","create","arguments","func","ctor","prototype","child","result","apply","Object","nextAgent","possibleActions","positionForAction","constructor","toString","results1","join","../minimax",3,"columnsU","diagonalsU","isWinU","linesU","rowsU","ultimateEmpty","every","a1","lastPlayedPosition","who","boardsForNextPlay","js","ij","actions","arg","bri","ri","strRows","vs","p","./bin-tic-tac-toe",4,"Infinity","rootAgent","state","bestAction","minimax","α","β","ply","maxi","mini","nextValue","ref4","successor","max","min"],"mappings":"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","file":"minimax-worker.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","{MinimaxAgent} = require 'aye-aye'\n{UltimateTicTacToe} = require 'aye-aye/lib/games/ultimate-tic-tac-toe'\n\nplayer = null\ngame = null\n\nself.onmessage = (e) ->\n  switch e.data.command\n    when 'setup'\n      game = new UltimateTicTacToe\n      depth = e.data.args.depth\n      player = computerPlayer depth\n    when 'play'\n      lastAction = e.data.args.lastAction\n      game = game.play lastAction if lastAction?\n      action = player.play game\n      game = game.play action\n      self.postMessage {action}\n\ncomputerPlayer = (depth = 3) ->\n  agent = new MinimaxAgent depth\n  play: (game) ->\n    return if game.isTerminal()\n    agent.nextAction game\n",null,"var BinTicTacToe, MAX, MIN, O, X, _, allPlays, at, bin, changedOn, columns, decode, diagonals, discountedUtility, empty, evaluate, evaluateCache, isFull, isTerminal, isWin, lines, masks, openPositions, opponent, positions, ref, ref1, rows, utility, winOn, γ,\n  slice = [].slice;\n\nref = require('../minimax'), MAX = ref.MAX, MIN = ref.MIN;\n\nref1 = [0x0, 0x1, 0x2], _ = ref1[0], X = ref1[1], O = ref1[2];\n\nopponent = function(W) {\n  return ~W & 0x3;\n};\n\ndecode = function(W) {\n  return {\n    0x0: ' ',\n    0x1: 'X',\n    0x2: 'O'\n  }[W] || (function() {\n    throw new Error(W);\n  })();\n};\n\nempty = 0x0;\n\nbin = function(a) {\n  var e, i, j, len, res;\n  res = 0;\n  for (i = j = 0, len = a.length; j < len; i = ++j) {\n    e = a[i];\n    res |= e << (i * 2);\n  }\n  return res;\n};\n\nat = function(v, i) {\n  return v >> (i * 2) & 0x3;\n};\n\nrows = function(v) {\n  return [[at(v, 0), at(v, 1), at(v, 2)], [at(v, 3), at(v, 4), at(v, 5)], [at(v, 6), at(v, 7), at(v, 8)]];\n};\n\ncolumns = function(v) {\n  return [[at(v, 0), at(v, 3), at(v, 6)], [at(v, 1), at(v, 4), at(v, 7)], [at(v, 2), at(v, 5), at(v, 8)]];\n};\n\ndiagonals = function(v) {\n  return [[at(v, 0), at(v, 4), at(v, 8)], [at(v, 2), at(v, 4), at(v, 6)]];\n};\n\nlines = function(v) {\n  return slice.call(rows(v)).concat(slice.call(columns(v)), slice.call(diagonals(v)));\n};\n\nisFull = function(v) {\n  var i, j;\n  for (i = j = 0; j < 18; i = j += 2) {\n    if ((0x3 << i & v) === 0) {\n      return false;\n    }\n  }\n  return true;\n};\n\nmasks = {\n  0x1: [0x15, 0x540, 0x15000, 0x1041, 0x4104, 0x10410, 0x10101, 0x1110],\n  0x2: [0x2a, 0xa80, 0x2a000, 0x2082, 0x8208, 0x20820, 0x20202, 0x2220]\n};\n\npositions = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\nisWin = function(v, W) {\n  var j, len, m, ms;\n  ms = masks[W] || (function() {\n    throw new Error(W);\n  })();\n  for (j = 0, len = ms.length; j < len; j++) {\n    m = ms[j];\n    if ((m & v) === m) {\n      return true;\n    }\n  }\n  return false;\n};\n\nwinOn = function(v) {\n  var w;\n  w = function(W) {\n    var i, j, len, m, ms;\n    ms = masks[W];\n    for (i = j = 0, len = ms.length; j < len; i = ++j) {\n      m = ms[i];\n      if ((m & v) === m) {\n        return positions[i];\n      }\n    }\n    return null;\n  };\n  return (w(X)) || (w(O)) || [];\n};\n\nisTerminal = function(v) {\n  return (isFull(v)) || (isWin(v, X)) || (isWin(v, O));\n};\n\nopenPositions = function(v) {\n  var i, j, results;\n  results = [];\n  for (i = j = 0; j < 9; i = ++j) {\n    if ((0x3 << (i * 2) & v) === 0) {\n      results.push(i);\n    }\n  }\n  return results;\n};\n\nallPlays = function(v, W) {\n  var i, j, res;\n  res = [];\n  for (i = j = 0; j < 18; i = j += 2) {\n    if ((0x3 << i & v) === 0) {\n      res.push(W << i | v);\n    }\n  }\n  return res;\n};\n\nchangedOn = function(v1, v2) {\n  var i, j;\n  for (i = j = 0; j < 18; i = ++j) {\n    if ((0x3 << (i * 2) & v1) !== (0x3 << (i * 2) & v2)) {\n      return i;\n    }\n  }\n  return null;\n};\n\nγ = 0.1;\n\ndiscountedUtility = function(v, depth) {\n  if (depth == null) {\n    depth = 0;\n  }\n  return Math.pow(γ, depth) * utility(v);\n};\n\nutility = function(v) {\n  if (isWin(v, X)) {\n    return 2000;\n  } else if (isWin(v, O)) {\n    return -2000;\n  } else if (isFull(v)) {\n    return 0;\n  } else {\n    return evaluate(v);\n  }\n};\n\nevaluateCache = {};\n\nevaluate = function(v) {\n  var j, k, l, len, len1, o, ref2, ref3, score, w, x;\n  if (evaluateCache[v] != null) {\n    return evaluateCache[v];\n  }\n  score = 0;\n  ref2 = lines(v);\n  for (j = 0, len = ref2.length; j < len; j++) {\n    l = ref2[j];\n    ref3 = [0, 0], x = ref3[0], o = ref3[1];\n    for (k = 0, len1 = l.length; k < len1; k++) {\n      w = l[k];\n      if (w === X) {\n        ++x;\n      }\n      if (w === O) {\n        ++o;\n      }\n    }\n    if (x === 0 || o === 0) {\n      score += Math.pow(10, x) - Math.pow(10, o);\n    }\n  }\n  return evaluateCache[v] = score;\n};\n\nBinTicTacToe = (function() {\n  BinTicTacToe.create = function() {\n    var a, args;\n    a = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    if (a == null) {\n      a = [_, _, _, _, _, _, _, _, _];\n    }\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(BinTicTacToe, [bin(a)].concat(slice.call(args)), function(){});\n  };\n\n  function BinTicTacToe(value1, nextPlayer, depth1) {\n    this.value = value1 != null ? value1 : empty;\n    this.nextPlayer = nextPlayer != null ? nextPlayer : X;\n    this.depth = depth1 != null ? depth1 : 0;\n  }\n\n  BinTicTacToe.prototype.at = function(i) {\n    return at(this.value, i);\n  };\n\n  BinTicTacToe.prototype.rows = function() {\n    return rows(this.value);\n  };\n\n  BinTicTacToe.prototype.columns = function() {\n    return columns(this.value);\n  };\n\n  BinTicTacToe.prototype.diagonals = function() {\n    return diagonals(this.value);\n  };\n\n  BinTicTacToe.prototype.lines = function() {\n    return lines(this.value);\n  };\n\n  BinTicTacToe.prototype.isFull = function() {\n    return isFull(this.value);\n  };\n\n  BinTicTacToe.prototype.isWin = function(W) {\n    return isWin(this.value, W);\n  };\n\n  BinTicTacToe.prototype.winOn = function() {\n    return winOn(this.value);\n  };\n\n  BinTicTacToe.prototype.isTerminal = function() {\n    return isTerminal(this.value);\n  };\n\n  BinTicTacToe.prototype.nextAgent = function() {\n    if (this.nextPlayer === X) {\n      return MAX;\n    } else {\n      return MIN;\n    }\n  };\n\n  BinTicTacToe.prototype.openPositions = function() {\n    return openPositions(this.value);\n  };\n\n  BinTicTacToe.prototype.possibleActions = function() {\n    return allPlays(this.value, this.nextPlayer);\n  };\n\n  BinTicTacToe.prototype.action = function(i) {\n    return this.nextPlayer << (i * 2) | this.value;\n  };\n\n  BinTicTacToe.prototype.positionForAction = function(action) {\n    return changedOn(this.value, action);\n  };\n\n  BinTicTacToe.prototype.play = function(value) {\n    return new this.constructor(value, this.opponent(), this.depth + 1);\n  };\n\n  BinTicTacToe.prototype.utility = function() {\n    return utility(this.value);\n  };\n\n  BinTicTacToe.prototype.opponent = function(W) {\n    if (W == null) {\n      W = this.nextPlayer;\n    }\n    return opponent(W);\n  };\n\n  BinTicTacToe.prototype.toString = function() {\n    var e, r;\n    return ((function() {\n      var j, len, ref2, results;\n      ref2 = this.rows();\n      results = [];\n      for (j = 0, len = ref2.length; j < len; j++) {\n        r = ref2[j];\n        results.push(\"|\" + (((function() {\n          var k, len1, results1;\n          results1 = [];\n          for (k = 0, len1 = r.length; k < len1; k++) {\n            e = r[k];\n            results1.push(decode(e));\n          }\n          return results1;\n        })()).join('|')) + \"|\");\n      }\n      return results;\n    }).call(this)).join(\"\\n\");\n  };\n\n  return BinTicTacToe;\n\n})();\n\nmodule.exports = {\n  _: _,\n  X: X,\n  O: O,\n  opponent: opponent,\n  decode: decode,\n  empty: empty,\n  bin: bin,\n  at: at,\n  rows: rows,\n  columns: columns,\n  diagonals: diagonals,\n  lines: lines,\n  isFull: isFull,\n  isWin: isWin,\n  isTerminal: isTerminal,\n  openPositions: openPositions,\n  allPlays: allPlays,\n  changedOn: changedOn,\n  winOn: winOn,\n  discountedUtility: discountedUtility,\n  utility: utility,\n  evaluate: evaluate,\n  BinTicTacToe: BinTicTacToe\n};\n","var BinTicTacToe, MAX, MIN, O, UltimateTicTacToe, X, _, at, bin, columns, columnsU, decode, diagonals, diagonalsU, e, empty, evaluate, isTerminal, isWin, isWinU, lines, linesU, ref, ref1, rows, rowsU, ultimateEmpty, winOn,\n  slice = [].slice;\n\nref = require('../minimax'), MAX = ref.MAX, MIN = ref.MIN;\n\nref1 = require('./bin-tic-tac-toe'), _ = ref1._, X = ref1.X, O = ref1.O, decode = ref1.decode, empty = ref1.empty, bin = ref1.bin, at = ref1.at, rows = ref1.rows, columns = ref1.columns, diagonals = ref1.diagonals, lines = ref1.lines, isWin = ref1.isWin, winOn = ref1.winOn, isTerminal = ref1.isTerminal, evaluate = ref1.evaluate, BinTicTacToe = ref1.BinTicTacToe;\n\ne = empty;\n\nultimateEmpty = [e, e, e, e, e, e, e, e, e];\n\nrowsU = function(a) {\n  var i, m, ref2, results;\n  results = [];\n  for (i = m = 0, ref2 = 3 * 3; m < ref2; i = m += 3) {\n    results.push(a.slice(i, i + 3));\n  }\n  return results;\n};\n\ncolumnsU = function(a) {\n  var i, m, results;\n  results = [];\n  for (i = m = 0; m < 3; i = ++m) {\n    results.push([a[i], a[i + 3], a[i + 6]]);\n  }\n  return results;\n};\n\ndiagonalsU = function(a) {\n  return [[a[0], a[4], a[8]], [a[2], a[4], a[6]]];\n};\n\nlinesU = function(a) {\n  return slice.call(rowsU(a)).concat(slice.call(columnsU(a)), slice.call(diagonalsU(a)));\n};\n\nisWinU = function(a, W) {\n  var l, len, m, ref2;\n  ref2 = linesU(a);\n  for (m = 0, len = ref2.length; m < len; m++) {\n    l = ref2[m];\n    if (l.every(function(v) {\n      return isWin(v, W);\n    })) {\n      return true;\n    }\n  }\n  return false;\n};\n\nUltimateTicTacToe = (function() {\n  function UltimateTicTacToe(a1, nextPlayer, lastPlayedPosition, depth) {\n    this.a = a1 != null ? a1 : ultimateEmpty;\n    this.nextPlayer = nextPlayer != null ? nextPlayer : X;\n    this.lastPlayedPosition = lastPlayedPosition != null ? lastPlayedPosition : 4;\n    this.depth = depth != null ? depth : 0;\n  }\n\n  UltimateTicTacToe.prototype.at = function(i, j) {\n    return at(this.a[i], j);\n  };\n\n  UltimateTicTacToe.prototype.rows = function() {\n    return rowsU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.columns = function() {\n    return columnsU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.diagonals = function() {\n    return diagonalsU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.lines = function() {\n    return linesU(this.a);\n  };\n\n  UltimateTicTacToe.prototype.isTerminal = function() {\n    return (this.possibleActions().length === 0) || (this.isWin(X)) || (this.isWin(O));\n  };\n\n  UltimateTicTacToe.prototype.isWin = function(W) {\n    return isWinU(this.a, W);\n  };\n\n  UltimateTicTacToe.prototype.winOn = function(i) {\n    return winOn(this.a[i]);\n  };\n\n  UltimateTicTacToe.prototype.nextAgent = function() {\n    if (this.nextPlayer === X) {\n      return MAX;\n    } else {\n      return MIN;\n    }\n  };\n\n  UltimateTicTacToe.prototype.opponent = function(who) {\n    if (who == null) {\n      who = this.nextPlayer;\n    }\n    if (who === X) {\n      return O;\n    } else {\n      return X;\n    }\n  };\n\n  UltimateTicTacToe.prototype.boardsForNextPlay = function() {\n    var i, len, m, ref2, res, v;\n    v = this.lastPlayedPosition != null ? this.a[this.lastPlayedPosition] : null;\n    if ((v != null) && !(isTerminal(v))) {\n      return [this.lastPlayedPosition];\n    } else {\n      res = [];\n      ref2 = this.a;\n      for (i = m = 0, len = ref2.length; m < len; i = ++m) {\n        v = ref2[i];\n        if (!isTerminal(v)) {\n          res.push(i);\n        }\n      }\n      return res;\n    }\n  };\n\n  UltimateTicTacToe.prototype.openPositions = function() {\n    var i, j, js, len, m, n, ref2, res, v;\n    res = [];\n    ref2 = this.boardsForNextPlay();\n    for (m = 0, len = ref2.length; m < len; m++) {\n      i = ref2[m];\n      v = this.a[i];\n      js = [];\n      for (j = n = 0; n < 18; j = n += 2) {\n        if ((0x3 << j & v) === 0) {\n          js.push(j / 2);\n        }\n      }\n      res.push([i, js]);\n    }\n    return res;\n  };\n\n  UltimateTicTacToe.prototype.action = function(ij) {\n    return ij;\n  };\n\n  UltimateTicTacToe.prototype.possibleActions = function() {\n    var i, j, js, len, len1, m, n, ref2, ref3, res;\n    if (this.actions != null) {\n      return this.actions;\n    }\n    res = [];\n    ref2 = this.openPositions();\n    for (m = 0, len = ref2.length; m < len; m++) {\n      ref3 = ref2[m], i = ref3[0], js = ref3[1];\n      for (n = 0, len1 = js.length; n < len1; n++) {\n        j = js[n];\n        res.push([i, j]);\n      }\n    }\n    return this.actions = res;\n  };\n\n  UltimateTicTacToe.prototype.play = function(arg) {\n    var a, i, j;\n    i = arg[0], j = arg[1];\n    a = this.a.slice();\n    a[i] = this.nextPlayer << (j * 2) | a[i];\n    return new this.constructor(a, this.opponent(), j, this.depth + 1);\n  };\n\n  UltimateTicTacToe.prototype.positionForAction = function(action) {\n    return action;\n  };\n\n  UltimateTicTacToe.prototype.utility = function() {\n    var i, j, k, l, len, len1, m, n, ref2, ref3, score, v;\n    score = 0;\n    ref2 = linesU(this.a);\n    for (m = 0, len = ref2.length; m < len; m++) {\n      l = ref2[m];\n      ref3 = [0, 0, 0], i = ref3[0], j = ref3[1], k = ref3[2];\n      for (n = 0, len1 = l.length; n < len1; n++) {\n        v = l[n];\n        if (isWin(v, X)) {\n          ++i;\n        } else if (isWin(v, O)) {\n          ++j;\n        }\n        k += evaluate(v);\n      }\n      if (i === 0 || j === 0) {\n        score += Math.pow(1000, i) - Math.pow(1000, j);\n      }\n      score += k;\n    }\n    return score;\n  };\n\n  UltimateTicTacToe.prototype.toString = function() {\n    var bri, m, n, ri, s, strRows, v, vs;\n    s = '';\n    for (bri = m = 0; m <= 2; bri = ++m) {\n      vs = this.rows()[bri];\n      for (ri = n = 0; n <= 2; ri = ++n) {\n        strRows = (function() {\n          var len, o, results;\n          results = [];\n          for (o = 0, len = vs.length; o < len; o++) {\n            v = vs[o];\n            results.push(\"|\" + (((function() {\n              var len1, p, ref2, results1;\n              ref2 = (rows(v))[ri];\n              results1 = [];\n              for (p = 0, len1 = ref2.length; p < len1; p++) {\n                e = ref2[p];\n                results1.push(decode(e));\n              }\n              return results1;\n            })()).join('|')) + \"|\");\n          }\n          return results;\n        })();\n        s += strRows.join(' ║ ');\n        if (bri < 2 || ri < 2) {\n          s += '\\n';\n        }\n      }\n      if (bri < 2) {\n        s += '════════╬═════════╬════════\\n';\n      }\n    }\n    return s;\n  };\n\n  return UltimateTicTacToe;\n\n})();\n\nmodule.exports = {\n  _: _,\n  X: X,\n  O: O,\n  bin: bin,\n  UltimateTicTacToe: UltimateTicTacToe\n};\n","var MAX, MIN, MinimaxAgent, ref;\n\nref = ['MAX', 'MIN'], MAX = ref[0], MIN = ref[1];\n\nMinimaxAgent = (function() {\n  function MinimaxAgent(depth) {\n    this.depth = depth != null ? depth : Infinity;\n    this.rootAgent = MAX;\n  }\n\n  MinimaxAgent.prototype.nextAction = function(state) {\n    var _, bestAction, ref1;\n    this.rootAgent = state.nextAgent();\n    ref1 = this.minimax(state), _ = ref1[0], bestAction = ref1[1];\n    return bestAction;\n  };\n\n  MinimaxAgent.prototype.minimax = function(state, α, β, ply) {\n    var isTerminal;\n    if (α == null) {\n      α = -Infinity;\n    }\n    if (β == null) {\n      β = +Infinity;\n    }\n    if (ply == null) {\n      ply = 0;\n    }\n    isTerminal = state.isTerminal();\n    if (!isTerminal && state.nextAgent() === this.rootAgent) {\n      ++ply;\n    }\n    if (ply > this.depth || isTerminal) {\n      return [state.utility(), null];\n    } else if (state.nextAgent() === MAX) {\n      return this.maxi(state, α, β, ply);\n    } else {\n      return this.mini(state, α, β, ply);\n    }\n  };\n\n  MinimaxAgent.prototype.maxi = function(state, α, β, ply) {\n    var _, a, action, i, len, nextValue, ref1, ref2, ref3, ref4, successor, v;\n    ref1 = [-Infinity, null], v = ref1[0], a = ref1[1];\n    ref2 = state.possibleActions();\n    for (i = 0, len = ref2.length; i < len; i++) {\n      action = ref2[i];\n      successor = state.play(action);\n      ref3 = this.minimax(successor, α, β, ply), nextValue = ref3[0], _ = ref3[1];\n      if (nextValue > v) {\n        ref4 = [nextValue, action], v = ref4[0], a = ref4[1];\n      }\n      if (v >= β) {\n        return [v, a];\n      }\n      α = Math.max(α, v);\n    }\n    return [v, a];\n  };\n\n  MinimaxAgent.prototype.mini = function(state, α, β, ply) {\n    var _, a, action, i, len, nextValue, ref1, ref2, ref3, ref4, successor, v;\n    ref1 = [+Infinity, null], v = ref1[0], a = ref1[1];\n    ref2 = state.possibleActions();\n    for (i = 0, len = ref2.length; i < len; i++) {\n      action = ref2[i];\n      successor = state.play(action);\n      ref3 = this.minimax(successor, α, β, ply), nextValue = ref3[0], _ = ref3[1];\n      if (nextValue < v) {\n        ref4 = [nextValue, action], v = ref4[0], a = ref4[1];\n      }\n      if (v <= α) {\n        return [v, a];\n      }\n      β = Math.min(β, v);\n    }\n    return [v, a];\n  };\n\n  return MinimaxAgent;\n\n})();\n\nmodule.exports = {\n  MAX: MAX,\n  MIN: MIN,\n  MinimaxAgent: MinimaxAgent\n};\n"],"sourceRoot":"/source/"}